; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -o.\obj\nano1xx_lcd.o --depend=.\obj\nano1xx_lcd.d --feedback=.\obj\START_KIT.fed --cpu=Cortex-M0 --apcs=interwork -O0 -I..\..\..\..\Libraries\CMSIS\Include -I..\..\..\..\Libraries\Device\Nuvoton\NANO1xx\Include -I..\..\..\..\Libraries\NANO1xx_Drivers\Include -I..\..\..\..\Libraries\NANO1xx_Libs\SDCardLib -I..\KEIL -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\Nuvoton -D__MICROLIB -D__LCDDISPLAY_BTL001_LB_H --omf_browse=.\obj\nano1xx_lcd.crf ..\..\..\..\Libraries\NANO1xx_Drivers\Source\nano1xx_lcd.c]
                          THUMB

                          AREA ||i.LCD_AllOff||, CODE, READONLY, ALIGN=2

                  LCD_AllOff PROC
;;;542     */
;;;543    void LCD_AllOff(void)
000000  2000              MOVS     r0,#0
;;;544    {
;;;545    	LCD->MEM_0 = 0x00000000;
000002  4906              LDR      r1,|L1.28|
000004  6088              STR      r0,[r1,#8]
;;;546      	LCD->MEM_1 = 0x00000000;
000006  60c8              STR      r0,[r1,#0xc]
;;;547      	LCD->MEM_2 = 0x00000000;
000008  6108              STR      r0,[r1,#0x10]
;;;548      	LCD->MEM_3 = 0x00000000;
00000a  6148              STR      r0,[r1,#0x14]
;;;549    	LCD->MEM_4 = 0x00000000;
00000c  6188              STR      r0,[r1,#0x18]
;;;550    	LCD->MEM_5 = 0x00000000;
00000e  61c8              STR      r0,[r1,#0x1c]
;;;551    	LCD->MEM_6 = 0x00000000;
000010  6208              STR      r0,[r1,#0x20]
;;;552    	LCD->MEM_7 = 0x00000000;
000012  6248              STR      r0,[r1,#0x24]
;;;553    	LCD->MEM_8 = 0x00000000;
000014  6288              STR      r0,[r1,#0x28]
;;;554    	LCD->MEM_9 = 0x00000000;
000016  62c8              STR      r0,[r1,#0x2c]
;;;555    }
000018  4770              BX       lr
;;;556    
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0x400b0000

                          AREA ||i.LCD_AllOn||, CODE, READONLY, ALIGN=2

                  LCD_AllOn PROC
;;;572     */
;;;573    void LCD_AllOn(void)
000000  2000              MOVS     r0,#0
;;;574    {
;;;575      	LCD->MEM_0 = 0xffffffff;
000002  43c0              MVNS     r0,r0
000004  4905              LDR      r1,|L2.28|
000006  6088              STR      r0,[r1,#8]
;;;576      	LCD->MEM_1 = 0xffffffff;
000008  60c8              STR      r0,[r1,#0xc]
;;;577      	LCD->MEM_2 = 0xffffffff;
00000a  6108              STR      r0,[r1,#0x10]
;;;578      	LCD->MEM_3 = 0xffffffff;	
00000c  6148              STR      r0,[r1,#0x14]
;;;579    	LCD->MEM_4 = 0xffffffff;
00000e  6188              STR      r0,[r1,#0x18]
;;;580    	LCD->MEM_5 = 0xffffffff;
000010  61c8              STR      r0,[r1,#0x1c]
;;;581    	LCD->MEM_6 = 0xffffffff;
000012  6208              STR      r0,[r1,#0x20]
;;;582    	LCD->MEM_7 = 0xffffffff;
000014  6248              STR      r0,[r1,#0x24]
;;;583    #ifdef LCD_LQFP100_PIN	
;;;584    	LCD->MEM_8 = 0xffffffff;
000016  6288              STR      r0,[r1,#0x28]
;;;585    	LCD->MEM_9 = 0xffffffff;
000018  62c8              STR      r0,[r1,#0x2c]
;;;586    #endif	
;;;587    }
00001a  4770              BX       lr
;;;588    
                          ENDP

                  |L2.28|
                          DCD      0x400b0000

                          AREA ||i.LCD_AlphaNumberOff||, CODE, READONLY, ALIGN=2

                  LCD_AlphaNumberOff PROC
;;;415     */
;;;416    void LCD_AlphaNumberOff(void)
000000  4812              LDR      r0,|L3.76|
;;;417    {
;;;418      	/* Turn off all number segments */
;;;419    #ifdef __LCDDISPLAY_PD_878_H	
;;;420      	LCD->MEM_0 &= 0x00000000;
;;;421      	LCD->MEM_1 &= 0x00000000;
;;;422      	LCD->MEM_2 &= 0x00000000;
;;;423      	LCD->MEM_3 &= 0x00000000;
;;;424    	LCD->MEM_4 &= 0x00000000;
;;;425    	LCD->MEM_5 &= 0x00000000;
;;;426    	LCD->MEM_6 &= 0x00000000;
;;;427    	LCD->MEM_7 &= 0x00000000;
;;;428    	LCD->MEM_8 &= 0x00000000;
;;;429    	LCD->MEM_9 &= 0x00000000;
;;;430    #endif
;;;431    #ifdef __LCDDISPLAY_BTL001_H
;;;432    	#ifdef __NANO100A__
;;;433    	LCD->MEM_0 &= ~0x0f0f0f0f;
;;;434      	LCD->MEM_1 &= ~0x0f0f0f0f;
;;;435      	LCD->MEM_2 &= ~0x0f0f0f0f;
;;;436      	LCD->MEM_3 &= ~0x0f0f0f0f;
;;;437    	LCD->MEM_4 &= ~0x0f0f0f0f;
;;;438    	LCD->MEM_5 &= ~0x0f070f0f;
;;;439    	LCD->MEM_6 &= ~0x00000f0f;
;;;440    	#else
;;;441    	LCD->MEM_0 &= ~0x0f0f0f0f;
;;;442      	LCD->MEM_1 &= ~0x0f0f0f0f; 
;;;443      	LCD->MEM_2 &= ~0x0f0f0f0f; 
;;;444      	LCD->MEM_3 &= ~0x0f0f0f0f;
;;;445    	LCD->MEM_4 &= ~0x0f0f0f0f; 
;;;446    	LCD->MEM_5 &= ~0x0f070f0f;
;;;447    	LCD->MEM_6 &= ~0x00000f0f;
;;;448    	LCD->MEM_9 &= ~0x0f060000;
;;;449    	#endif
;;;450    #endif
;;;451    #ifdef __LCDDISPLAY_BTL001_LB_H
;;;452      	LCD->MEM_2 &= ~0x0f0f0f0f;
000002  6900              LDR      r0,[r0,#0x10]
000004  4912              LDR      r1,|L3.80|
000006  4008              ANDS     r0,r0,r1
000008  4910              LDR      r1,|L3.76|
00000a  6108              STR      r0,[r1,#0x10]
;;;453      	LCD->MEM_3 &= ~0x0f0f0000;
00000c  4608              MOV      r0,r1
00000e  6940              LDR      r0,[r0,#0x14]
000010  4910              LDR      r1,|L3.84|
000012  4008              ANDS     r0,r0,r1
000014  490d              LDR      r1,|L3.76|
000016  6148              STR      r0,[r1,#0x14]
;;;454    	LCD->MEM_4 &= ~0x0f0f0f0f;
000018  4608              MOV      r0,r1
00001a  6980              LDR      r0,[r0,#0x18]
00001c  490c              LDR      r1,|L3.80|
00001e  4008              ANDS     r0,r0,r1
000020  490a              LDR      r1,|L3.76|
000022  6188              STR      r0,[r1,#0x18]
;;;455    	LCD->MEM_5 &= ~0x0f0f0000;
000024  4608              MOV      r0,r1
000026  69c0              LDR      r0,[r0,#0x1c]
000028  490a              LDR      r1,|L3.84|
00002a  4008              ANDS     r0,r0,r1
00002c  4907              LDR      r1,|L3.76|
00002e  61c8              STR      r0,[r1,#0x1c]
;;;456    	LCD->MEM_6 &= ~0x00000f0f;
000030  4608              MOV      r0,r1
000032  6a00              LDR      r0,[r0,#0x20]
000034  4908              LDR      r1,|L3.88|
000036  4008              ANDS     r0,r0,r1
000038  4904              LDR      r1,|L3.76|
00003a  6208              STR      r0,[r1,#0x20]
;;;457    	LCD->MEM_8 &= ~0x00000f0f;
00003c  4608              MOV      r0,r1
00003e  6a80              LDR      r0,[r0,#0x28]
000040  4905              LDR      r1,|L3.88|
000042  4008              ANDS     r0,r0,r1
000044  4901              LDR      r1,|L3.76|
000046  6288              STR      r0,[r1,#0x28]
;;;458    #endif
;;;459      	return;
;;;460    }
000048  4770              BX       lr
;;;461    
                          ENDP

00004a  0000              DCW      0x0000
                  |L3.76|
                          DCD      0x400b0000
                  |L3.80|
                          DCD      0xf0f0f0f0
                  |L3.84|
                          DCD      0xf0f0ffff
                  |L3.88|
                          DCD      0xfffff0f0

                          AREA ||i.LCD_BlinkFrequency||, CODE, READONLY, ALIGN=2

                  LCD_BlinkFrequency PROC
;;;1586    */
;;;1587   int32_t LCD_BlinkFrequency(double mdelay)
000000  b5f0              PUSH     {r4-r7,lr}
;;;1588   {
000002  b08b              SUB      sp,sp,#0x2c
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
;;;1589   	uint32_t prescale=LCD_FCPRESC_DIV1, div=1;
000008  2000              MOVS     r0,#0
00000a  900a              STR      r0,[sp,#0x28]
00000c  2401              MOVS     r4,#1
;;;1590   	uint32_t framecount;
;;;1591   
;;;1592   	LCDDEBUG("In present, frame rate is %f Hz \n", g_LCDFrameRate);
;;;1593   
;;;1594   	framecount = (uint32_t) (mdelay / ((1/g_LCDFrameRate)*1000)) ;
00000e  483c              LDR      r0,|L4.256|
000010  c80c              LDM      r0!,{r2,r3}
000012  2000              MOVS     r0,#0
000014  493b              LDR      r1,|L4.260|
000016  f7fffffe          BL       __aeabi_ddiv
00001a  2200              MOVS     r2,#0
00001c  4b3a              LDR      r3,|L4.264|
00001e  9105              STR      r1,[sp,#0x14]
000020  9004              STR      r0,[sp,#0x10]
000022  f7fffffe          BL       __aeabi_dmul
000026  4602              MOV      r2,r0
000028  460b              MOV      r3,r1
00002a  9107              STR      r1,[sp,#0x1c]
00002c  9006              STR      r0,[sp,#0x18]
00002e  4630              MOV      r0,r6
000030  4639              MOV      r1,r7
000032  f7fffffe          BL       __aeabi_ddiv
000036  9109              STR      r1,[sp,#0x24]
000038  9008              STR      r0,[sp,#0x20]
00003a  f7fffffe          BL       __aeabi_d2uiz
00003e  4605              MOV      r5,r0
;;;1595   
;;;1596   	if(framecount > 0x3F) 
000040  2d3f              CMP      r5,#0x3f
000042  d940              BLS      |L4.198|
;;;1597   	{
;;;1598   		for(div=2; div<=8; div*=2)
000044  2402              MOVS     r4,#2
000046  e029              B        |L4.156|
                  |L4.72|
;;;1599   		{
;;;1600   			framecount = (uint32_t) (mdelay / ((1/(g_LCDFrameRate/div)*1000) ));
000048  4620              MOV      r0,r4
00004a  f7fffffe          BL       __aeabi_ui2d
00004e  4602              MOV      r2,r0
000050  460b              MOV      r3,r1
000052  9101              STR      r1,[sp,#4]
000054  9000              STR      r0,[sp,#0]
000056  492a              LDR      r1,|L4.256|
000058  c903              LDM      r1,{r0,r1}
00005a  f7fffffe          BL       __aeabi_ddiv
00005e  4602              MOV      r2,r0
000060  460b              MOV      r3,r1
000062  9103              STR      r1,[sp,#0xc]
000064  9002              STR      r0,[sp,#8]
000066  2000              MOVS     r0,#0
000068  4926              LDR      r1,|L4.260|
00006a  f7fffffe          BL       __aeabi_ddiv
00006e  2200              MOVS     r2,#0
000070  4b25              LDR      r3,|L4.264|
000072  9105              STR      r1,[sp,#0x14]
000074  9004              STR      r0,[sp,#0x10]
000076  f7fffffe          BL       __aeabi_dmul
00007a  4602              MOV      r2,r0
00007c  460b              MOV      r3,r1
00007e  9107              STR      r1,[sp,#0x1c]
000080  9006              STR      r0,[sp,#0x18]
000082  4630              MOV      r0,r6
000084  4639              MOV      r1,r7
000086  f7fffffe          BL       __aeabi_ddiv
00008a  9109              STR      r1,[sp,#0x24]
00008c  9008              STR      r0,[sp,#0x20]
00008e  f7fffffe          BL       __aeabi_d2uiz
000092  4605              MOV      r5,r0
;;;1601   			if( framecount <= 0x40 )
000094  2d40              CMP      r5,#0x40
000096  d800              BHI      |L4.154|
;;;1602   				break;
000098  e002              B        |L4.160|
                  |L4.154|
00009a  0064              LSLS     r4,r4,#1              ;1598
                  |L4.156|
00009c  2c08              CMP      r4,#8                 ;1598
00009e  d9d3              BLS      |L4.72|
                  |L4.160|
0000a0  bf00              NOP      
;;;1603   		}
;;;1604   		if(div==2) prescale = LCD_FCPRESC_DIV2;
0000a2  2c02              CMP      r4,#2
0000a4  d102              BNE      |L4.172|
0000a6  2004              MOVS     r0,#4
0000a8  900a              STR      r0,[sp,#0x28]
0000aa  e00f              B        |L4.204|
                  |L4.172|
;;;1605   		else if(div==4) prescale = LCD_FCPRESC_DIV4;
0000ac  2c04              CMP      r4,#4
0000ae  d102              BNE      |L4.182|
0000b0  2008              MOVS     r0,#8
0000b2  900a              STR      r0,[sp,#0x28]
0000b4  e00a              B        |L4.204|
                  |L4.182|
;;;1606   		else if(div==8) prescale = LCD_FCPRESC_DIV8;
0000b6  2c08              CMP      r4,#8
0000b8  d102              BNE      |L4.192|
0000ba  200c              MOVS     r0,#0xc
0000bc  900a              STR      r0,[sp,#0x28]
0000be  e005              B        |L4.204|
                  |L4.192|
;;;1607   		else return ERR_LCD_CAL_BLINK_FAIL;
0000c0  4812              LDR      r0,|L4.268|
                  |L4.194|
;;;1608   	} 
;;;1609   	else if(framecount == 0)
;;;1610   	{
;;;1611   		framecount = 1;
;;;1612   	}
;;;1613   	LCDDEBUG("Actual blinking frequency %f second(s) \n", (1/(g_LCDFrameRate/div))*(framecount) );
;;;1614   	LCDDEBUG("FCV=%d, PreScale divider=%d \n", framecount, div);
;;;1615   
;;;1616   	LCD->FCR = LCD->FCR & ~LCD_FCR_PRESCL | prescale;
;;;1617   	LCD->FCR = LCD->FCR & ~LCD_FCR_FCV | ((framecount - 1) << LCD_FCR_FCV_BIT_ADDR);
;;;1618   	LCD->FCR |= LCD_FCR_FCEN;
;;;1619   	
;;;1620   	return 0;
;;;1621   }
0000c2  b00b              ADD      sp,sp,#0x2c
0000c4  bdf0              POP      {r4-r7,pc}
                  |L4.198|
0000c6  2d00              CMP      r5,#0                 ;1609
0000c8  d100              BNE      |L4.204|
0000ca  2501              MOVS     r5,#1                 ;1611
                  |L4.204|
0000cc  4810              LDR      r0,|L4.272|
0000ce  6b00              LDR      r0,[r0,#0x30]         ;1616
0000d0  210c              MOVS     r1,#0xc               ;1616
0000d2  4388              BICS     r0,r0,r1              ;1616
0000d4  990a              LDR      r1,[sp,#0x28]         ;1616
0000d6  4308              ORRS     r0,r0,r1              ;1616
0000d8  490d              LDR      r1,|L4.272|
0000da  6308              STR      r0,[r1,#0x30]         ;1616
0000dc  4608              MOV      r0,r1                 ;1617
0000de  6b00              LDR      r0,[r0,#0x30]         ;1617
0000e0  213f              MOVS     r1,#0x3f              ;1617
0000e2  0109              LSLS     r1,r1,#4              ;1617
0000e4  4388              BICS     r0,r0,r1              ;1617
0000e6  1e69              SUBS     r1,r5,#1              ;1617
0000e8  0109              LSLS     r1,r1,#4              ;1617
0000ea  4308              ORRS     r0,r0,r1              ;1617
0000ec  4908              LDR      r1,|L4.272|
0000ee  6308              STR      r0,[r1,#0x30]         ;1617
0000f0  4608              MOV      r0,r1                 ;1618
0000f2  6b00              LDR      r0,[r0,#0x30]         ;1618
0000f4  2101              MOVS     r1,#1                 ;1618
0000f6  4308              ORRS     r0,r0,r1              ;1618
0000f8  4905              LDR      r1,|L4.272|
0000fa  6308              STR      r0,[r1,#0x30]         ;1618
0000fc  2000              MOVS     r0,#0                 ;1620
0000fe  e7e0              B        |L4.194|
;;;1622    
                          ENDP

                  |L4.256|
                          DCD      g_LCDFrameRate
                  |L4.260|
                          DCD      0x3ff00000
                  |L4.264|
                          DCD      0x408f4000
                  |L4.268|
                          DCD      0xffff0000
                  |L4.272|
                          DCD      0x400b0000

                          AREA ||i.LCD_ChargePumpInit||, CODE, READONLY, ALIGN=2

                  LCD_ChargePumpInit PROC
;;;684     */
;;;685    void LCD_ChargePumpInit(S_LCD_INIT *lcdinit)
000000  b510              PUSH     {r4,lr}
;;;686    {
000002  4604              MOV      r4,r0
;;;687    
;;;688      	if (lcdinit->cpump_enable==false)
000004  7820              LDRB     r0,[r4,#0]
000006  2800              CMP      r0,#0
000008  d106              BNE      |L5.24|
;;;689      	{
;;;690    		/* disable charge pump */
;;;691    		LCD->DISPCTL &= ~LCD_DISPCTL_CPUMP_EN;		// Disable charge pump	
00000a  481d              LDR      r0,|L5.128|
00000c  6840              LDR      r0,[r0,#4]
00000e  0840              LSRS     r0,r0,#1
000010  0040              LSLS     r0,r0,#1
000012  491b              LDR      r1,|L5.128|
000014  6048              STR      r0,[r1,#4]
                  |L5.22|
;;;692    		return ;
;;;693      	}
;;;694    
;;;695    	LCD->DISPCTL &= ~LCD_DISPCTL_BV_SEL;		// internal source for charge pump
;;;696        LCD->DISPCTL = LCD->DISPCTL & ~LCD_DISPCTL_CPUMP_FREQ | lcdinit->cpump_freqdiv;
;;;697        LCD->DISPCTL = LCD->DISPCTL & ~LCD_DISPCTL_CPUMP_VOL_SET | lcdinit->cpump_voltage;
;;;698    	LCD->DISPCTL &= ~LCD_DISPCTL_IBRL_EN;
;;;699    	LCD->DISPCTL |= (lcdinit->internal_bias==true)?LCD_DISPCTL_IBRL_EN:0;
;;;700    	LCD->DISPCTL |= LCD_DISPCTL_CPUMP_EN;		// enable charge pump
;;;701    
;;;702    	/* record the frequency in charge pump */
;;;703    	LCD_UpdateChargePumpFreq();
;;;704     
;;;705    }
000016  bd10              POP      {r4,pc}
                  |L5.24|
000018  4819              LDR      r0,|L5.128|
00001a  6840              LDR      r0,[r0,#4]            ;695
00001c  2140              MOVS     r1,#0x40              ;695
00001e  4388              BICS     r0,r0,r1              ;695
000020  4917              LDR      r1,|L5.128|
000022  6048              STR      r0,[r1,#4]            ;695
000024  4608              MOV      r0,r1                 ;696
000026  6840              LDR      r0,[r0,#4]            ;696
000028  2107              MOVS     r1,#7                 ;696
00002a  02c9              LSLS     r1,r1,#11             ;696
00002c  4388              BICS     r0,r0,r1              ;696
00002e  6921              LDR      r1,[r4,#0x10]         ;696
000030  4308              ORRS     r0,r0,r1              ;696
000032  4913              LDR      r1,|L5.128|
000034  6048              STR      r0,[r1,#4]            ;696
000036  4608              MOV      r0,r1                 ;697
000038  6840              LDR      r0,[r0,#4]            ;697
00003a  2107              MOVS     r1,#7                 ;697
00003c  0209              LSLS     r1,r1,#8              ;697
00003e  4388              BICS     r0,r0,r1              ;697
000040  6961              LDR      r1,[r4,#0x14]         ;697
000042  4308              ORRS     r0,r0,r1              ;697
000044  490e              LDR      r1,|L5.128|
000046  6048              STR      r0,[r1,#4]            ;697
000048  4608              MOV      r0,r1                 ;698
00004a  6840              LDR      r0,[r0,#4]            ;698
00004c  2110              MOVS     r1,#0x10              ;698
00004e  4388              BICS     r0,r0,r1              ;698
000050  490b              LDR      r1,|L5.128|
000052  6048              STR      r0,[r1,#4]            ;698
000054  4608              MOV      r0,r1                 ;699
000056  6840              LDR      r0,[r0,#4]            ;699
000058  7861              LDRB     r1,[r4,#1]            ;699
00005a  2901              CMP      r1,#1                 ;699
00005c  d101              BNE      |L5.98|
00005e  2110              MOVS     r1,#0x10              ;699
000060  e000              B        |L5.100|
                  |L5.98|
000062  2100              MOVS     r1,#0                 ;699
                  |L5.100|
000064  4308              ORRS     r0,r0,r1              ;699
000066  4906              LDR      r1,|L5.128|
000068  6048              STR      r0,[r1,#4]            ;699
00006a  4608              MOV      r0,r1                 ;700
00006c  6840              LDR      r0,[r0,#4]            ;700
00006e  2101              MOVS     r1,#1                 ;700
000070  4308              ORRS     r0,r0,r1              ;700
000072  4903              LDR      r1,|L5.128|
000074  6048              STR      r0,[r1,#4]            ;700
000076  f7fffffe          BL       LCD_UpdateChargePumpFreq
00007a  bf00              NOP      
00007c  e7cb              B        |L5.22|
;;;706    
                          ENDP

00007e  0000              DCW      0x0000
                  |L5.128|
                          DCD      0x400b0000

                          AREA ||i.LCD_DeInit||, CODE, READONLY, ALIGN=2

                  LCD_DeInit PROC
;;;1560    */
;;;1561   void LCD_DeInit(void)
000000  b510              PUSH     {r4,lr}
;;;1562   {
;;;1563   	LCD_Disable();
000002  f7fffffe          BL       LCD_Disable
;;;1564   
;;;1565   	CLK->APBCLK &= ~CLK_APBCLK_LCD_EN;
000006  4807              LDR      r0,|L6.36|
000008  6880              LDR      r0,[r0,#8]
00000a  2101              MOVS     r1,#1
00000c  0689              LSLS     r1,r1,#26
00000e  4388              BICS     r0,r0,r1
000010  4904              LDR      r1,|L6.36|
000012  6088              STR      r0,[r1,#8]
;;;1566   	NVIC_DisableIRQ (LCD_IRQn);
000014  bf00              NOP      
000016  2019              MOVS     r0,#0x19
000018  2101              MOVS     r1,#1
00001a  4081              LSLS     r1,r1,r0
00001c  4802              LDR      r0,|L6.40|
00001e  6001              STR      r1,[r0,#0]
000020  bf00              NOP      
;;;1567   }
000022  bd10              POP      {r4,pc}
;;;1568   
                          ENDP

                  |L6.36|
                          DCD      0x50000200
                  |L6.40|
                          DCD      0xe000e180

                          AREA ||i.LCD_Disable||, CODE, READONLY, ALIGN=2

                  LCD_Disable PROC
;;;431     */
;;;432    static __INLINE void LCD_Disable(void)
000000  4803              LDR      r0,|L7.16|
;;;433    {
;;;434    	/* Disable LCD */
;;;435    	LCD->CTL &= ~LCD_CTL_EN;
000002  6800              LDR      r0,[r0,#0]
000004  0840              LSRS     r0,r0,#1
000006  0040              LSLS     r0,r0,#1
000008  4901              LDR      r1,|L7.16|
00000a  6008              STR      r0,[r1,#0]
;;;436    }
00000c  4770              BX       lr
;;;437    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      0x400b0000

                          AREA ||i.LCD_DisableBlink||, CODE, READONLY, ALIGN=2

                  LCD_DisableBlink PROC
;;;1639    */
;;;1640   void LCD_DisableBlink(void)
000000  b500              PUSH     {lr}
;;;1641   {
;;;1642   	/* Disable Blink LCD */
;;;1643   	LCD->CTL &= ~LCD_CTL_BLINK;
000002  4804              LDR      r0,|L8.20|
000004  6800              LDR      r0,[r0,#0]
000006  2180              MOVS     r1,#0x80
000008  4388              BICS     r0,r0,r1
00000a  4902              LDR      r1,|L8.20|
00000c  6008              STR      r0,[r1,#0]
;;;1644   	/* Disable frame count */
;;;1645   	LCD_FrameCountDisable();
00000e  f7fffffe          BL       LCD_FrameCountDisable
;;;1646   }
000012  bd00              POP      {pc}
;;;1647   
                          ENDP

                  |L8.20|
                          DCD      0x400b0000

                          AREA ||i.LCD_DisableInt||, CODE, READONLY, ALIGN=2

                  LCD_DisableInt PROC
;;;1697    */
;;;1698   void LCD_DisableInt(uint32_t IntSrc)
000000  07c1              LSLS     r1,r0,#31
;;;1699   {
;;;1700   	
;;;1701   	if((IntSrc & LCD_FRAMECOUNT_INT) == LCD_FRAMECOUNT_INT )
000002  0fc9              LSRS     r1,r1,#31
000004  2901              CMP      r1,#1
000006  d10c              BNE      |L9.34|
;;;1702   	{
;;;1703   		LCD->FCR &= ~LCD_FCR_FCINTEN; 
000008  490f              LDR      r1,|L9.72|
00000a  6b09              LDR      r1,[r1,#0x30]
00000c  2202              MOVS     r2,#2
00000e  4391              BICS     r1,r1,r2
000010  4a0d              LDR      r2,|L9.72|
000012  6311              STR      r1,[r2,#0x30]
;;;1704   		LCD->FCSTS |= LCD_FCSTS_FCSTS;
000014  4611              MOV      r1,r2
000016  6b49              LDR      r1,[r1,#0x34]
000018  2201              MOVS     r2,#1
00001a  4311              ORRS     r1,r1,r2
00001c  4a0a              LDR      r2,|L9.72|
00001e  6351              STR      r1,[r2,#0x34]
000020  e010              B        |L9.68|
                  |L9.34|
;;;1705   	}
;;;1706   	else if((IntSrc & LCD_POWERDOWN_INT) == LCD_POWERDOWN_INT )
000022  2102              MOVS     r1,#2
000024  4001              ANDS     r1,r1,r0
000026  2902              CMP      r1,#2
000028  d10c              BNE      |L9.68|
;;;1707   	{
;;;1708   		LCD->CTL &= ~LCD_CTL_PDINT_EN; 
00002a  4907              LDR      r1,|L9.72|
00002c  6809              LDR      r1,[r1,#0]
00002e  2201              MOVS     r2,#1
000030  0252              LSLS     r2,r2,#9
000032  4391              BICS     r1,r1,r2
000034  4a04              LDR      r2,|L9.72|
000036  6011              STR      r1,[r2,#0]
;;;1709   		LCD->FCSTS |= LCD_FCSTS_PDSTS; 
000038  4611              MOV      r1,r2
00003a  6b49              LDR      r1,[r1,#0x34]
00003c  2202              MOVS     r2,#2
00003e  4311              ORRS     r1,r1,r2
000040  4a01              LDR      r2,|L9.72|
000042  6351              STR      r1,[r2,#0x34]
                  |L9.68|
;;;1710   	}
;;;1711   
;;;1712   }
000044  4770              BX       lr
;;;1713   
                          ENDP

000046  0000              DCW      0x0000
                  |L9.72|
                          DCD      0x400b0000

                          AREA ||i.LCD_DisableSegment||, CODE, READONLY, ALIGN=2

                  LCD_DisableSegment PROC
;;;171     */
;;;172    void LCD_DisableSegment(int com, int bitvalue)
000000  b530              PUSH     {r4,r5,lr}
;;;173    {
000002  460b              MOV      r3,r1
;;;174    	int32_t memnum = bitvalue / 4;
000004  461c              MOV      r4,r3
000006  17dd              ASRS     r5,r3,#31
000008  0fad              LSRS     r5,r5,#30
00000a  18ed              ADDS     r5,r5,r3
00000c  10a9              ASRS     r1,r5,#2
;;;175    	int32_t seg_shift = 8*(bitvalue-(4*memnum));
00000e  008c              LSLS     r4,r1,#2
000010  1b1c              SUBS     r4,r3,r4
000012  00e2              LSLS     r2,r4,#3
;;;176    
;;;177    	if(memnum==0)
000014  2900              CMP      r1,#0
000016  d108              BNE      |L10.42|
;;;178    	{
;;;179    		LCD->MEM_0 &= ~((1<<com)<<seg_shift);
000018  4c35              LDR      r4,|L10.240|
00001a  68a5              LDR      r5,[r4,#8]
00001c  2401              MOVS     r4,#1
00001e  4084              LSLS     r4,r4,r0
000020  4094              LSLS     r4,r4,r2
000022  43a5              BICS     r5,r5,r4
000024  4c32              LDR      r4,|L10.240|
000026  60a5              STR      r5,[r4,#8]
000028  e061              B        |L10.238|
                  |L10.42|
;;;180    	}
;;;181    	else if(memnum==1)
00002a  2901              CMP      r1,#1
00002c  d108              BNE      |L10.64|
;;;182    	{
;;;183    		LCD->MEM_1 &= ~((1<<com)<<seg_shift);
00002e  4c30              LDR      r4,|L10.240|
000030  68e5              LDR      r5,[r4,#0xc]
000032  2401              MOVS     r4,#1
000034  4084              LSLS     r4,r4,r0
000036  4094              LSLS     r4,r4,r2
000038  43a5              BICS     r5,r5,r4
00003a  4c2d              LDR      r4,|L10.240|
00003c  60e5              STR      r5,[r4,#0xc]
00003e  e056              B        |L10.238|
                  |L10.64|
;;;184    	}
;;;185    	else if(memnum==2)
000040  2902              CMP      r1,#2
000042  d108              BNE      |L10.86|
;;;186    	{
;;;187    		LCD->MEM_2 &= ~((1<<com)<<seg_shift);
000044  4c2a              LDR      r4,|L10.240|
000046  6925              LDR      r5,[r4,#0x10]
000048  2401              MOVS     r4,#1
00004a  4084              LSLS     r4,r4,r0
00004c  4094              LSLS     r4,r4,r2
00004e  43a5              BICS     r5,r5,r4
000050  4c27              LDR      r4,|L10.240|
000052  6125              STR      r5,[r4,#0x10]
000054  e04b              B        |L10.238|
                  |L10.86|
;;;188    	}
;;;189    	else if(memnum==3)
000056  2903              CMP      r1,#3
000058  d108              BNE      |L10.108|
;;;190    	{
;;;191    		LCD->MEM_3 &= ~((1<<com)<<seg_shift);
00005a  4c25              LDR      r4,|L10.240|
00005c  6965              LDR      r5,[r4,#0x14]
00005e  2401              MOVS     r4,#1
000060  4084              LSLS     r4,r4,r0
000062  4094              LSLS     r4,r4,r2
000064  43a5              BICS     r5,r5,r4
000066  4c22              LDR      r4,|L10.240|
000068  6165              STR      r5,[r4,#0x14]
00006a  e040              B        |L10.238|
                  |L10.108|
;;;192    	}
;;;193    	else if(memnum==4)
00006c  2904              CMP      r1,#4
00006e  d108              BNE      |L10.130|
;;;194    	{
;;;195    		LCD->MEM_4 &= ~((1<<com)<<seg_shift);
000070  4c1f              LDR      r4,|L10.240|
000072  69a5              LDR      r5,[r4,#0x18]
000074  2401              MOVS     r4,#1
000076  4084              LSLS     r4,r4,r0
000078  4094              LSLS     r4,r4,r2
00007a  43a5              BICS     r5,r5,r4
00007c  4c1c              LDR      r4,|L10.240|
00007e  61a5              STR      r5,[r4,#0x18]
000080  e035              B        |L10.238|
                  |L10.130|
;;;196    	}
;;;197    	else if(memnum==5)
000082  2905              CMP      r1,#5
000084  d108              BNE      |L10.152|
;;;198    	{
;;;199    		LCD->MEM_5 &= ~((1<<com)<<seg_shift);
000086  4c1a              LDR      r4,|L10.240|
000088  69e5              LDR      r5,[r4,#0x1c]
00008a  2401              MOVS     r4,#1
00008c  4084              LSLS     r4,r4,r0
00008e  4094              LSLS     r4,r4,r2
000090  43a5              BICS     r5,r5,r4
000092  4c17              LDR      r4,|L10.240|
000094  61e5              STR      r5,[r4,#0x1c]
000096  e02a              B        |L10.238|
                  |L10.152|
;;;200    	}
;;;201    	else if(memnum==6)
000098  2906              CMP      r1,#6
00009a  d108              BNE      |L10.174|
;;;202    	{
;;;203    		LCD->MEM_6 &= ~((1<<com)<<seg_shift);
00009c  4c14              LDR      r4,|L10.240|
00009e  6a25              LDR      r5,[r4,#0x20]
0000a0  2401              MOVS     r4,#1
0000a2  4084              LSLS     r4,r4,r0
0000a4  4094              LSLS     r4,r4,r2
0000a6  43a5              BICS     r5,r5,r4
0000a8  4c11              LDR      r4,|L10.240|
0000aa  6225              STR      r5,[r4,#0x20]
0000ac  e01f              B        |L10.238|
                  |L10.174|
;;;204    	}
;;;205    	else if(memnum==7)
0000ae  2907              CMP      r1,#7
0000b0  d108              BNE      |L10.196|
;;;206    	{
;;;207    		LCD->MEM_7 &= ~((1<<com)<<seg_shift);
0000b2  4c0f              LDR      r4,|L10.240|
0000b4  6a65              LDR      r5,[r4,#0x24]
0000b6  2401              MOVS     r4,#1
0000b8  4084              LSLS     r4,r4,r0
0000ba  4094              LSLS     r4,r4,r2
0000bc  43a5              BICS     r5,r5,r4
0000be  4c0c              LDR      r4,|L10.240|
0000c0  6265              STR      r5,[r4,#0x24]
0000c2  e014              B        |L10.238|
                  |L10.196|
;;;208    	}
;;;209    	else if(memnum==8)
0000c4  2908              CMP      r1,#8
0000c6  d108              BNE      |L10.218|
;;;210    	{
;;;211    		LCD->MEM_8 &= ~((1<<com)<<seg_shift);
0000c8  4c09              LDR      r4,|L10.240|
0000ca  6aa5              LDR      r5,[r4,#0x28]
0000cc  2401              MOVS     r4,#1
0000ce  4084              LSLS     r4,r4,r0
0000d0  4094              LSLS     r4,r4,r2
0000d2  43a5              BICS     r5,r5,r4
0000d4  4c06              LDR      r4,|L10.240|
0000d6  62a5              STR      r5,[r4,#0x28]
0000d8  e009              B        |L10.238|
                  |L10.218|
;;;212    	}
;;;213    	else if(memnum==9)
0000da  2909              CMP      r1,#9
0000dc  d107              BNE      |L10.238|
;;;214    	{
;;;215    		LCD->MEM_9 &= ~((1<<com)<<seg_shift);
0000de  4c04              LDR      r4,|L10.240|
0000e0  6ae5              LDR      r5,[r4,#0x2c]
0000e2  2401              MOVS     r4,#1
0000e4  4084              LSLS     r4,r4,r0
0000e6  4094              LSLS     r4,r4,r2
0000e8  43a5              BICS     r5,r5,r4
0000ea  4c01              LDR      r4,|L10.240|
0000ec  62e5              STR      r5,[r4,#0x2c]
                  |L10.238|
;;;216    	}
;;;217    }
0000ee  bd30              POP      {r4,r5,pc}
;;;218    
                          ENDP

                  |L10.240|
                          DCD      0x400b0000

                          AREA ||i.LCD_EnableInt||, CODE, READONLY, ALIGN=2

                  LCD_EnableInt PROC
;;;1663    */
;;;1664   void LCD_EnableInt(uint32_t IntSrc)
000000  2801              CMP      r0,#1
;;;1665   {
;;;1666   	switch (IntSrc)
000002  d002              BEQ      |L11.10|
000004  2802              CMP      r0,#2
000006  d10f              BNE      |L11.40|
000008  e006              B        |L11.24|
                  |L11.10|
;;;1667       {
;;;1668       	case LCD_FRAMECOUNT_INT:
;;;1669           {
;;;1670   			LCD->FCR |= LCD_FCR_FCINTEN; 
00000a  490c              LDR      r1,|L11.60|
00000c  6b09              LDR      r1,[r1,#0x30]
00000e  2202              MOVS     r2,#2
000010  4311              ORRS     r1,r1,r2
000012  4a0a              LDR      r2,|L11.60|
000014  6311              STR      r1,[r2,#0x30]
;;;1671      			break;
000016  e007              B        |L11.40|
                  |L11.24|
;;;1672           }
;;;1673           case LCD_POWERDOWN_INT:
;;;1674           {
;;;1675   			LCD->CTL |= LCD_CTL_PDINT_EN; 
000018  4908              LDR      r1,|L11.60|
00001a  6809              LDR      r1,[r1,#0]
00001c  2201              MOVS     r2,#1
00001e  0252              LSLS     r2,r2,#9
000020  4311              ORRS     r1,r1,r2
000022  4a06              LDR      r2,|L11.60|
000024  6011              STR      r1,[r2,#0]
;;;1676               break;
000026  bf00              NOP      
                  |L11.40|
000028  bf00              NOP                            ;1671
;;;1677           }
;;;1678       }
;;;1679   	NVIC_EnableIRQ(LCD_IRQn); 
00002a  bf00              NOP      
00002c  2119              MOVS     r1,#0x19
00002e  2201              MOVS     r2,#1
000030  408a              LSLS     r2,r2,r1
000032  4903              LDR      r1,|L11.64|
000034  600a              STR      r2,[r1,#0]
000036  bf00              NOP      
;;;1680   }
000038  4770              BX       lr
;;;1681   
                          ENDP

00003a  0000              DCW      0x0000
                  |L11.60|
                          DCD      0x400b0000
                  |L11.64|
                          DCD      0xe000e100

                          AREA ||i.LCD_EnableSegment||, CODE, READONLY, ALIGN=2

                  LCD_EnableSegment PROC
;;;106     */
;;;107    void LCD_EnableSegment(int com, int bitvalue)
000000  b530              PUSH     {r4,r5,lr}
;;;108    {
000002  460b              MOV      r3,r1
;;;109    	int32_t memnum = bitvalue / 4;
000004  461c              MOV      r4,r3
000006  17dd              ASRS     r5,r3,#31
000008  0fad              LSRS     r5,r5,#30
00000a  18ed              ADDS     r5,r5,r3
00000c  10a9              ASRS     r1,r5,#2
;;;110    	int32_t seg_shift = 8*(bitvalue-(4*memnum));
00000e  008c              LSLS     r4,r1,#2
000010  1b1c              SUBS     r4,r3,r4
000012  00e2              LSLS     r2,r4,#3
;;;111    
;;;112    	if(memnum==0)
000014  2900              CMP      r1,#0
000016  d108              BNE      |L12.42|
;;;113    	{
;;;114    		LCD->MEM_0 |= (1<<com)<<seg_shift;
000018  4c35              LDR      r4,|L12.240|
00001a  68a5              LDR      r5,[r4,#8]
00001c  2401              MOVS     r4,#1
00001e  4084              LSLS     r4,r4,r0
000020  4094              LSLS     r4,r4,r2
000022  4325              ORRS     r5,r5,r4
000024  4c32              LDR      r4,|L12.240|
000026  60a5              STR      r5,[r4,#8]
000028  e061              B        |L12.238|
                  |L12.42|
;;;115    	}
;;;116    	else if(memnum==1)
00002a  2901              CMP      r1,#1
00002c  d108              BNE      |L12.64|
;;;117    	{
;;;118    		LCD->MEM_1 |= (1<<com)<<seg_shift;
00002e  4c30              LDR      r4,|L12.240|
000030  68e5              LDR      r5,[r4,#0xc]
000032  2401              MOVS     r4,#1
000034  4084              LSLS     r4,r4,r0
000036  4094              LSLS     r4,r4,r2
000038  4325              ORRS     r5,r5,r4
00003a  4c2d              LDR      r4,|L12.240|
00003c  60e5              STR      r5,[r4,#0xc]
00003e  e056              B        |L12.238|
                  |L12.64|
;;;119    	}
;;;120    	else if(memnum==2)
000040  2902              CMP      r1,#2
000042  d108              BNE      |L12.86|
;;;121    	{
;;;122    		LCD->MEM_2 |= (1<<com)<<seg_shift;
000044  4c2a              LDR      r4,|L12.240|
000046  6925              LDR      r5,[r4,#0x10]
000048  2401              MOVS     r4,#1
00004a  4084              LSLS     r4,r4,r0
00004c  4094              LSLS     r4,r4,r2
00004e  4325              ORRS     r5,r5,r4
000050  4c27              LDR      r4,|L12.240|
000052  6125              STR      r5,[r4,#0x10]
000054  e04b              B        |L12.238|
                  |L12.86|
;;;123    	}
;;;124    	else if(memnum==3)
000056  2903              CMP      r1,#3
000058  d108              BNE      |L12.108|
;;;125    	{
;;;126    		LCD->MEM_3 |= (1<<com)<<seg_shift;
00005a  4c25              LDR      r4,|L12.240|
00005c  6965              LDR      r5,[r4,#0x14]
00005e  2401              MOVS     r4,#1
000060  4084              LSLS     r4,r4,r0
000062  4094              LSLS     r4,r4,r2
000064  4325              ORRS     r5,r5,r4
000066  4c22              LDR      r4,|L12.240|
000068  6165              STR      r5,[r4,#0x14]
00006a  e040              B        |L12.238|
                  |L12.108|
;;;127    	}
;;;128    	else if(memnum==4)
00006c  2904              CMP      r1,#4
00006e  d108              BNE      |L12.130|
;;;129    	{
;;;130    		LCD->MEM_4 |= (1<<com)<<seg_shift;
000070  4c1f              LDR      r4,|L12.240|
000072  69a5              LDR      r5,[r4,#0x18]
000074  2401              MOVS     r4,#1
000076  4084              LSLS     r4,r4,r0
000078  4094              LSLS     r4,r4,r2
00007a  4325              ORRS     r5,r5,r4
00007c  4c1c              LDR      r4,|L12.240|
00007e  61a5              STR      r5,[r4,#0x18]
000080  e035              B        |L12.238|
                  |L12.130|
;;;131    	}
;;;132    	else if(memnum==5)
000082  2905              CMP      r1,#5
000084  d108              BNE      |L12.152|
;;;133    	{
;;;134    		LCD->MEM_5 |= (1<<com)<<seg_shift;
000086  4c1a              LDR      r4,|L12.240|
000088  69e5              LDR      r5,[r4,#0x1c]
00008a  2401              MOVS     r4,#1
00008c  4084              LSLS     r4,r4,r0
00008e  4094              LSLS     r4,r4,r2
000090  4325              ORRS     r5,r5,r4
000092  4c17              LDR      r4,|L12.240|
000094  61e5              STR      r5,[r4,#0x1c]
000096  e02a              B        |L12.238|
                  |L12.152|
;;;135    	}
;;;136    	else if(memnum==6)
000098  2906              CMP      r1,#6
00009a  d108              BNE      |L12.174|
;;;137    	{
;;;138    		LCD->MEM_6 |= (1<<com)<<seg_shift;
00009c  4c14              LDR      r4,|L12.240|
00009e  6a25              LDR      r5,[r4,#0x20]
0000a0  2401              MOVS     r4,#1
0000a2  4084              LSLS     r4,r4,r0
0000a4  4094              LSLS     r4,r4,r2
0000a6  4325              ORRS     r5,r5,r4
0000a8  4c11              LDR      r4,|L12.240|
0000aa  6225              STR      r5,[r4,#0x20]
0000ac  e01f              B        |L12.238|
                  |L12.174|
;;;139    	}
;;;140    	else if(memnum==7)
0000ae  2907              CMP      r1,#7
0000b0  d108              BNE      |L12.196|
;;;141    	{
;;;142    		LCD->MEM_7 |= (1<<com)<<seg_shift;
0000b2  4c0f              LDR      r4,|L12.240|
0000b4  6a65              LDR      r5,[r4,#0x24]
0000b6  2401              MOVS     r4,#1
0000b8  4084              LSLS     r4,r4,r0
0000ba  4094              LSLS     r4,r4,r2
0000bc  4325              ORRS     r5,r5,r4
0000be  4c0c              LDR      r4,|L12.240|
0000c0  6265              STR      r5,[r4,#0x24]
0000c2  e014              B        |L12.238|
                  |L12.196|
;;;143    	}
;;;144    	else if(memnum==8)
0000c4  2908              CMP      r1,#8
0000c6  d108              BNE      |L12.218|
;;;145    	{
;;;146    		LCD->MEM_8 |= (1<<com)<<seg_shift;
0000c8  4c09              LDR      r4,|L12.240|
0000ca  6aa5              LDR      r5,[r4,#0x28]
0000cc  2401              MOVS     r4,#1
0000ce  4084              LSLS     r4,r4,r0
0000d0  4094              LSLS     r4,r4,r2
0000d2  4325              ORRS     r5,r5,r4
0000d4  4c06              LDR      r4,|L12.240|
0000d6  62a5              STR      r5,[r4,#0x28]
0000d8  e009              B        |L12.238|
                  |L12.218|
;;;147    	}
;;;148    	else if(memnum==9)
0000da  2909              CMP      r1,#9
0000dc  d107              BNE      |L12.238|
;;;149    	{
;;;150    		LCD->MEM_9 |= (1<<com)<<seg_shift;
0000de  4c04              LDR      r4,|L12.240|
0000e0  6ae5              LDR      r5,[r4,#0x2c]
0000e2  2401              MOVS     r4,#1
0000e4  4084              LSLS     r4,r4,r0
0000e6  4094              LSLS     r4,r4,r2
0000e8  4325              ORRS     r5,r5,r4
0000ea  4c01              LDR      r4,|L12.240|
0000ec  62e5              STR      r5,[r4,#0x2c]
                  |L12.238|
;;;151    	}
;;;152    }
0000ee  bd30              POP      {r4,r5,pc}
;;;153    
                          ENDP

                  |L12.240|
                          DCD      0x400b0000

                          AREA ||i.LCD_FrameCountDisable||, CODE, READONLY, ALIGN=2

                  LCD_FrameCountDisable PROC
;;;787     */
;;;788    void LCD_FrameCountDisable(void)
000000  2000              MOVS     r0,#0
;;;789    {
;;;790    	LCD->FCR = 0x00;		// disable LCD frame count
000002  4907              LDR      r1,|L13.32|
000004  6308              STR      r0,[r1,#0x30]
;;;791    
;;;792    	if( LCD->FCSTS & LCD_FCSTS_FCSTS) 	// clear status flag
000006  4608              MOV      r0,r1
000008  6b40              LDR      r0,[r0,#0x34]
00000a  07c0              LSLS     r0,r0,#31
00000c  0fc0              LSRS     r0,r0,#31
00000e  d005              BEQ      |L13.28|
;;;793    		LCD->FCSTS |= LCD_FCSTS_FCSTS;
000010  4608              MOV      r0,r1
000012  6b40              LDR      r0,[r0,#0x34]
000014  2101              MOVS     r1,#1
000016  4308              ORRS     r0,r0,r1
000018  4901              LDR      r1,|L13.32|
00001a  6348              STR      r0,[r1,#0x34]
                  |L13.28|
;;;794    }
00001c  4770              BX       lr
;;;795    
                          ENDP

00001e  0000              DCW      0x0000
                  |L13.32|
                          DCD      0x400b0000

                          AREA ||i.LCD_FrameCountEnable||, CODE, READONLY, ALIGN=2

                  LCD_FrameCountEnable PROC
;;;729     */
;;;730    void LCD_FrameCountEnable( uint32_t prediv, uint32_t fcv )
000000  b5f8              PUSH     {r3-r7,lr}
;;;731    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;732    	uint32_t div = 1; 	// default prediv == LCD_FCPRESC_DIV1
000006  2001              MOVS     r0,#1
000008  9000              STR      r0,[sp,#0]
;;;733    
;;;734    	LCD_UpdateLCDFrameFreq();
00000a  f7fffffe          BL       LCD_UpdateLCDFrameFreq
;;;735    	
;;;736    	LCD->FCR = 0x00;
00000e  2000              MOVS     r0,#0
000010  4928              LDR      r1,|L14.180|
000012  6308              STR      r0,[r1,#0x30]
;;;737    	LCD->FCSTS |= LCD_FCSTS_FCSTS;	// clear fcsts flag
000014  4608              MOV      r0,r1
000016  6b40              LDR      r0,[r0,#0x34]
000018  2101              MOVS     r1,#1
00001a  4308              ORRS     r0,r0,r1
00001c  4925              LDR      r1,|L14.180|
00001e  6348              STR      r0,[r1,#0x34]
;;;738    
;;;739    	if(prediv) {
000020  2c00              CMP      r4,#0
000022  d019              BEQ      |L14.88|
;;;740    		if(prediv>LCD_FCPRESC_DIV8) {
000024  2c0c              CMP      r4,#0xc
000026  d900              BLS      |L14.42|
;;;741    			LCDDEBUG("LCD frame count prescalar value use dividing by 8 \n");
;;;742    			prediv = LCD_FCPRESC_DIV8;
000028  240c              MOVS     r4,#0xc
                  |L14.42|
;;;743    		}
;;;744    		LCD->FCR = LCD->FCR & ~LCD_FCR_PRESCL | prediv;
00002a  4822              LDR      r0,|L14.180|
00002c  6b00              LDR      r0,[r0,#0x30]
00002e  210c              MOVS     r1,#0xc
000030  4388              BICS     r0,r0,r1
000032  4320              ORRS     r0,r0,r4
000034  491f              LDR      r1,|L14.180|
000036  6308              STR      r0,[r1,#0x30]
;;;745    		if(prediv==LCD_FCPRESC_DIV1) div = 1;
000038  2c00              CMP      r4,#0
00003a  d101              BNE      |L14.64|
00003c  2001              MOVS     r0,#1
00003e  9000              STR      r0,[sp,#0]
                  |L14.64|
;;;746    		if(prediv==LCD_FCPRESC_DIV2) div = 2;
000040  2c04              CMP      r4,#4
000042  d101              BNE      |L14.72|
000044  2002              MOVS     r0,#2
000046  9000              STR      r0,[sp,#0]
                  |L14.72|
;;;747    		if(prediv==LCD_FCPRESC_DIV4) div = 4;
000048  2c08              CMP      r4,#8
00004a  d101              BNE      |L14.80|
00004c  2004              MOVS     r0,#4
00004e  9000              STR      r0,[sp,#0]
                  |L14.80|
;;;748    		if(prediv==LCD_FCPRESC_DIV8) div = 8;
000050  2c0c              CMP      r4,#0xc
000052  d101              BNE      |L14.88|
000054  2008              MOVS     r0,#8
000056  9000              STR      r0,[sp,#0]
                  |L14.88|
;;;749    	}
;;;750    
;;;751    	if(fcv)
000058  2d00              CMP      r5,#0
00005a  d00b              BEQ      |L14.116|
;;;752    	{
;;;753    		if(fcv > 0x3F) {	// top value max. 63 = 0x3F
00005c  2d3f              CMP      r5,#0x3f
00005e  d900              BLS      |L14.98|
;;;754    			LCDDEBUG("LCD frame counter top value is too big, so use max. value 63 \n");
;;;755    			fcv = 0x3F;
000060  253f              MOVS     r5,#0x3f
                  |L14.98|
;;;756    		}
;;;757    		LCD->FCR = LCD->FCR & ~LCD_FCR_FCV | (fcv << LCD_FCR_FCV_BIT_ADDR);
000062  4814              LDR      r0,|L14.180|
000064  6b00              LDR      r0,[r0,#0x30]
000066  213f              MOVS     r1,#0x3f
000068  0109              LSLS     r1,r1,#4
00006a  4388              BICS     r0,r0,r1
00006c  0129              LSLS     r1,r5,#4
00006e  4308              ORRS     r0,r0,r1
000070  4910              LDR      r1,|L14.180|
000072  6308              STR      r0,[r1,#0x30]
                  |L14.116|
;;;758    	}
;;;759    
;;;760    	/* calculate frame count & INT frequency */
;;;761    	g_LCDFrameCountFreq = g_LCDFrameRate / div;
000074  9800              LDR      r0,[sp,#0]
000076  f7fffffe          BL       __aeabi_ui2d
00007a  4606              MOV      r6,r0
00007c  4602              MOV      r2,r0
00007e  460b              MOV      r3,r1
000080  490d              LDR      r1,|L14.184|
000082  c903              LDM      r1,{r0,r1}
000084  f7fffffe          BL       __aeabi_ddiv
000088  4a0c              LDR      r2,|L14.188|
00008a  c203              STM      r2!,{r0,r1}
;;;762    	
;;;763    	g_LCDFrameCountINTFreq = g_LCDFrameCountFreq / (fcv+1);
00008c  1c68              ADDS     r0,r5,#1
00008e  f7fffffe          BL       __aeabi_ui2d
000092  4606              MOV      r6,r0
000094  4602              MOV      r2,r0
000096  460b              MOV      r3,r1
000098  4908              LDR      r1,|L14.188|
00009a  c903              LDM      r1,{r0,r1}
00009c  f7fffffe          BL       __aeabi_ddiv
0000a0  4a07              LDR      r2,|L14.192|
0000a2  c203              STM      r2!,{r0,r1}
;;;764    
;;;765    	LCDDEBUG("Frame-rate is %f Hz \n", g_LCDFrameRate);
;;;766    	LCDDEBUG("FCV:%d, Interrupt frequency %f Hz, period time %f sec	\n", fcv, g_LCDFrameCountINTFreq, 1/g_LCDFrameCountINTFreq);
;;;767    	
;;;768    	LCD->FCR |= LCD_FCR_FCEN;		// enable LCD frame count
0000a4  4803              LDR      r0,|L14.180|
0000a6  6b00              LDR      r0,[r0,#0x30]
0000a8  2101              MOVS     r1,#1
0000aa  4308              ORRS     r0,r0,r1
0000ac  4901              LDR      r1,|L14.180|
0000ae  6308              STR      r0,[r1,#0x30]
;;;769    	
;;;770    }
0000b0  bdf8              POP      {r3-r7,pc}
;;;771    
                          ENDP

0000b2  0000              DCW      0x0000
                  |L14.180|
                          DCD      0x400b0000
                  |L14.184|
                          DCD      g_LCDFrameRate
                  |L14.188|
                          DCD      g_LCDFrameCountFreq
                  |L14.192|
                          DCD      g_LCDFrameCountINTFreq

                          AREA ||i.LCD_Init||, CODE, READONLY, ALIGN=2

                  LCD_Init PROC
;;;1490    */
;;;1491   void LCD_Init(S_LCD_INIT *lcdinit)
000000  b510              PUSH     {r4,lr}
;;;1492   {
000002  4604              MOV      r4,r0
;;;1493     	/* Enable LCD Clock  */
;;;1494   	CLK->APBCLK |= CLK_APBCLK_LCD_EN; 
000004  484a              LDR      r0,|L15.304|
000006  6880              LDR      r0,[r0,#8]
000008  2101              MOVS     r1,#1
00000a  0689              LSLS     r1,r1,#26
00000c  4308              ORRS     r0,r0,r1
00000e  4948              LDR      r1,|L15.304|
000010  6088              STR      r0,[r1,#8]
;;;1495   
;;;1496     	/* IP reset */
;;;1497   	GCR->IPRST_CTL2 |= GCR_IPRSTCTL2_LCD;
000012  2005              MOVS     r0,#5
000014  0700              LSLS     r0,r0,#28
000016  68c0              LDR      r0,[r0,#0xc]
000018  0449              LSLS     r1,r1,#17
00001a  4308              ORRS     r0,r0,r1
00001c  2105              MOVS     r1,#5
00001e  0709              LSLS     r1,r1,#28
000020  60c8              STR      r0,[r1,#0xc]
;;;1498   	GCR->IPRST_CTL2 &= ~GCR_IPRSTCTL2_LCD;
000022  4608              MOV      r0,r1
000024  68c0              LDR      r0,[r0,#0xc]
000026  2101              MOVS     r1,#1
000028  0689              LSLS     r1,r1,#26
00002a  4388              BICS     r0,r0,r1
00002c  2105              MOVS     r1,#5
00002e  0709              LSLS     r1,r1,#28
000030  60c8              STR      r0,[r1,#0xc]
;;;1499   
;;;1500   	LCD_Disable();
000032  f7fffffe          BL       LCD_Disable
;;;1501   
;;;1502     	/* Turn all segments off */
;;;1503     	LCD_AllOff();
000036  f7fffffe          BL       LCD_AllOff
;;;1504   
;;;1505   	// V1
;;;1506   	GCR->PB_H_MFP |= PB9_MFP_LCD_V1;
00003a  2005              MOVS     r0,#5
00003c  0700              LSLS     r0,r0,#28
00003e  6bc0              LDR      r0,[r0,#0x3c]
000040  2170              MOVS     r1,#0x70
000042  4308              ORRS     r0,r0,r1
000044  2105              MOVS     r1,#5
000046  0709              LSLS     r1,r1,#28
000048  63c8              STR      r0,[r1,#0x3c]
;;;1507   	// V2
;;;1508   	GCR->PB_H_MFP |= PB10_MFP_LCD_V2;
00004a  4608              MOV      r0,r1
00004c  6bc0              LDR      r0,[r0,#0x3c]
00004e  2107              MOVS     r1,#7
000050  0209              LSLS     r1,r1,#8
000052  4308              ORRS     r0,r0,r1
000054  2105              MOVS     r1,#5
000056  0709              LSLS     r1,r1,#28
000058  63c8              STR      r0,[r1,#0x3c]
;;;1509   	// V3
;;;1510   	GCR->PB_H_MFP |= PB11_MFP_LCD_V3;
00005a  4608              MOV      r0,r1
00005c  6bc0              LDR      r0,[r0,#0x3c]
00005e  2107              MOVS     r1,#7
000060  0309              LSLS     r1,r1,#12
000062  4308              ORRS     r0,r0,r1
000064  2105              MOVS     r1,#5
000066  0709              LSLS     r1,r1,#28
000068  63c8              STR      r0,[r1,#0x3c]
;;;1511   	// DH1
;;;1512   	GCR->PC_L_MFP |= PC0_MFP_LCD_DH1;
00006a  4832              LDR      r0,|L15.308|
00006c  6800              LDR      r0,[r0,#0]
00006e  2107              MOVS     r1,#7
000070  4308              ORRS     r0,r0,r1
000072  4930              LDR      r1,|L15.308|
000074  6008              STR      r0,[r1,#0]
;;;1513   	// DH2
;;;1514   	GCR->PC_L_MFP |= PC1_MFP_LCD_DH2;
000076  4608              MOV      r0,r1
000078  6800              LDR      r0,[r0,#0]
00007a  2170              MOVS     r1,#0x70
00007c  4308              ORRS     r0,r0,r1
00007e  492d              LDR      r1,|L15.308|
000080  6008              STR      r0,[r1,#0]
;;;1515   
;;;1516   	/* Digital Input Path Disable */
;;;1517   	/* V1, V2 and V3 */
;;;1518   	GPIOB->OFFD |= (0xE000000);
000082  482d              LDR      r0,|L15.312|
000084  6840              LDR      r0,[r0,#4]
000086  2107              MOVS     r1,#7
000088  0649              LSLS     r1,r1,#25
00008a  4308              ORRS     r0,r0,r1
00008c  492a              LDR      r1,|L15.312|
00008e  6048              STR      r0,[r1,#4]
;;;1519   	/* DH1 and DH2 */
;;;1520   	GPIOC->OFFD |= (0x30000);
000090  4829              LDR      r0,|L15.312|
000092  3040              ADDS     r0,r0,#0x40
000094  6840              LDR      r0,[r0,#4]
000096  2103              MOVS     r1,#3
000098  0409              LSLS     r1,r1,#16
00009a  4308              ORRS     r0,r0,r1
00009c  4926              LDR      r1,|L15.312|
00009e  3140              ADDS     r1,r1,#0x40
0000a0  6048              STR      r0,[r1,#4]
;;;1521   
;;;1522   	/* voltage & bias generator settings */
;;;1523   	if(lcdinit->cpump_enable == true)
0000a2  7820              LDRB     r0,[r4,#0]
0000a4  2801              CMP      r0,#1
0000a6  d103              BNE      |L15.176|
;;;1524   	{
;;;1525   		LCD_ChargePumpInit(lcdinit);
0000a8  4620              MOV      r0,r4
0000aa  f7fffffe          BL       LCD_ChargePumpInit
0000ae  e01c              B        |L15.234|
                  |L15.176|
;;;1526   	} 
;;;1527   	else
;;;1528   	{
;;;1529   		LCD->DISPCTL &= ~LCD_DISPCTL_CPUMP_EN;
0000b0  4822              LDR      r0,|L15.316|
0000b2  6840              LDR      r0,[r0,#4]
0000b4  0840              LSRS     r0,r0,#1
0000b6  0040              LSLS     r0,r0,#1
0000b8  4920              LDR      r1,|L15.316|
0000ba  6048              STR      r0,[r1,#4]
;;;1530   		LCD->DISPCTL |= LCD_DISPCTL_BV_SEL;
0000bc  4608              MOV      r0,r1
0000be  6840              LDR      r0,[r0,#4]
0000c0  2140              MOVS     r1,#0x40
0000c2  4308              ORRS     r0,r0,r1
0000c4  491d              LDR      r1,|L15.316|
0000c6  6048              STR      r0,[r1,#4]
;;;1531   		LCD->DISPCTL &= ~LCD_DISPCTL_IBRL_EN;
0000c8  4608              MOV      r0,r1
0000ca  6840              LDR      r0,[r0,#4]
0000cc  2110              MOVS     r1,#0x10
0000ce  4388              BICS     r0,r0,r1
0000d0  491a              LDR      r1,|L15.316|
0000d2  6048              STR      r0,[r1,#4]
;;;1532   		LCD->DISPCTL |= (lcdinit->internal_bias==true)?LCD_DISPCTL_IBRL_EN:0;	
0000d4  4608              MOV      r0,r1
0000d6  6840              LDR      r0,[r0,#4]
0000d8  7861              LDRB     r1,[r4,#1]
0000da  2901              CMP      r1,#1
0000dc  d101              BNE      |L15.226|
0000de  2110              MOVS     r1,#0x10
0000e0  e000              B        |L15.228|
                  |L15.226|
0000e2  2100              MOVS     r1,#0
                  |L15.228|
0000e4  4308              ORRS     r0,r0,r1
0000e6  4915              LDR      r1,|L15.316|
0000e8  6048              STR      r0,[r1,#4]
                  |L15.234|
;;;1533   	}
;;;1534   	
;;;1535   	/* Normal Settings */
;;;1536   	LCD->CTL = LCD->CTL & ~LCD_CTL_FREQ | lcdinit->freqdiv;	// LCD frequency div 512 default // 32768/512 = 64Hz
0000ea  4814              LDR      r0,|L15.316|
0000ec  6800              LDR      r0,[r0,#0]
0000ee  2170              MOVS     r1,#0x70
0000f0  4388              BICS     r0,r0,r1
0000f2  68e1              LDR      r1,[r4,#0xc]
0000f4  4308              ORRS     r0,r0,r1
0000f6  4911              LDR      r1,|L15.316|
0000f8  6008              STR      r0,[r1,#0]
;;;1537     	LCD->CTL = LCD->CTL & ~LCD_CTL_MUX | lcdinit->mux;
0000fa  4608              MOV      r0,r1
0000fc  6800              LDR      r0,[r0,#0]
0000fe  210e              MOVS     r1,#0xe
000100  4388              BICS     r0,r0,r1
000102  6861              LDR      r1,[r4,#4]
000104  4308              ORRS     r0,r0,r1
000106  490d              LDR      r1,|L15.316|
000108  6008              STR      r0,[r1,#0]
;;;1538   	LCD->DISPCTL = LCD->DISPCTL & ~LCD_DISPCTL_BIAS_SEL | lcdinit->bias; 
00010a  4608              MOV      r0,r1
00010c  6840              LDR      r0,[r0,#4]
00010e  2106              MOVS     r1,#6
000110  4388              BICS     r0,r0,r1
000112  68a1              LDR      r1,[r4,#8]
000114  4308              ORRS     r0,r0,r1
000116  4909              LDR      r1,|L15.316|
000118  6048              STR      r0,[r1,#4]
;;;1539   
;;;1540   	LCD_Enable();	// Enable LCD
00011a  bf00              NOP      
00011c  4608              MOV      r0,r1
00011e  6800              LDR      r0,[r0,#0]
000120  2101              MOVS     r1,#1
000122  4308              ORRS     r0,r0,r1
000124  4905              LDR      r1,|L15.316|
000126  6008              STR      r0,[r1,#0]
000128  bf00              NOP      
;;;1541   
;;;1542   	LCD_UpdateLCDFrameFreq();
00012a  f7fffffe          BL       LCD_UpdateLCDFrameFreq
;;;1543   }
00012e  bd10              POP      {r4,pc}
;;;1544   
                          ENDP

                  |L15.304|
                          DCD      0x50000200
                  |L15.308|
                          DCD      0x50000040
                  |L15.312|
                          DCD      0x50004040
                  |L15.316|
                          DCD      0x400b0000

                          AREA ||i.LCD_Number||, CODE, READONLY, ALIGN=2

                  LCD_Number PROC
;;;238     */
;;;239    void LCD_Number(long long value)
000000  b5f0              PUSH     {r4-r7,lr}
;;;240    {
000002  b099              SUB      sp,sp,#0x64
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;241    	long long num, i, com, bit, digit, div, neg, len, tmp;
;;;242      	uint16_t bitpattern;
;;;243    
;;;244      	/* Parameter consistancy check */
;;;245    #ifdef __LCDDISPLAY_PD_878_H	
;;;246    #ifdef LCD_LQFP100_PIN	
;;;247      	if (value >= 9999999999)
;;;248    #elif defined(LCD_LQFP64_PIN)
;;;249      	if (value >= 99999999)
;;;250    #endif
;;;251      	{
;;;252    #ifdef LCD_LQFP100_PIN  	
;;;253        	value = 9999999999;
;;;254    #elif defined(LCD_LQFP64_PIN)
;;;255    		value = 99999999;
;;;256    #endif
;;;257      	}
;;;258    #ifdef LCD_LQFP100_PIN 
;;;259      	if (value <= -1000000000)
;;;260    #elif defined(LCD_LQFP64_PIN)
;;;261      	if (value <= -10000000)
;;;262    #endif
;;;263      	{
;;;264    #ifdef LCD_LQFP100_PIN   	
;;;265        	value = -999999999;
;;;266    #elif defined(LCD_LQFP64_PIN)
;;;267        	value = -9999999;
;;;268    #endif
;;;269      	}
;;;270    #endif
;;;271    
;;;272    #ifdef __LCDDISPLAY_GFN616A_H
;;;273    #ifdef LCD_LQFP100_PIN	
;;;274      	if (value >= 9999999999999)
;;;275      	{	
;;;276        	value = 9999999999999;
;;;277      	}
;;;278    #endif	
;;;279    #ifdef LCD_LQFP100_PIN 
;;;280      	if (value <= -1000000000000)
;;;281      	{
;;;282        	value = -999999999999;
;;;283      	}
;;;284    #endif
;;;285    #endif
;;;286    
;;;287      	if (value < 0)
000008  2100              MOVS     r1,#0
00000a  4608              MOV      r0,r1
00000c  462a              MOV      r2,r5
00000e  1a61              SUBS     r1,r4,r1
000010  4182              SBCS     r2,r2,r0
000012  da0b              BGE      |L16.44|
;;;288      	{
;;;289        	value = abs(value);
000014  1e20              SUBS     r0,r4,#0
000016  db01              BLT      |L16.28|
000018  4601              MOV      r1,r0
00001a  e000              B        |L16.30|
                  |L16.28|
00001c  4241              RSBS     r1,r0,#0
                  |L16.30|
00001e  17cd              ASRS     r5,r1,#31
000020  460c              MOV      r4,r1
;;;290        	neg   = 1;
000022  2001              MOVS     r0,#1
000024  2100              MOVS     r1,#0
000026  9109              STR      r1,[sp,#0x24]
000028  9008              STR      r0,[sp,#0x20]
00002a  e002              B        |L16.50|
                  |L16.44|
;;;291      	}
;;;292      	else
;;;293      	{
;;;294        	neg = 0;
00002c  2000              MOVS     r0,#0
00002e  9008              STR      r0,[sp,#0x20]
000030  9009              STR      r0,[sp,#0x24]
                  |L16.50|
;;;295      	}
;;;296    
;;;297      	/* Turn off all number LCD segments */
;;;298      	LCD_NumberOff();
000032  f7fffffe          BL       LCD_NumberOff
;;;299    
;;;300    	/* Length of number */
;;;301    	len = 0;
000036  2100              MOVS     r1,#0
000038  9106              STR      r1,[sp,#0x18]
00003a  9107              STR      r1,[sp,#0x1c]
;;;302    	tmp = value;
00003c  9505              STR      r5,[sp,#0x14]
00003e  9404              STR      r4,[sp,#0x10]
;;;303    	while( 1 )
000040  e025              B        |L16.142|
                  |L16.66|
;;;304    	{
;;;305    		if( (tmp/10) || (tmp%10) )
000042  220a              MOVS     r2,#0xa
000044  2300              MOVS     r3,#0
000046  9905              LDR      r1,[sp,#0x14]
000048  9804              LDR      r0,[sp,#0x10]
00004a  f7fffffe          BL       __aeabi_ldivmod
00004e  2300              MOVS     r3,#0
000050  4058              EORS     r0,r0,r3
000052  4059              EORS     r1,r1,r3
000054  4308              ORRS     r0,r0,r1
000056  d109              BNE      |L16.108|
000058  220a              MOVS     r2,#0xa
00005a  9905              LDR      r1,[sp,#0x14]
00005c  9804              LDR      r0,[sp,#0x10]
00005e  f7fffffe          BL       __aeabi_ldivmod
000062  2100              MOVS     r1,#0
000064  404a              EORS     r2,r2,r1
000066  404b              EORS     r3,r3,r1
000068  431a              ORRS     r2,r2,r3
00006a  d00f              BEQ      |L16.140|
                  |L16.108|
;;;306    		{
;;;307    			tmp = tmp / 10;
00006c  220a              MOVS     r2,#0xa
00006e  2300              MOVS     r3,#0
000070  9905              LDR      r1,[sp,#0x14]
000072  9804              LDR      r0,[sp,#0x10]
000074  f7fffffe          BL       __aeabi_ldivmod
000078  9105              STR      r1,[sp,#0x14]
00007a  9004              STR      r0,[sp,#0x10]
;;;308    			len++;
00007c  2200              MOVS     r2,#0
00007e  9907              LDR      r1,[sp,#0x1c]
000080  9806              LDR      r0,[sp,#0x18]
000082  1c40              ADDS     r0,r0,#1
000084  4151              ADCS     r1,r1,r2
000086  9107              STR      r1,[sp,#0x1c]
000088  9006              STR      r0,[sp,#0x18]
00008a  e000              B        |L16.142|
                  |L16.140|
;;;309    		}
;;;310    		else break;
00008c  e000              B        |L16.144|
                  |L16.142|
00008e  e7d8              B        |L16.66|
                  |L16.144|
000090  bf00              NOP      
;;;311    	}
;;;312    
;;;313      	/* Extract useful digits */
;;;314      	div = 1;
000092  2101              MOVS     r1,#1
000094  2000              MOVS     r0,#0
000096  910a              STR      r1,[sp,#0x28]
000098  900b              STR      r0,[sp,#0x2c]
;;;315      	//for (digit = 0; digit < LCD_DIGIT_NUM; digit++)
;;;316      	for (digit = (LCD_DIGIT_NUM-1); digit >= 0; digit--)
00009a  910c              STR      r1,[sp,#0x30]
00009c  900d              STR      r0,[sp,#0x34]
00009e  e05f              B        |L16.352|
                  |L16.160|
;;;317      	{
;;;318        	num = (value / div) % 10;
0000a0  4620              MOV      r0,r4
0000a2  4629              MOV      r1,r5
0000a4  9b0b              LDR      r3,[sp,#0x2c]
0000a6  9a0a              LDR      r2,[sp,#0x28]
0000a8  f7fffffe          BL       __aeabi_ldivmod
0000ac  220a              MOVS     r2,#0xa
0000ae  2300              MOVS     r3,#0
0000b0  9101              STR      r1,[sp,#4]
0000b2  9000              STR      r0,[sp,#0]
0000b4  f7fffffe          BL       __aeabi_ldivmod
0000b8  9212              STR      r2,[sp,#0x48]
;;;319        	if ((neg == 1) && (digit == (LCD_DIGIT_NUM-1-len))) num = 10;
0000ba  2301              MOVS     r3,#1
0000bc  9808              LDR      r0,[sp,#0x20]
0000be  4058              EORS     r0,r0,r3
0000c0  9909              LDR      r1,[sp,#0x24]
0000c2  4308              ORRS     r0,r0,r1
0000c4  d10c              BNE      |L16.224|
0000c6  2200              MOVS     r2,#0
0000c8  9906              LDR      r1,[sp,#0x18]
0000ca  9807              LDR      r0,[sp,#0x1c]
0000cc  1a5b              SUBS     r3,r3,r1
0000ce  4182              SBCS     r2,r2,r0
0000d0  980c              LDR      r0,[sp,#0x30]
0000d2  4058              EORS     r0,r0,r3
0000d4  990d              LDR      r1,[sp,#0x34]
0000d6  4051              EORS     r1,r1,r2
0000d8  4308              ORRS     r0,r0,r1
0000da  d101              BNE      |L16.224|
0000dc  200a              MOVS     r0,#0xa
0000de  9012              STR      r0,[sp,#0x48]
                  |L16.224|
;;;320        	bitpattern = Nuvo_Numbers[num];
0000e0  9812              LDR      r0,[sp,#0x48]
0000e2  0040              LSLS     r0,r0,#1
0000e4  4922              LDR      r1,|L16.368|
0000e6  5a08              LDRH     r0,[r1,r0]
0000e8  9003              STR      r0,[sp,#0xc]
;;;321        	for (i = 0; i < LCD_DIGIT_SEGNUM; i++)
0000ea  2600              MOVS     r6,#0
0000ec  4637              MOV      r7,r6
0000ee  e01c              B        |L16.298|
                  |L16.240|
;;;322        	{
;;;323          		bit = NANO1XXDISPLAY.Number[digit].bit[i];
0000f0  980c              LDR      r0,[sp,#0x30]
0000f2  0181              LSLS     r1,r0,#6
0000f4  481f              LDR      r0,|L16.372|
0000f6  1808              ADDS     r0,r1,r0
0000f8  3020              ADDS     r0,r0,#0x20
0000fa  00b1              LSLS     r1,r6,#2
0000fc  5840              LDR      r0,[r0,r1]
0000fe  900e              STR      r0,[sp,#0x38]
;;;324          		com = NANO1XXDISPLAY.Number[digit].com[i];
000100  980c              LDR      r0,[sp,#0x30]
000102  0181              LSLS     r1,r0,#6
000104  481b              LDR      r0,|L16.372|
000106  1808              ADDS     r0,r1,r0
000108  00b1              LSLS     r1,r6,#2
00010a  5840              LDR      r0,[r0,r1]
00010c  9010              STR      r0,[sp,#0x40]
;;;325          		if (bitpattern & (1 << i))
00010e  2001              MOVS     r0,#1
000110  40b0              LSLS     r0,r0,r6
000112  9903              LDR      r1,[sp,#0xc]
000114  4208              TST      r0,r1
000116  d003              BEQ      |L16.288|
;;;326          		{
;;;327            		LCD_EnableSegment(com, bit);
000118  990e              LDR      r1,[sp,#0x38]
00011a  9810              LDR      r0,[sp,#0x40]
00011c  f7fffffe          BL       LCD_EnableSegment
                  |L16.288|
000120  4638              MOV      r0,r7                 ;321
000122  2100              MOVS     r1,#0                 ;321
000124  1c76              ADDS     r6,r6,#1              ;321
000126  4148              ADCS     r0,r0,r1              ;321
000128  4607              MOV      r7,r0                 ;321
                  |L16.298|
00012a  2108              MOVS     r1,#8                 ;321
00012c  2000              MOVS     r0,#0                 ;321
00012e  463a              MOV      r2,r7                 ;321
000130  1a71              SUBS     r1,r6,r1              ;321
000132  4182              SBCS     r2,r2,r0              ;321
000134  dbdc              BLT      |L16.240|
;;;328          		}
;;;329        	}
;;;330        	div = div * 10;
000136  230a              MOVS     r3,#0xa
000138  2200              MOVS     r2,#0
00013a  990b              LDR      r1,[sp,#0x2c]
00013c  980a              LDR      r0,[sp,#0x28]
00013e  9315              STR      r3,[sp,#0x54]
000140  9214              STR      r2,[sp,#0x50]
000142  9116              STR      r1,[sp,#0x58]
000144  9017              STR      r0,[sp,#0x5c]
000146  461a              MOV      r2,r3
000148  9b14              LDR      r3,[sp,#0x50]
00014a  f7fffffe          BL       __aeabi_lmul
00014e  910b              STR      r1,[sp,#0x2c]
000150  900a              STR      r0,[sp,#0x28]
000152  2200              MOVS     r2,#0                 ;316
000154  990d              LDR      r1,[sp,#0x34]         ;316
000156  980c              LDR      r0,[sp,#0x30]         ;316
000158  1e40              SUBS     r0,r0,#1              ;316
00015a  4191              SBCS     r1,r1,r2              ;316
00015c  910d              STR      r1,[sp,#0x34]         ;316
00015e  900c              STR      r0,[sp,#0x30]         ;316
                  |L16.352|
000160  2300              MOVS     r3,#0                 ;316
000162  990d              LDR      r1,[sp,#0x34]         ;316
000164  980c              LDR      r0,[sp,#0x30]         ;316
000166  1ac0              SUBS     r0,r0,r3              ;316
000168  4199              SBCS     r1,r1,r3              ;316
00016a  da99              BGE      |L16.160|
;;;331      	}
;;;332    
;;;333    }
00016c  b019              ADD      sp,sp,#0x64
00016e  bdf0              POP      {r4-r7,pc}
;;;334    
                          ENDP

                  |L16.368|
                          DCD      Nuvo_Numbers
                  |L16.372|
                          DCD      NANO1XXDISPLAY+0x1c0

                          AREA ||i.LCD_NumberOff||, CODE, READONLY, ALIGN=2

                  LCD_NumberOff PROC
;;;351     */
;;;352    void LCD_NumberOff(void)
000000  4803              LDR      r0,|L17.16|
;;;353    {
;;;354      	/* Turn off all number segments */
;;;355    #ifdef __LCDDISPLAY_PD_878_H	
;;;356      	LCD->MEM_0 &= 0x00000000;
;;;357      	LCD->MEM_1 &= 0x00000000;
;;;358      	LCD->MEM_2 &= 0x00000000;
;;;359      	LCD->MEM_3 &= 0x00000000;
;;;360    	LCD->MEM_4 &= 0x00000000;
;;;361    	LCD->MEM_5 &= 0x00000000;
;;;362    	LCD->MEM_6 &= 0x00000000;
;;;363    	LCD->MEM_7 &= 0x00000000;
;;;364    	LCD->MEM_8 &= 0x00000000;
;;;365    	LCD->MEM_9 &= 0x00000000;
;;;366    #endif	
;;;367    #ifdef __LCDDISPLAY_GFN616A_H
;;;368    	LCD->MEM_0 &= ~0x0f000000;
;;;369      	LCD->MEM_1 &= ~0x0f0f0f0f;
;;;370      	LCD->MEM_2 &= ~0x000f0f0f;
;;;371    	LCD->MEM_5 &= ~0x0f0e0000;
;;;372    	LCD->MEM_6 &= ~0x0f0f0f0f;
;;;373    	LCD->MEM_7 &= ~0x0f0f0f0f;
;;;374    	LCD->MEM_8 &= ~0x0f0f0f0f;
;;;375    	LCD->MEM_9 &= ~0x070f0f0f;
;;;376    #endif
;;;377    #ifdef __LCDDISPLAY_BTL001_H
;;;378    	#ifdef __NANO100A__
;;;379    	LCD->MEM_0 &= ~0x0f0f0f0f;
;;;380      	LCD->MEM_1 &= ~0x0f0f0f0f;
;;;381      	LCD->MEM_2 &= ~0x0f0f0f0f;
;;;382      	LCD->MEM_3 &= ~0x0f0f0f0f;
;;;383    	LCD->MEM_4 &= ~0x0f0f0f0f;
;;;384    	LCD->MEM_5 &= ~0x0f070f0f;
;;;385    	LCD->MEM_6 &= ~0x0f0f0f0f;
;;;386    	LCD->MEM_7 &= ~0x0f0f0f0f;
;;;387    	LCD->MEM_8 &= ~0x00000f0f;
;;;388    	#else
;;;389    	LCD->MEM_6 &= ~0x0f0f0000;
;;;390    	LCD->MEM_7 &= ~0x0f0f0f0f;
;;;391    	LCD->MEM_8 &= ~0x00000f0f;
;;;392    	#endif
;;;393    #endif
;;;394    #ifdef __LCDDISPLAY_BTL001_LB_H
;;;395    	LCD->MEM_0 &= ~0x0f0f0f0f;
000002  6880              LDR      r0,[r0,#8]
000004  4903              LDR      r1,|L17.20|
000006  4008              ANDS     r0,r0,r1
000008  4901              LDR      r1,|L17.16|
00000a  6088              STR      r0,[r1,#8]
;;;396    #endif
;;;397      	return;
;;;398    }
00000c  4770              BX       lr
;;;399    
                          ENDP

00000e  0000              DCW      0x0000
                  |L17.16|
                          DCD      0x400b0000
                  |L17.20|
                          DCD      0xf0f0f0f0

                          AREA ||i.LCD_PinSwitch_Set||, CODE, READONLY, ALIGN=2

                  LCD_PinSwitch_Set PROC
;;;1252    */
;;;1253   void LCD_PinSwitch_Set(void)
000000  2005              MOVS     r0,#5
;;;1254   {
;;;1255   
;;;1256   #ifdef LCD_LQFP100_PIN
;;;1257   	/* switch multi-function pin to LCD for LQFP-100 */
;;;1258   	// SEG39
;;;1259   	GCR->PA_L_MFP |= PA4_MFP_LCD_S39;
000002  0700              LSLS     r0,r0,#28
000004  6b00              LDR      r0,[r0,#0x30]
000006  2107              MOVS     r1,#7
000008  0409              LSLS     r1,r1,#16
00000a  4308              ORRS     r0,r0,r1
00000c  2105              MOVS     r1,#5
00000e  0709              LSLS     r1,r1,#28
000010  6308              STR      r0,[r1,#0x30]
;;;1260   	// SEG38
;;;1261   	GCR->PA_L_MFP |= PA5_MFP_LCD_S38;
000012  4608              MOV      r0,r1
000014  6b00              LDR      r0,[r0,#0x30]
000016  2107              MOVS     r1,#7
000018  0509              LSLS     r1,r1,#20
00001a  4308              ORRS     r0,r0,r1
00001c  2105              MOVS     r1,#5
00001e  0709              LSLS     r1,r1,#28
000020  6308              STR      r0,[r1,#0x30]
;;;1262   	// SEG37
;;;1263   	GCR->PA_L_MFP |= PA6_MFP_LCD_S37;
000022  4608              MOV      r0,r1
000024  6b00              LDR      r0,[r0,#0x30]
000026  2107              MOVS     r1,#7
000028  0609              LSLS     r1,r1,#24
00002a  4308              ORRS     r0,r0,r1
00002c  2105              MOVS     r1,#5
00002e  0709              LSLS     r1,r1,#28
000030  6308              STR      r0,[r1,#0x30]
;;;1264   	// SEG36
;;;1265   	GCR->PA_L_MFP |= PA7_MFP_LCD_S36;
000032  4608              MOV      r0,r1
000034  6b00              LDR      r0,[r0,#0x30]
000036  2107              MOVS     r1,#7
000038  0709              LSLS     r1,r1,#28
00003a  4308              ORRS     r0,r0,r1
00003c  2105              MOVS     r1,#5
00003e  0709              LSLS     r1,r1,#28
000040  6308              STR      r0,[r1,#0x30]
;;;1266   	// SEG20
;;;1267   	GCR->PA_H_MFP |= PA8_MFP_LCD_S20;
000042  4608              MOV      r0,r1
000044  6b40              LDR      r0,[r0,#0x34]
000046  2107              MOVS     r1,#7
000048  4308              ORRS     r0,r0,r1
00004a  2105              MOVS     r1,#5
00004c  0709              LSLS     r1,r1,#28
00004e  6348              STR      r0,[r1,#0x34]
;;;1268   	// SEG21
;;;1269   	GCR->PA_H_MFP |= PA9_MFP_LCD_S21;
000050  4608              MOV      r0,r1
000052  6b40              LDR      r0,[r0,#0x34]
000054  2170              MOVS     r1,#0x70
000056  4308              ORRS     r0,r0,r1
000058  2105              MOVS     r1,#5
00005a  0709              LSLS     r1,r1,#28
00005c  6348              STR      r0,[r1,#0x34]
;;;1270   	// SEG22
;;;1271   	GCR->PA_H_MFP |= PA10_MFP_LCD_S22;
00005e  4608              MOV      r0,r1
000060  6b40              LDR      r0,[r0,#0x34]
000062  2107              MOVS     r1,#7
000064  0209              LSLS     r1,r1,#8
000066  4308              ORRS     r0,r0,r1
000068  2105              MOVS     r1,#5
00006a  0709              LSLS     r1,r1,#28
00006c  6348              STR      r0,[r1,#0x34]
;;;1272   	// SEG23
;;;1273   	GCR->PA_H_MFP |= PA11_MFP_LCD_S23;
00006e  4608              MOV      r0,r1
000070  6b40              LDR      r0,[r0,#0x34]
000072  2107              MOVS     r1,#7
000074  0309              LSLS     r1,r1,#12
000076  4308              ORRS     r0,r0,r1
000078  2105              MOVS     r1,#5
00007a  0709              LSLS     r1,r1,#28
00007c  6348              STR      r0,[r1,#0x34]
;;;1274   	
;;;1275   	// SEG7
;;;1276   	GCR->PB_L_MFP |= PB0_MFP_LCD_S7;
00007e  4608              MOV      r0,r1
000080  6b80              LDR      r0,[r0,#0x38]
000082  2107              MOVS     r1,#7
000084  4308              ORRS     r0,r0,r1
000086  2105              MOVS     r1,#5
000088  0709              LSLS     r1,r1,#28
00008a  6388              STR      r0,[r1,#0x38]
;;;1277   	// SEG6
;;;1278   	GCR->PB_L_MFP |= PB1_MFP_LCD_S6;
00008c  4608              MOV      r0,r1
00008e  6b80              LDR      r0,[r0,#0x38]
000090  2170              MOVS     r1,#0x70
000092  4308              ORRS     r0,r0,r1
000094  2105              MOVS     r1,#5
000096  0709              LSLS     r1,r1,#28
000098  6388              STR      r0,[r1,#0x38]
;;;1279   	// SEG5
;;;1280   	GCR->PB_L_MFP |= PB2_MFP_LCD_S5;
00009a  4608              MOV      r0,r1
00009c  6b80              LDR      r0,[r0,#0x38]
00009e  2107              MOVS     r1,#7
0000a0  0209              LSLS     r1,r1,#8
0000a2  4308              ORRS     r0,r0,r1
0000a4  2105              MOVS     r1,#5
0000a6  0709              LSLS     r1,r1,#28
0000a8  6388              STR      r0,[r1,#0x38]
;;;1281   	// SEG4
;;;1282   	GCR->PB_L_MFP |= PB3_MFP_LCD_S4;
0000aa  4608              MOV      r0,r1
0000ac  6b80              LDR      r0,[r0,#0x38]
0000ae  2107              MOVS     r1,#7
0000b0  0309              LSLS     r1,r1,#12
0000b2  4308              ORRS     r0,r0,r1
0000b4  2105              MOVS     r1,#5
0000b6  0709              LSLS     r1,r1,#28
0000b8  6388              STR      r0,[r1,#0x38]
;;;1283   	// SEG13
;;;1284   	GCR->PB_L_MFP |= PB4_MFP_LCD_S13;
0000ba  4608              MOV      r0,r1
0000bc  6b80              LDR      r0,[r0,#0x38]
0000be  2107              MOVS     r1,#7
0000c0  0409              LSLS     r1,r1,#16
0000c2  4308              ORRS     r0,r0,r1
0000c4  2105              MOVS     r1,#5
0000c6  0709              LSLS     r1,r1,#28
0000c8  6388              STR      r0,[r1,#0x38]
;;;1285   	// SEG12
;;;1286   	GCR->PB_L_MFP |= PB5_MFP_LCD_S12;
0000ca  4608              MOV      r0,r1
0000cc  6b80              LDR      r0,[r0,#0x38]
0000ce  2107              MOVS     r1,#7
0000d0  0509              LSLS     r1,r1,#20
0000d2  4308              ORRS     r0,r0,r1
0000d4  2105              MOVS     r1,#5
0000d6  0709              LSLS     r1,r1,#28
0000d8  6388              STR      r0,[r1,#0x38]
;;;1287   	// SEG11
;;;1288   	GCR->PB_L_MFP |= PB6_MFP_LCD_S11;
0000da  4608              MOV      r0,r1
0000dc  6b80              LDR      r0,[r0,#0x38]
0000de  2107              MOVS     r1,#7
0000e0  0609              LSLS     r1,r1,#24
0000e2  4308              ORRS     r0,r0,r1
0000e4  2105              MOVS     r1,#5
0000e6  0709              LSLS     r1,r1,#28
0000e8  6388              STR      r0,[r1,#0x38]
;;;1289   	// SEG10
;;;1290   	GCR->PB_L_MFP |= PB7_MFP_LCD_S10;
0000ea  4608              MOV      r0,r1
0000ec  6b80              LDR      r0,[r0,#0x38]
0000ee  2107              MOVS     r1,#7
0000f0  0709              LSLS     r1,r1,#28
0000f2  4308              ORRS     r0,r0,r1
0000f4  2105              MOVS     r1,#5
0000f6  0709              LSLS     r1,r1,#28
0000f8  6388              STR      r0,[r1,#0x38]
;;;1291   	// SEG30
;;;1292   	GCR->PB_H_MFP |= PB8_MFP_LCD_S30;
0000fa  4608              MOV      r0,r1
0000fc  6bc0              LDR      r0,[r0,#0x3c]
0000fe  2107              MOVS     r1,#7
000100  4308              ORRS     r0,r0,r1
000102  2105              MOVS     r1,#5
000104  0709              LSLS     r1,r1,#28
000106  63c8              STR      r0,[r1,#0x3c]
;;;1293   	// V1
;;;1294   	GCR->PB_H_MFP |= PB9_MFP_LCD_V1;
000108  4608              MOV      r0,r1
00010a  6bc0              LDR      r0,[r0,#0x3c]
00010c  2170              MOVS     r1,#0x70
00010e  4308              ORRS     r0,r0,r1
000110  2105              MOVS     r1,#5
000112  0709              LSLS     r1,r1,#28
000114  63c8              STR      r0,[r1,#0x3c]
;;;1295   	// V2
;;;1296   	GCR->PB_H_MFP |= PB10_MFP_LCD_V2;
000116  4608              MOV      r0,r1
000118  6bc0              LDR      r0,[r0,#0x3c]
00011a  2107              MOVS     r1,#7
00011c  0209              LSLS     r1,r1,#8
00011e  4308              ORRS     r0,r0,r1
000120  2105              MOVS     r1,#5
000122  0709              LSLS     r1,r1,#28
000124  63c8              STR      r0,[r1,#0x3c]
;;;1297   	// V3
;;;1298   	GCR->PB_H_MFP |= PB11_MFP_LCD_V3;
000126  4608              MOV      r0,r1
000128  6bc0              LDR      r0,[r0,#0x3c]
00012a  2107              MOVS     r1,#7
00012c  0309              LSLS     r1,r1,#12
00012e  4308              ORRS     r0,r0,r1
000130  2105              MOVS     r1,#5
000132  0709              LSLS     r1,r1,#28
000134  63c8              STR      r0,[r1,#0x3c]
;;;1299   	// SEG24
;;;1300   	GCR->PB_H_MFP |= PB12_MFP_LCD_S24;
000136  4608              MOV      r0,r1
000138  6bc0              LDR      r0,[r0,#0x3c]
00013a  2107              MOVS     r1,#7
00013c  0409              LSLS     r1,r1,#16
00013e  4308              ORRS     r0,r0,r1
000140  2105              MOVS     r1,#5
000142  0709              LSLS     r1,r1,#28
000144  63c8              STR      r0,[r1,#0x3c]
;;;1301   	// SEG25
;;;1302   	GCR->PB_H_MFP |= PB13_MFP_LCD_S25;
000146  4608              MOV      r0,r1
000148  6bc0              LDR      r0,[r0,#0x3c]
00014a  2107              MOVS     r1,#7
00014c  0509              LSLS     r1,r1,#20
00014e  4308              ORRS     r0,r0,r1
000150  2105              MOVS     r1,#5
000152  0709              LSLS     r1,r1,#28
000154  63c8              STR      r0,[r1,#0x3c]
;;;1303   	// SEG26
;;;1304   	GCR->PB_H_MFP |= PB14_MFP_LCD_S26;
000156  4608              MOV      r0,r1
000158  6bc0              LDR      r0,[r0,#0x3c]
00015a  2107              MOVS     r1,#7
00015c  0609              LSLS     r1,r1,#24
00015e  4308              ORRS     r0,r0,r1
000160  2105              MOVS     r1,#5
000162  0709              LSLS     r1,r1,#28
000164  63c8              STR      r0,[r1,#0x3c]
;;;1305   	// SEG31
;;;1306   	GCR->PB_H_MFP |= PB15_MFP_LCD_S31;
000166  4608              MOV      r0,r1
000168  6bc0              LDR      r0,[r0,#0x3c]
00016a  2107              MOVS     r1,#7
00016c  0709              LSLS     r1,r1,#28
00016e  4308              ORRS     r0,r0,r1
000170  2105              MOVS     r1,#5
000172  0709              LSLS     r1,r1,#28
000174  63c8              STR      r0,[r1,#0x3c]
;;;1307   	
;;;1308   	// DH1
;;;1309   	GCR->PC_L_MFP |= PC0_MFP_LCD_DH1;
000176  4855              LDR      r0,|L18.716|
000178  6800              LDR      r0,[r0,#0]
00017a  2107              MOVS     r1,#7
00017c  4308              ORRS     r0,r0,r1
00017e  4953              LDR      r1,|L18.716|
000180  6008              STR      r0,[r1,#0]
;;;1310   	// DH2
;;;1311   	GCR->PC_L_MFP |= PC1_MFP_LCD_DH2;
000182  4608              MOV      r0,r1
000184  6800              LDR      r0,[r0,#0]
000186  2170              MOVS     r1,#0x70
000188  4308              ORRS     r0,r0,r1
00018a  4950              LDR      r1,|L18.716|
00018c  6008              STR      r0,[r1,#0]
;;;1312   	// COM0
;;;1313   	GCR->PC_L_MFP |= PC2_MFP_LCD_COM0;
00018e  4608              MOV      r0,r1
000190  6800              LDR      r0,[r0,#0]
000192  2107              MOVS     r1,#7
000194  0209              LSLS     r1,r1,#8
000196  4308              ORRS     r0,r0,r1
000198  494c              LDR      r1,|L18.716|
00019a  6008              STR      r0,[r1,#0]
;;;1314   	// COM1
;;;1315   	GCR->PC_L_MFP |= PC3_MFP_LCD_COM1;
00019c  4608              MOV      r0,r1
00019e  6800              LDR      r0,[r0,#0]
0001a0  2107              MOVS     r1,#7
0001a2  0309              LSLS     r1,r1,#12
0001a4  4308              ORRS     r0,r0,r1
0001a6  4949              LDR      r1,|L18.716|
0001a8  6008              STR      r0,[r1,#0]
;;;1316   	// COM2
;;;1317   	GCR->PC_L_MFP |= PC4_MFP_LCD_COM2;
0001aa  4608              MOV      r0,r1
0001ac  6800              LDR      r0,[r0,#0]
0001ae  2107              MOVS     r1,#7
0001b0  0409              LSLS     r1,r1,#16
0001b2  4308              ORRS     r0,r0,r1
0001b4  4945              LDR      r1,|L18.716|
0001b6  6008              STR      r0,[r1,#0]
;;;1318   	// COM3
;;;1319   	GCR->PC_L_MFP |= PC5_MFP_LCD_COM3;
0001b8  4608              MOV      r0,r1
0001ba  6800              LDR      r0,[r0,#0]
0001bc  2107              MOVS     r1,#7
0001be  0509              LSLS     r1,r1,#20
0001c0  4308              ORRS     r0,r0,r1
0001c2  4942              LDR      r1,|L18.716|
0001c4  6008              STR      r0,[r1,#0]
;;;1320   	// SEG32
;;;1321   	GCR->PC_H_MFP |= PC14_MFP_LCD_S32;
0001c6  4608              MOV      r0,r1
0001c8  6840              LDR      r0,[r0,#4]
0001ca  2107              MOVS     r1,#7
0001cc  0609              LSLS     r1,r1,#24
0001ce  4308              ORRS     r0,r0,r1
0001d0  493e              LDR      r1,|L18.716|
0001d2  6048              STR      r0,[r1,#4]
;;;1322   	// SEG33
;;;1323   	GCR->PC_H_MFP |= PC15_MFP_LCD_S33;
0001d4  4608              MOV      r0,r1
0001d6  6840              LDR      r0,[r0,#4]
0001d8  2107              MOVS     r1,#7
0001da  0709              LSLS     r1,r1,#28
0001dc  4308              ORRS     r0,r0,r1
0001de  493b              LDR      r1,|L18.716|
0001e0  6048              STR      r0,[r1,#4]
;;;1324   
;;;1325   	// SEG35
;;;1326   	GCR->PD_L_MFP |= PD4_MFP_LCD_S35;
0001e2  4608              MOV      r0,r1
0001e4  6880              LDR      r0,[r0,#8]
0001e6  2107              MOVS     r1,#7
0001e8  0409              LSLS     r1,r1,#16
0001ea  4308              ORRS     r0,r0,r1
0001ec  4937              LDR      r1,|L18.716|
0001ee  6088              STR      r0,[r1,#8]
;;;1327   	// SEG34
;;;1328   	GCR->PD_L_MFP |= PD5_MFP_LCD_S34;
0001f0  4608              MOV      r0,r1
0001f2  6880              LDR      r0,[r0,#8]
0001f4  2107              MOVS     r1,#7
0001f6  0509              LSLS     r1,r1,#20
0001f8  4308              ORRS     r0,r0,r1
0001fa  4934              LDR      r1,|L18.716|
0001fc  6088              STR      r0,[r1,#8]
;;;1329   	// SEG3
;;;1330   	GCR->PD_L_MFP |= PD6_MFP_LCD_S3;
0001fe  4608              MOV      r0,r1
000200  6880              LDR      r0,[r0,#8]
000202  2107              MOVS     r1,#7
000204  0609              LSLS     r1,r1,#24
000206  4308              ORRS     r0,r0,r1
000208  4930              LDR      r1,|L18.716|
00020a  6088              STR      r0,[r1,#8]
;;;1331   	// SEG2
;;;1332   	GCR->PD_L_MFP |= PD7_MFP_LCD_S2;
00020c  4608              MOV      r0,r1
00020e  6880              LDR      r0,[r0,#8]
000210  2107              MOVS     r1,#7
000212  0709              LSLS     r1,r1,#28
000214  4308              ORRS     r0,r0,r1
000216  492d              LDR      r1,|L18.716|
000218  6088              STR      r0,[r1,#8]
;;;1333   	// SEG19
;;;1334   	GCR->PD_H_MFP |= PD8_MFP_LCD_S19;
00021a  4608              MOV      r0,r1
00021c  68c0              LDR      r0,[r0,#0xc]
00021e  2107              MOVS     r1,#7
000220  4308              ORRS     r0,r0,r1
000222  492a              LDR      r1,|L18.716|
000224  60c8              STR      r0,[r1,#0xc]
;;;1335   	// SEG18
;;;1336   	GCR->PD_H_MFP |= PD9_MFP_LCD_S18;
000226  4608              MOV      r0,r1
000228  68c0              LDR      r0,[r0,#0xc]
00022a  2170              MOVS     r1,#0x70
00022c  4308              ORRS     r0,r0,r1
00022e  4927              LDR      r1,|L18.716|
000230  60c8              STR      r0,[r1,#0xc]
;;;1337   	// SEG17
;;;1338   	GCR->PD_H_MFP |= PD10_MFP_LCD_S17;
000232  4608              MOV      r0,r1
000234  68c0              LDR      r0,[r0,#0xc]
000236  2107              MOVS     r1,#7
000238  0209              LSLS     r1,r1,#8
00023a  4308              ORRS     r0,r0,r1
00023c  4923              LDR      r1,|L18.716|
00023e  60c8              STR      r0,[r1,#0xc]
;;;1339   	// SEG16
;;;1340   	GCR->PD_H_MFP |= PD11_MFP_LCD_S16;
000240  4608              MOV      r0,r1
000242  68c0              LDR      r0,[r0,#0xc]
000244  2107              MOVS     r1,#7
000246  0309              LSLS     r1,r1,#12
000248  4308              ORRS     r0,r0,r1
00024a  4920              LDR      r1,|L18.716|
00024c  60c8              STR      r0,[r1,#0xc]
;;;1341   	// SEG15
;;;1342   	GCR->PD_H_MFP |= PD12_MFP_LCD_S15;
00024e  4608              MOV      r0,r1
000250  68c0              LDR      r0,[r0,#0xc]
000252  2107              MOVS     r1,#7
000254  0409              LSLS     r1,r1,#16
000256  4308              ORRS     r0,r0,r1
000258  491c              LDR      r1,|L18.716|
00025a  60c8              STR      r0,[r1,#0xc]
;;;1343   	// SEG14
;;;1344   	GCR->PD_H_MFP |= PD13_MFP_LCD_S14;
00025c  4608              MOV      r0,r1
00025e  68c0              LDR      r0,[r0,#0xc]
000260  2107              MOVS     r1,#7
000262  0509              LSLS     r1,r1,#20
000264  4308              ORRS     r0,r0,r1
000266  4919              LDR      r1,|L18.716|
000268  60c8              STR      r0,[r1,#0xc]
;;;1345   	// SEG1
;;;1346   	GCR->PD_H_MFP |= PD14_MFP_LCD_S1;
00026a  4608              MOV      r0,r1
00026c  68c0              LDR      r0,[r0,#0xc]
00026e  2107              MOVS     r1,#7
000270  0609              LSLS     r1,r1,#24
000272  4308              ORRS     r0,r0,r1
000274  4915              LDR      r1,|L18.716|
000276  60c8              STR      r0,[r1,#0xc]
;;;1347   	// SEG0
;;;1348   	GCR->PD_H_MFP |= PD15_MFP_LCD_S0;
000278  4608              MOV      r0,r1
00027a  68c0              LDR      r0,[r0,#0xc]
00027c  2107              MOVS     r1,#7
00027e  0709              LSLS     r1,r1,#28
000280  4308              ORRS     r0,r0,r1
000282  4912              LDR      r1,|L18.716|
000284  60c8              STR      r0,[r1,#0xc]
;;;1349   
;;;1350   	// SEG8
;;;1351   	GCR->PE_L_MFP |= PE7_MFP_LCD_S8;
000286  4608              MOV      r0,r1
000288  6900              LDR      r0,[r0,#0x10]
00028a  2107              MOVS     r1,#7
00028c  0709              LSLS     r1,r1,#28
00028e  4308              ORRS     r0,r0,r1
000290  490e              LDR      r1,|L18.716|
000292  6108              STR      r0,[r1,#0x10]
;;;1352   	// SEG9
;;;1353   	GCR->PE_H_MFP |= PE8_MFP_LCD_S9;
000294  4608              MOV      r0,r1
000296  6940              LDR      r0,[r0,#0x14]
000298  2107              MOVS     r1,#7
00029a  4308              ORRS     r0,r0,r1
00029c  490b              LDR      r1,|L18.716|
00029e  6148              STR      r0,[r1,#0x14]
;;;1354   	// SEG27
;;;1355   	GCR->PE_H_MFP |= PE13_MFP_LCD_S27;
0002a0  4608              MOV      r0,r1
0002a2  6940              LDR      r0,[r0,#0x14]
0002a4  2107              MOVS     r1,#7
0002a6  0509              LSLS     r1,r1,#20
0002a8  4308              ORRS     r0,r0,r1
0002aa  4908              LDR      r1,|L18.716|
0002ac  6148              STR      r0,[r1,#0x14]
;;;1356   	// SEG28
;;;1357   	GCR->PE_H_MFP |= PE14_MFP_LCD_S28;
0002ae  4608              MOV      r0,r1
0002b0  6940              LDR      r0,[r0,#0x14]
0002b2  2107              MOVS     r1,#7
0002b4  0609              LSLS     r1,r1,#24
0002b6  4308              ORRS     r0,r0,r1
0002b8  4904              LDR      r1,|L18.716|
0002ba  6148              STR      r0,[r1,#0x14]
;;;1358   	// SEG29
;;;1359   	GCR->PE_H_MFP |= PE15_MFP_LCD_S29;
0002bc  4608              MOV      r0,r1
0002be  6940              LDR      r0,[r0,#0x14]
0002c0  2107              MOVS     r1,#7
0002c2  0709              LSLS     r1,r1,#28
0002c4  4308              ORRS     r0,r0,r1
0002c6  4901              LDR      r1,|L18.716|
0002c8  6148              STR      r0,[r1,#0x14]
;;;1360   #endif
;;;1361   
;;;1362   #ifdef LCD_LQFP64_PIN
;;;1363   	/* switch multi-function pin to LCD for LQFP-64 */
;;;1364   	// SEG23
;;;1365   	GCR->PA_L_MFP |= PA2_MFP_LCD_S23;
;;;1366   	// SEG22
;;;1367   	GCR->PA_L_MFP |= PA3_MFP_LCD_S22;
;;;1368   	// SEG21
;;;1369   	GCR->PA_L_MFP |= PA4_MFP_LCD_S21;
;;;1370   	// SEG20
;;;1371   	GCR->PA_L_MFP |= PA5_MFP_LCD_S20;
;;;1372   	// SEG19
;;;1373   	GCR->PA_L_MFP |= PA6_MFP_LCD_S19;
;;;1374   	// SEG18
;;;1375   	GCR->PA_L_MFP |= PA7_MFP_LCD_S18;
;;;1376   	// SEG6
;;;1377   	GCR->PA_H_MFP |= PA8_MFP_LCD_S6;
;;;1378   	// SEG7
;;;1379   	GCR->PA_H_MFP |= PA9_MFP_LCD_S7;
;;;1380   	// SEG8
;;;1381   	GCR->PA_H_MFP |= PA10_MFP_LCD_S8;
;;;1382   	// SEG9
;;;1383   	GCR->PA_H_MFP |= PA11_MFP_LCD_S9;
;;;1384   	// SEG24
;;;1385   	GCR->PA_H_MFP |= PA12_MFP_LCD_S24;
;;;1386   	// SEG25
;;;1387   	GCR->PA_H_MFP |= PA13_MFP_LCD_S25;
;;;1388   	// SEG26
;;;1389   	GCR->PA_H_MFP |= PA14_MFP_LCD_S26;
;;;1390   	// SEG27
;;;1391   	GCR->PA_H_MFP |= PA15_MFP_LCD_S27;
;;;1392   	// SEG1
;;;1393   	GCR->PB_L_MFP |= PB0_MFP_LCD_S1;
;;;1394   	// SEG0
;;;1395   	GCR->PB_L_MFP |= PB1_MFP_LCD_S0;
;;;1396   	// COM3
;;;1397   	GCR->PB_L_MFP |= PB2_MFP_LCD_COM3;
;;;1398   	// COM2
;;;1399   	GCR->PB_L_MFP |= PB3_MFP_LCD_COM2;
;;;1400   	// SEG5
;;;1401   	GCR->PB_L_MFP |= PB4_MFP_LCD_S5;
;;;1402   	// SEG4
;;;1403   	GCR->PB_L_MFP |= PB5_MFP_LCD_S4;
;;;1404   	// SEG3
;;;1405   	GCR->PB_L_MFP |= PB6_MFP_LCD_S3;
;;;1406   	// SEG2
;;;1407   	GCR->PB_L_MFP |= PB7_MFP_LCD_S2;
;;;1408   	// SEG13
;;;1409   	GCR->PB_H_MFP |= PB8_MFP_LCD_S13;
;;;1410   
;;;1411   	// V1
;;;1412   	GCR->PB_H_MFP |= PB9_MFP_LCD_V1;
;;;1413   	// V2
;;;1414   	GCR->PB_H_MFP |= PB10_MFP_LCD_V2;
;;;1415   	// V3
;;;1416   	GCR->PB_H_MFP |= PB11_MFP_LCD_V3;
;;;1417   
;;;1418   	// SEG10
;;;1419   	GCR->PB_H_MFP |= PB12_MFP_LCD_S10;
;;;1420   	// SEG11
;;;1421   	GCR->PB_H_MFP |= PB13_MFP_LCD_S11;
;;;1422   	// SEG12
;;;1423   	GCR->PB_H_MFP |= PB14_MFP_LCD_S12;
;;;1424   	// SEG14
;;;1425   	GCR->PB_H_MFP |= PB15_MFP_LCD_S14;
;;;1426   
;;;1427   	// DH1
;;;1428   	GCR->PC_L_MFP |= PC0_MFP_LCD_DH1;
;;;1429   	// DH2
;;;1430   	GCR->PC_L_MFP |= PC1_MFP_LCD_DH2;
;;;1431   	// COM0
;;;1432   	GCR->PC_L_MFP |= PC2_MFP_LCD_COM0;
;;;1433   	// COM1
;;;1434   	GCR->PC_L_MFP |= PC3_MFP_LCD_COM1;
;;;1435   	
;;;1436   	// SEG17
;;;1437   	GCR->PC_L_MFP |= PC7_MFP_LCD_S17;
;;;1438   
;;;1439   	// SEG28
;;;1440   	GCR->PC_H_MFP |= PC8_MFP_LCD_S28;
;;;1441   	// SEG29
;;;1442   	GCR->PC_H_MFP |= PC9_MFP_LCD_S29;
;;;1443   	// SEG30
;;;1444   	GCR->PC_H_MFP |= PC10_MFP_LCD_S30;
;;;1445   	// SEG31
;;;1446   	GCR->PC_H_MFP |= PC11_MFP_LCD_S31;
;;;1447   
;;;1448   	// SEG15
;;;1449   	GCR->PC_H_MFP |= PC14_MFP_LCD_S15;
;;;1450   	// SEG16
;;;1451   	GCR->PC_H_MFP |= PC15_MFP_LCD_S16;
;;;1452   #endif
;;;1453   
;;;1454   
;;;1455   }
0002ca  4770              BX       lr
;;;1456   
                          ENDP

                  |L18.716|
                          DCD      0x50000040

                          AREA ||i.LCD_SegmentPinEnable||, CODE, READONLY, ALIGN=2

                  LCD_SegmentPinEnable PROC
;;;854     */
;;;855    void LCD_SegmentPinEnable(uint32_t pinno, bool enable)
000000  b500              PUSH     {lr}
;;;856    {
;;;857    
;;;858    #ifdef LCD_LQFP100_PIN
;;;859    	//uint32_t bitset;
;;;860    	//if(enable == true) bitset = 7;
;;;861    	//else bitset = 0;
;;;862    
;;;863    	if (pinno == 0) {
000002  2800              CMP      r0,#0
000004  d11f              BNE      |L19.70|
;;;864    		// Seg 0
;;;865    		GCR->PD_H_MFP &= ~PD15_MFP_MASK;
000006  4afd              LDR      r2,|L19.1020|
000008  68d2              LDR      r2,[r2,#0xc]
00000a  2307              MOVS     r3,#7
00000c  071b              LSLS     r3,r3,#28
00000e  439a              BICS     r2,r2,r3
000010  4bfa              LDR      r3,|L19.1020|
000012  60da              STR      r2,[r3,#0xc]
;;;866    		GCR->PD_H_MFP |= (enable == true) ? PD15_MFP_LCD_S0:0;
000014  461a              MOV      r2,r3
000016  68d2              LDR      r2,[r2,#0xc]
000018  2901              CMP      r1,#1
00001a  d102              BNE      |L19.34|
00001c  2307              MOVS     r3,#7
00001e  071b              LSLS     r3,r3,#28
000020  e000              B        |L19.36|
                  |L19.34|
000022  2300              MOVS     r3,#0
                  |L19.36|
000024  431a              ORRS     r2,r2,r3
000026  4bf5              LDR      r3,|L19.1020|
000028  60da              STR      r2,[r3,#0xc]
;;;867    		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_15) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_15);
00002a  2901              CMP      r1,#1
00002c  d104              BNE      |L19.56|
00002e  4af4              LDR      r2,|L19.1024|
000030  6852              LDR      r2,[r2,#4]
000032  07cb              LSLS     r3,r1,#31
000034  431a              ORRS     r2,r2,r3
000036  e003              B        |L19.64|
                  |L19.56|
000038  4af1              LDR      r2,|L19.1024|
00003a  6852              LDR      r2,[r2,#4]
00003c  0052              LSLS     r2,r2,#1
00003e  0852              LSRS     r2,r2,#1
                  |L19.64|
000040  4bef              LDR      r3,|L19.1024|
000042  605a              STR      r2,[r3,#4]
000044  e215              B        |L19.1138|
                  |L19.70|
;;;868    	} else if (pinno == 1) {
000046  2801              CMP      r0,#1
000048  d120              BNE      |L19.140|
;;;869    		// Seg 1
;;;870      		GCR->PD_H_MFP &= ~PD14_MFP_MASK;
00004a  4aec              LDR      r2,|L19.1020|
00004c  68d2              LDR      r2,[r2,#0xc]
00004e  2307              MOVS     r3,#7
000050  061b              LSLS     r3,r3,#24
000052  439a              BICS     r2,r2,r3
000054  4be9              LDR      r3,|L19.1020|
000056  60da              STR      r2,[r3,#0xc]
;;;871    		GCR->PD_H_MFP |= (enable == true) ? PD14_MFP_LCD_S1:0;
000058  461a              MOV      r2,r3
00005a  68d2              LDR      r2,[r2,#0xc]
00005c  2901              CMP      r1,#1
00005e  d102              BNE      |L19.102|
000060  2307              MOVS     r3,#7
000062  061b              LSLS     r3,r3,#24
000064  e000              B        |L19.104|
                  |L19.102|
000066  2300              MOVS     r3,#0
                  |L19.104|
000068  431a              ORRS     r2,r2,r3
00006a  4be4              LDR      r3,|L19.1020|
00006c  60da              STR      r2,[r3,#0xc]
;;;872    		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_14) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_14);
00006e  2901              CMP      r1,#1
000070  d104              BNE      |L19.124|
000072  4ae3              LDR      r2,|L19.1024|
000074  6852              LDR      r2,[r2,#4]
000076  078b              LSLS     r3,r1,#30
000078  431a              ORRS     r2,r2,r3
00007a  e004              B        |L19.134|
                  |L19.124|
00007c  4ae0              LDR      r2,|L19.1024|
00007e  6852              LDR      r2,[r2,#4]
000080  2301              MOVS     r3,#1
000082  079b              LSLS     r3,r3,#30
000084  439a              BICS     r2,r2,r3
                  |L19.134|
000086  4bde              LDR      r3,|L19.1024|
000088  605a              STR      r2,[r3,#4]
00008a  e1f2              B        |L19.1138|
                  |L19.140|
;;;873    	} else if (pinno == 2) {
00008c  2802              CMP      r0,#2
00008e  d120              BNE      |L19.210|
;;;874    		// Seg 2
;;;875      		GCR->PD_L_MFP &= ~PD7_MFP_MASK;
000090  4ada              LDR      r2,|L19.1020|
000092  6892              LDR      r2,[r2,#8]
000094  2307              MOVS     r3,#7
000096  071b              LSLS     r3,r3,#28
000098  439a              BICS     r2,r2,r3
00009a  4bd8              LDR      r3,|L19.1020|
00009c  609a              STR      r2,[r3,#8]
;;;876    		GCR->PD_L_MFP |= (enable == true) ? PD7_MFP_LCD_S2:0;
00009e  461a              MOV      r2,r3
0000a0  6892              LDR      r2,[r2,#8]
0000a2  2901              CMP      r1,#1
0000a4  d102              BNE      |L19.172|
0000a6  2307              MOVS     r3,#7
0000a8  071b              LSLS     r3,r3,#28
0000aa  e000              B        |L19.174|
                  |L19.172|
0000ac  2300              MOVS     r3,#0
                  |L19.174|
0000ae  431a              ORRS     r2,r2,r3
0000b0  4bd2              LDR      r3,|L19.1020|
0000b2  609a              STR      r2,[r3,#8]
;;;877    		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_7) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_7);
0000b4  2901              CMP      r1,#1
0000b6  d104              BNE      |L19.194|
0000b8  4ad1              LDR      r2,|L19.1024|
0000ba  6852              LDR      r2,[r2,#4]
0000bc  05cb              LSLS     r3,r1,#23
0000be  431a              ORRS     r2,r2,r3
0000c0  e004              B        |L19.204|
                  |L19.194|
0000c2  4acf              LDR      r2,|L19.1024|
0000c4  6852              LDR      r2,[r2,#4]
0000c6  2301              MOVS     r3,#1
0000c8  05db              LSLS     r3,r3,#23
0000ca  439a              BICS     r2,r2,r3
                  |L19.204|
0000cc  4bcc              LDR      r3,|L19.1024|
0000ce  605a              STR      r2,[r3,#4]
0000d0  e1cf              B        |L19.1138|
                  |L19.210|
;;;878    	} else if (pinno == 3) {
0000d2  2803              CMP      r0,#3
0000d4  d120              BNE      |L19.280|
;;;879    		// Seg 3
;;;880      		GCR->PD_L_MFP &= ~PD6_MFP_MASK;
0000d6  4ac9              LDR      r2,|L19.1020|
0000d8  6892              LDR      r2,[r2,#8]
0000da  2307              MOVS     r3,#7
0000dc  061b              LSLS     r3,r3,#24
0000de  439a              BICS     r2,r2,r3
0000e0  4bc6              LDR      r3,|L19.1020|
0000e2  609a              STR      r2,[r3,#8]
;;;881    		GCR->PD_L_MFP |= (enable == true) ? PD6_MFP_LCD_S3:0;
0000e4  461a              MOV      r2,r3
0000e6  6892              LDR      r2,[r2,#8]
0000e8  2901              CMP      r1,#1
0000ea  d102              BNE      |L19.242|
0000ec  2307              MOVS     r3,#7
0000ee  061b              LSLS     r3,r3,#24
0000f0  e000              B        |L19.244|
                  |L19.242|
0000f2  2300              MOVS     r3,#0
                  |L19.244|
0000f4  431a              ORRS     r2,r2,r3
0000f6  4bc1              LDR      r3,|L19.1020|
0000f8  609a              STR      r2,[r3,#8]
;;;882    		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_6) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_6);
0000fa  2901              CMP      r1,#1
0000fc  d104              BNE      |L19.264|
0000fe  4ac0              LDR      r2,|L19.1024|
000100  6852              LDR      r2,[r2,#4]
000102  058b              LSLS     r3,r1,#22
000104  431a              ORRS     r2,r2,r3
000106  e004              B        |L19.274|
                  |L19.264|
000108  4abd              LDR      r2,|L19.1024|
00010a  6852              LDR      r2,[r2,#4]
00010c  2301              MOVS     r3,#1
00010e  059b              LSLS     r3,r3,#22
000110  439a              BICS     r2,r2,r3
                  |L19.274|
000112  4bbb              LDR      r3,|L19.1024|
000114  605a              STR      r2,[r3,#4]
000116  e1ac              B        |L19.1138|
                  |L19.280|
;;;883    	} else if (pinno == 4) {
000118  2804              CMP      r0,#4
00011a  d126              BNE      |L19.362|
;;;884    		// Seg 4
;;;885      		GCR->PB_L_MFP &= ~PB3_MFP_MASK;
00011c  2205              MOVS     r2,#5
00011e  0712              LSLS     r2,r2,#28
000120  6b92              LDR      r2,[r2,#0x38]
000122  2307              MOVS     r3,#7
000124  031b              LSLS     r3,r3,#12
000126  439a              BICS     r2,r2,r3
000128  2305              MOVS     r3,#5
00012a  071b              LSLS     r3,r3,#28
00012c  639a              STR      r2,[r3,#0x38]
;;;886    		GCR->PB_L_MFP |= (enable == true) ? PB3_MFP_LCD_S4:0;
00012e  461a              MOV      r2,r3
000130  6b92              LDR      r2,[r2,#0x38]
000132  2901              CMP      r1,#1
000134  d102              BNE      |L19.316|
000136  2307              MOVS     r3,#7
000138  031b              LSLS     r3,r3,#12
00013a  e000              B        |L19.318|
                  |L19.316|
00013c  2300              MOVS     r3,#0
                  |L19.318|
00013e  431a              ORRS     r2,r2,r3
000140  2305              MOVS     r3,#5
000142  071b              LSLS     r3,r3,#28
000144  639a              STR      r2,[r3,#0x38]
;;;887    		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_3) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_3);
000146  2901              CMP      r1,#1
000148  d105              BNE      |L19.342|
00014a  4aad              LDR      r2,|L19.1024|
00014c  3a80              SUBS     r2,r2,#0x80
00014e  6852              LDR      r2,[r2,#4]
000150  04cb              LSLS     r3,r1,#19
000152  431a              ORRS     r2,r2,r3
000154  e005              B        |L19.354|
                  |L19.342|
000156  4aaa              LDR      r2,|L19.1024|
000158  3a80              SUBS     r2,r2,#0x80
00015a  6852              LDR      r2,[r2,#4]
00015c  2301              MOVS     r3,#1
00015e  04db              LSLS     r3,r3,#19
000160  439a              BICS     r2,r2,r3
                  |L19.354|
000162  4ba7              LDR      r3,|L19.1024|
000164  3b80              SUBS     r3,r3,#0x80
000166  605a              STR      r2,[r3,#4]
000168  e183              B        |L19.1138|
                  |L19.362|
;;;888    	} else if (pinno == 5) {
00016a  2805              CMP      r0,#5
00016c  d124              BNE      |L19.440|
;;;889    		// Seg 5
;;;890    		GCR->PB_L_MFP &= ~PB2_MFP_MASK;
00016e  0702              LSLS     r2,r0,#28
000170  6b92              LDR      r2,[r2,#0x38]
000172  2307              MOVS     r3,#7
000174  021b              LSLS     r3,r3,#8
000176  439a              BICS     r2,r2,r3
000178  0703              LSLS     r3,r0,#28
00017a  639a              STR      r2,[r3,#0x38]
;;;891    		GCR->PB_L_MFP |= (enable == true) ? PB2_MFP_LCD_S5:0;
00017c  0702              LSLS     r2,r0,#28
00017e  6b92              LDR      r2,[r2,#0x38]
000180  2901              CMP      r1,#1
000182  d102              BNE      |L19.394|
000184  2307              MOVS     r3,#7
000186  021b              LSLS     r3,r3,#8
000188  e000              B        |L19.396|
                  |L19.394|
00018a  2300              MOVS     r3,#0
                  |L19.396|
00018c  431a              ORRS     r2,r2,r3
00018e  2305              MOVS     r3,#5
000190  071b              LSLS     r3,r3,#28
000192  639a              STR      r2,[r3,#0x38]
;;;892    		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_2) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_2);
000194  2901              CMP      r1,#1
000196  d105              BNE      |L19.420|
000198  4a99              LDR      r2,|L19.1024|
00019a  3a80              SUBS     r2,r2,#0x80
00019c  6852              LDR      r2,[r2,#4]
00019e  048b              LSLS     r3,r1,#18
0001a0  431a              ORRS     r2,r2,r3
0001a2  e005              B        |L19.432|
                  |L19.420|
0001a4  4a96              LDR      r2,|L19.1024|
0001a6  3a80              SUBS     r2,r2,#0x80
0001a8  6852              LDR      r2,[r2,#4]
0001aa  2301              MOVS     r3,#1
0001ac  049b              LSLS     r3,r3,#18
0001ae  439a              BICS     r2,r2,r3
                  |L19.432|
0001b0  4b93              LDR      r3,|L19.1024|
0001b2  3b80              SUBS     r3,r3,#0x80
0001b4  605a              STR      r2,[r3,#4]
0001b6  e15c              B        |L19.1138|
                  |L19.440|
;;;893    	} else if (pinno == 6) {
0001b8  2806              CMP      r0,#6
0001ba  d124              BNE      |L19.518|
;;;894    		// Seg 6
;;;895    		GCR->PB_L_MFP &= ~PB1_MFP_MASK;
0001bc  2205              MOVS     r2,#5
0001be  0712              LSLS     r2,r2,#28
0001c0  6b92              LDR      r2,[r2,#0x38]
0001c2  2370              MOVS     r3,#0x70
0001c4  439a              BICS     r2,r2,r3
0001c6  2305              MOVS     r3,#5
0001c8  071b              LSLS     r3,r3,#28
0001ca  639a              STR      r2,[r3,#0x38]
;;;896    		GCR->PB_L_MFP |= (enable == true) ? PB1_MFP_LCD_S6:0;
0001cc  461a              MOV      r2,r3
0001ce  6b92              LDR      r2,[r2,#0x38]
0001d0  2901              CMP      r1,#1
0001d2  d101              BNE      |L19.472|
0001d4  2370              MOVS     r3,#0x70
0001d6  e000              B        |L19.474|
                  |L19.472|
0001d8  2300              MOVS     r3,#0
                  |L19.474|
0001da  431a              ORRS     r2,r2,r3
0001dc  2305              MOVS     r3,#5
0001de  071b              LSLS     r3,r3,#28
0001e0  639a              STR      r2,[r3,#0x38]
;;;897    		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_1) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_1);
0001e2  2901              CMP      r1,#1
0001e4  d105              BNE      |L19.498|
0001e6  4a86              LDR      r2,|L19.1024|
0001e8  3a80              SUBS     r2,r2,#0x80
0001ea  6852              LDR      r2,[r2,#4]
0001ec  044b              LSLS     r3,r1,#17
0001ee  431a              ORRS     r2,r2,r3
0001f0  e005              B        |L19.510|
                  |L19.498|
0001f2  4a83              LDR      r2,|L19.1024|
0001f4  3a80              SUBS     r2,r2,#0x80
0001f6  6852              LDR      r2,[r2,#4]
0001f8  2301              MOVS     r3,#1
0001fa  045b              LSLS     r3,r3,#17
0001fc  439a              BICS     r2,r2,r3
                  |L19.510|
0001fe  4b80              LDR      r3,|L19.1024|
000200  3b80              SUBS     r3,r3,#0x80
000202  605a              STR      r2,[r3,#4]
000204  e135              B        |L19.1138|
                  |L19.518|
;;;898    	} else if (pinno == 7) {
000206  2807              CMP      r0,#7
000208  d123              BNE      |L19.594|
;;;899    		// Seg 7
;;;900    		GCR->PB_L_MFP &= ~PB0_MFP_MASK;
00020a  2205              MOVS     r2,#5
00020c  0712              LSLS     r2,r2,#28
00020e  6b92              LDR      r2,[r2,#0x38]
000210  4382              BICS     r2,r2,r0
000212  2305              MOVS     r3,#5
000214  071b              LSLS     r3,r3,#28
000216  639a              STR      r2,[r3,#0x38]
;;;901    		GCR->PB_L_MFP |= (enable == true) ? PB0_MFP_LCD_S7:0;
000218  461a              MOV      r2,r3
00021a  6b92              LDR      r2,[r2,#0x38]
00021c  2901              CMP      r1,#1
00021e  d101              BNE      |L19.548|
000220  2307              MOVS     r3,#7
000222  e000              B        |L19.550|
                  |L19.548|
000224  2300              MOVS     r3,#0
                  |L19.550|
000226  431a              ORRS     r2,r2,r3
000228  2305              MOVS     r3,#5
00022a  071b              LSLS     r3,r3,#28
00022c  639a              STR      r2,[r3,#0x38]
;;;902    		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_0) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_0);
00022e  2901              CMP      r1,#1
000230  d105              BNE      |L19.574|
000232  4a73              LDR      r2,|L19.1024|
000234  3a80              SUBS     r2,r2,#0x80
000236  6852              LDR      r2,[r2,#4]
000238  040b              LSLS     r3,r1,#16
00023a  431a              ORRS     r2,r2,r3
00023c  e005              B        |L19.586|
                  |L19.574|
00023e  4a70              LDR      r2,|L19.1024|
000240  3a80              SUBS     r2,r2,#0x80
000242  6852              LDR      r2,[r2,#4]
000244  2301              MOVS     r3,#1
000246  041b              LSLS     r3,r3,#16
000248  439a              BICS     r2,r2,r3
                  |L19.586|
00024a  4b6d              LDR      r3,|L19.1024|
00024c  3b80              SUBS     r3,r3,#0x80
00024e  605a              STR      r2,[r3,#4]
000250  e10f              B        |L19.1138|
                  |L19.594|
;;;903    	} else if (pinno == 8) {
000252  2808              CMP      r0,#8
000254  d123              BNE      |L19.670|
;;;904    		// Seg 8
;;;905    		GCR->PE_L_MFP &= ~PE7_MFP_MASK;
000256  4a69              LDR      r2,|L19.1020|
000258  6912              LDR      r2,[r2,#0x10]
00025a  2307              MOVS     r3,#7
00025c  071b              LSLS     r3,r3,#28
00025e  439a              BICS     r2,r2,r3
000260  4b66              LDR      r3,|L19.1020|
000262  611a              STR      r2,[r3,#0x10]
;;;906    		GCR->PE_L_MFP |= (enable == true) ? PE7_MFP_LCD_S8:0;
000264  461a              MOV      r2,r3
000266  6912              LDR      r2,[r2,#0x10]
000268  2901              CMP      r1,#1
00026a  d102              BNE      |L19.626|
00026c  2307              MOVS     r3,#7
00026e  071b              LSLS     r3,r3,#28
000270  e000              B        |L19.628|
                  |L19.626|
000272  2300              MOVS     r3,#0
                  |L19.628|
000274  431a              ORRS     r2,r2,r3
000276  4b61              LDR      r3,|L19.1020|
000278  611a              STR      r2,[r3,#0x10]
;;;907    		GPIOE->OFFD = (enable == true)? (GPIOE->OFFD | GPIO_OFFD_OFFD_7) : (GPIOE->OFFD &~GPIO_OFFD_OFFD_7);
00027a  2901              CMP      r1,#1
00027c  d105              BNE      |L19.650|
00027e  4a60              LDR      r2,|L19.1024|
000280  3240              ADDS     r2,r2,#0x40
000282  6852              LDR      r2,[r2,#4]
000284  05cb              LSLS     r3,r1,#23
000286  431a              ORRS     r2,r2,r3
000288  e005              B        |L19.662|
                  |L19.650|
00028a  4a5d              LDR      r2,|L19.1024|
00028c  3240              ADDS     r2,r2,#0x40
00028e  6852              LDR      r2,[r2,#4]
000290  2301              MOVS     r3,#1
000292  05db              LSLS     r3,r3,#23
000294  439a              BICS     r2,r2,r3
                  |L19.662|
000296  4b5a              LDR      r3,|L19.1024|
000298  3340              ADDS     r3,r3,#0x40
00029a  605a              STR      r2,[r3,#4]
00029c  e0e9              B        |L19.1138|
                  |L19.670|
;;;908    	} else if (pinno == 9) {
00029e  2809              CMP      r0,#9
0002a0  d121              BNE      |L19.742|
;;;909    		// Seg 9
;;;910    		GCR->PE_H_MFP &= ~PE8_MFP_MASK;
0002a2  4a56              LDR      r2,|L19.1020|
0002a4  6952              LDR      r2,[r2,#0x14]
0002a6  08d2              LSRS     r2,r2,#3
0002a8  00d2              LSLS     r2,r2,#3
0002aa  4b54              LDR      r3,|L19.1020|
0002ac  615a              STR      r2,[r3,#0x14]
;;;911    		GCR->PE_H_MFP |= (enable == true) ? PE8_MFP_LCD_S9:0;
0002ae  461a              MOV      r2,r3
0002b0  6952              LDR      r2,[r2,#0x14]
0002b2  2901              CMP      r1,#1
0002b4  d101              BNE      |L19.698|
0002b6  2307              MOVS     r3,#7
0002b8  e000              B        |L19.700|
                  |L19.698|
0002ba  2300              MOVS     r3,#0
                  |L19.700|
0002bc  431a              ORRS     r2,r2,r3
0002be  4b4f              LDR      r3,|L19.1020|
0002c0  615a              STR      r2,[r3,#0x14]
;;;912    		GPIOE->OFFD = (enable == true)? (GPIOE->OFFD | GPIO_OFFD_OFFD_8) : (GPIOE->OFFD &~GPIO_OFFD_OFFD_8);
0002c2  2901              CMP      r1,#1
0002c4  d105              BNE      |L19.722|
0002c6  4a4e              LDR      r2,|L19.1024|
0002c8  3240              ADDS     r2,r2,#0x40
0002ca  6852              LDR      r2,[r2,#4]
0002cc  060b              LSLS     r3,r1,#24
0002ce  431a              ORRS     r2,r2,r3
0002d0  e005              B        |L19.734|
                  |L19.722|
0002d2  4a4b              LDR      r2,|L19.1024|
0002d4  3240              ADDS     r2,r2,#0x40
0002d6  6852              LDR      r2,[r2,#4]
0002d8  2301              MOVS     r3,#1
0002da  061b              LSLS     r3,r3,#24
0002dc  439a              BICS     r2,r2,r3
                  |L19.734|
0002de  4b48              LDR      r3,|L19.1024|
0002e0  3340              ADDS     r3,r3,#0x40
0002e2  605a              STR      r2,[r3,#4]
0002e4  e0c5              B        |L19.1138|
                  |L19.742|
;;;913    	} else if (pinno == 10) {
0002e6  280a              CMP      r0,#0xa
0002e8  d124              BNE      |L19.820|
;;;914    		// Seg 10
;;;915    		GCR->PB_L_MFP &= ~PB7_MFP_MASK;
0002ea  06c2              LSLS     r2,r0,#27
0002ec  6b92              LDR      r2,[r2,#0x38]
0002ee  2307              MOVS     r3,#7
0002f0  071b              LSLS     r3,r3,#28
0002f2  439a              BICS     r2,r2,r3
0002f4  06c3              LSLS     r3,r0,#27
0002f6  639a              STR      r2,[r3,#0x38]
;;;916    		GCR->PB_L_MFP |= (enable == true) ? PB7_MFP_LCD_S10:0;
0002f8  06c2              LSLS     r2,r0,#27
0002fa  6b92              LDR      r2,[r2,#0x38]
0002fc  2901              CMP      r1,#1
0002fe  d102              BNE      |L19.774|
000300  2307              MOVS     r3,#7
000302  071b              LSLS     r3,r3,#28
000304  e000              B        |L19.776|
                  |L19.774|
000306  2300              MOVS     r3,#0
                  |L19.776|
000308  431a              ORRS     r2,r2,r3
00030a  2305              MOVS     r3,#5
00030c  071b              LSLS     r3,r3,#28
00030e  639a              STR      r2,[r3,#0x38]
;;;917    		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_7) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_7);
000310  2901              CMP      r1,#1
000312  d105              BNE      |L19.800|
000314  4a3a              LDR      r2,|L19.1024|
000316  3a80              SUBS     r2,r2,#0x80
000318  6852              LDR      r2,[r2,#4]
00031a  05cb              LSLS     r3,r1,#23
00031c  431a              ORRS     r2,r2,r3
00031e  e005              B        |L19.812|
                  |L19.800|
000320  4a37              LDR      r2,|L19.1024|
000322  3a80              SUBS     r2,r2,#0x80
000324  6852              LDR      r2,[r2,#4]
000326  2301              MOVS     r3,#1
000328  05db              LSLS     r3,r3,#23
00032a  439a              BICS     r2,r2,r3
                  |L19.812|
00032c  4b34              LDR      r3,|L19.1024|
00032e  3b80              SUBS     r3,r3,#0x80
000330  605a              STR      r2,[r3,#4]
000332  e09e              B        |L19.1138|
                  |L19.820|
;;;918    	} else if (pinno == 11) {
000334  280b              CMP      r0,#0xb
000336  d126              BNE      |L19.902|
;;;919    		// Seg 11
;;;920    		GCR->PB_L_MFP &= ~PB6_MFP_MASK;
000338  2205              MOVS     r2,#5
00033a  0712              LSLS     r2,r2,#28
00033c  6b92              LDR      r2,[r2,#0x38]
00033e  2307              MOVS     r3,#7
000340  061b              LSLS     r3,r3,#24
000342  439a              BICS     r2,r2,r3
000344  2305              MOVS     r3,#5
000346  071b              LSLS     r3,r3,#28
000348  639a              STR      r2,[r3,#0x38]
;;;921    		GCR->PB_L_MFP |= (enable == true) ? PB6_MFP_LCD_S11:0;
00034a  461a              MOV      r2,r3
00034c  6b92              LDR      r2,[r2,#0x38]
00034e  2901              CMP      r1,#1
000350  d102              BNE      |L19.856|
000352  2307              MOVS     r3,#7
000354  061b              LSLS     r3,r3,#24
000356  e000              B        |L19.858|
                  |L19.856|
000358  2300              MOVS     r3,#0
                  |L19.858|
00035a  431a              ORRS     r2,r2,r3
00035c  2305              MOVS     r3,#5
00035e  071b              LSLS     r3,r3,#28
000360  639a              STR      r2,[r3,#0x38]
;;;922    		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_6) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_6);
000362  2901              CMP      r1,#1
000364  d105              BNE      |L19.882|
000366  4a26              LDR      r2,|L19.1024|
000368  3a80              SUBS     r2,r2,#0x80
00036a  6852              LDR      r2,[r2,#4]
00036c  058b              LSLS     r3,r1,#22
00036e  431a              ORRS     r2,r2,r3
000370  e005              B        |L19.894|
                  |L19.882|
000372  4a23              LDR      r2,|L19.1024|
000374  3a80              SUBS     r2,r2,#0x80
000376  6852              LDR      r2,[r2,#4]
000378  2301              MOVS     r3,#1
00037a  059b              LSLS     r3,r3,#22
00037c  439a              BICS     r2,r2,r3
                  |L19.894|
00037e  4b20              LDR      r3,|L19.1024|
000380  3b80              SUBS     r3,r3,#0x80
000382  605a              STR      r2,[r3,#4]
000384  e075              B        |L19.1138|
                  |L19.902|
;;;923    	} else if (pinno == 12) {
000386  280c              CMP      r0,#0xc
000388  d126              BNE      |L19.984|
;;;924    		// Seg 12
;;;925    		GCR->PB_L_MFP &= ~PB5_MFP_MASK;
00038a  2205              MOVS     r2,#5
00038c  0712              LSLS     r2,r2,#28
00038e  6b92              LDR      r2,[r2,#0x38]
000390  2307              MOVS     r3,#7
000392  051b              LSLS     r3,r3,#20
000394  439a              BICS     r2,r2,r3
000396  2305              MOVS     r3,#5
000398  071b              LSLS     r3,r3,#28
00039a  639a              STR      r2,[r3,#0x38]
;;;926    		GCR->PB_L_MFP |= (enable == true) ? PB5_MFP_LCD_S12:0;
00039c  461a              MOV      r2,r3
00039e  6b92              LDR      r2,[r2,#0x38]
0003a0  2901              CMP      r1,#1
0003a2  d102              BNE      |L19.938|
0003a4  2307              MOVS     r3,#7
0003a6  051b              LSLS     r3,r3,#20
0003a8  e000              B        |L19.940|
                  |L19.938|
0003aa  2300              MOVS     r3,#0
                  |L19.940|
0003ac  431a              ORRS     r2,r2,r3
0003ae  2305              MOVS     r3,#5
0003b0  071b              LSLS     r3,r3,#28
0003b2  639a              STR      r2,[r3,#0x38]
;;;927    		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_5) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_5);
0003b4  2901              CMP      r1,#1
0003b6  d105              BNE      |L19.964|
0003b8  4a11              LDR      r2,|L19.1024|
0003ba  3a80              SUBS     r2,r2,#0x80
0003bc  6852              LDR      r2,[r2,#4]
0003be  054b              LSLS     r3,r1,#21
0003c0  431a              ORRS     r2,r2,r3
0003c2  e005              B        |L19.976|
                  |L19.964|
0003c4  4a0e              LDR      r2,|L19.1024|
0003c6  3a80              SUBS     r2,r2,#0x80
0003c8  6852              LDR      r2,[r2,#4]
0003ca  2301              MOVS     r3,#1
0003cc  055b              LSLS     r3,r3,#21
0003ce  439a              BICS     r2,r2,r3
                  |L19.976|
0003d0  4b0b              LDR      r3,|L19.1024|
0003d2  3b80              SUBS     r3,r3,#0x80
0003d4  605a              STR      r2,[r3,#4]
0003d6  e04c              B        |L19.1138|
                  |L19.984|
;;;928    	} else if (pinno == 13) {
0003d8  280d              CMP      r0,#0xd
0003da  d127              BNE      |L19.1068|
;;;929    		// Seg 13
;;;930    		GCR->PB_L_MFP &= ~PB4_MFP_MASK;
0003dc  2205              MOVS     r2,#5
0003de  0712              LSLS     r2,r2,#28
0003e0  6b92              LDR      r2,[r2,#0x38]
0003e2  2307              MOVS     r3,#7
0003e4  041b              LSLS     r3,r3,#16
0003e6  439a              BICS     r2,r2,r3
0003e8  2305              MOVS     r3,#5
0003ea  071b              LSLS     r3,r3,#28
0003ec  639a              STR      r2,[r3,#0x38]
;;;931    		GCR->PB_L_MFP |= (enable == true) ? PB4_MFP_LCD_S13:0;
0003ee  461a              MOV      r2,r3
0003f0  6b92              LDR      r2,[r2,#0x38]
0003f2  2901              CMP      r1,#1
0003f4  d106              BNE      |L19.1028|
0003f6  2307              MOVS     r3,#7
0003f8  041b              LSLS     r3,r3,#16
0003fa  e004              B        |L19.1030|
                  |L19.1020|
                          DCD      0x50000040
                  |L19.1024|
                          DCD      0x500040c0
                  |L19.1028|
000404  2300              MOVS     r3,#0
                  |L19.1030|
000406  431a              ORRS     r2,r2,r3
000408  2305              MOVS     r3,#5
00040a  071b              LSLS     r3,r3,#28
00040c  639a              STR      r2,[r3,#0x38]
;;;932    		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_4) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_4);
00040e  2901              CMP      r1,#1
000410  d104              BNE      |L19.1052|
000412  4af8              LDR      r2,|L19.2036|
000414  6852              LDR      r2,[r2,#4]
000416  050b              LSLS     r3,r1,#20
000418  431a              ORRS     r2,r2,r3
00041a  e004              B        |L19.1062|
                  |L19.1052|
00041c  4af5              LDR      r2,|L19.2036|
00041e  6852              LDR      r2,[r2,#4]
000420  2301              MOVS     r3,#1
000422  051b              LSLS     r3,r3,#20
000424  439a              BICS     r2,r2,r3
                  |L19.1062|
000426  4bf3              LDR      r3,|L19.2036|
000428  605a              STR      r2,[r3,#4]
00042a  e3df              B        |L19.3052|
                  |L19.1068|
;;;933    	} else if (pinno == 14) {
00042c  280e              CMP      r0,#0xe
00042e  d121              BNE      |L19.1140|
;;;934    		// Seg 14
;;;935    		GCR->PD_H_MFP &= ~PD13_MFP_MASK;
000430  4af1              LDR      r2,|L19.2040|
000432  68d2              LDR      r2,[r2,#0xc]
000434  04c3              LSLS     r3,r0,#19
000436  439a              BICS     r2,r2,r3
000438  4bef              LDR      r3,|L19.2040|
00043a  60da              STR      r2,[r3,#0xc]
;;;936    		GCR->PD_H_MFP |= (enable == true) ? PD13_MFP_LCD_S14:0;
00043c  461a              MOV      r2,r3
00043e  68d2              LDR      r2,[r2,#0xc]
000440  2901              CMP      r1,#1
000442  d101              BNE      |L19.1096|
000444  04c3              LSLS     r3,r0,#19
000446  e000              B        |L19.1098|
                  |L19.1096|
000448  2300              MOVS     r3,#0
                  |L19.1098|
00044a  431a              ORRS     r2,r2,r3
00044c  4bea              LDR      r3,|L19.2040|
00044e  60da              STR      r2,[r3,#0xc]
;;;937    		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_13) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_13);
000450  2901              CMP      r1,#1
000452  d105              BNE      |L19.1120|
000454  4ae7              LDR      r2,|L19.2036|
000456  3280              ADDS     r2,r2,#0x80
000458  6852              LDR      r2,[r2,#4]
00045a  074b              LSLS     r3,r1,#29
00045c  431a              ORRS     r2,r2,r3
00045e  e005              B        |L19.1132|
                  |L19.1120|
000460  4ae4              LDR      r2,|L19.2036|
000462  3280              ADDS     r2,r2,#0x80
000464  6852              LDR      r2,[r2,#4]
000466  2301              MOVS     r3,#1
000468  075b              LSLS     r3,r3,#29
00046a  439a              BICS     r2,r2,r3
                  |L19.1132|
00046c  4be1              LDR      r3,|L19.2036|
00046e  3380              ADDS     r3,r3,#0x80
000470  605a              STR      r2,[r3,#4]
                  |L19.1138|
000472  e3bb              B        |L19.3052|
                  |L19.1140|
;;;938    	} else if (pinno == 15) {
000474  280f              CMP      r0,#0xf
000476  d123              BNE      |L19.1216|
;;;939    		// Seg 15
;;;940    		GCR->PD_H_MFP &= ~PD12_MFP_MASK;
000478  4adf              LDR      r2,|L19.2040|
00047a  68d2              LDR      r2,[r2,#0xc]
00047c  2307              MOVS     r3,#7
00047e  041b              LSLS     r3,r3,#16
000480  439a              BICS     r2,r2,r3
000482  4bdd              LDR      r3,|L19.2040|
000484  60da              STR      r2,[r3,#0xc]
;;;941    		GCR->PD_H_MFP |= (enable == true) ? PD12_MFP_LCD_S15:0;
000486  461a              MOV      r2,r3
000488  68d2              LDR      r2,[r2,#0xc]
00048a  2901              CMP      r1,#1
00048c  d102              BNE      |L19.1172|
00048e  2307              MOVS     r3,#7
000490  041b              LSLS     r3,r3,#16
000492  e000              B        |L19.1174|
                  |L19.1172|
000494  2300              MOVS     r3,#0
                  |L19.1174|
000496  431a              ORRS     r2,r2,r3
000498  4bd7              LDR      r3,|L19.2040|
00049a  60da              STR      r2,[r3,#0xc]
;;;942    		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_12) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_12);
00049c  2901              CMP      r1,#1
00049e  d105              BNE      |L19.1196|
0004a0  4ad4              LDR      r2,|L19.2036|
0004a2  3280              ADDS     r2,r2,#0x80
0004a4  6852              LDR      r2,[r2,#4]
0004a6  070b              LSLS     r3,r1,#28
0004a8  431a              ORRS     r2,r2,r3
0004aa  e005              B        |L19.1208|
                  |L19.1196|
0004ac  4ad1              LDR      r2,|L19.2036|
0004ae  3280              ADDS     r2,r2,#0x80
0004b0  6852              LDR      r2,[r2,#4]
0004b2  2301              MOVS     r3,#1
0004b4  071b              LSLS     r3,r3,#28
0004b6  439a              BICS     r2,r2,r3
                  |L19.1208|
0004b8  4bce              LDR      r3,|L19.2036|
0004ba  3380              ADDS     r3,r3,#0x80
0004bc  605a              STR      r2,[r3,#4]
0004be  e395              B        |L19.3052|
                  |L19.1216|
;;;943    	} else if (pinno == 16) {
0004c0  2810              CMP      r0,#0x10
0004c2  d123              BNE      |L19.1292|
;;;944    		// Seg 16
;;;945    		GCR->PD_H_MFP &= ~PD11_MFP_MASK;
0004c4  4acc              LDR      r2,|L19.2040|
0004c6  68d2              LDR      r2,[r2,#0xc]
0004c8  2307              MOVS     r3,#7
0004ca  031b              LSLS     r3,r3,#12
0004cc  439a              BICS     r2,r2,r3
0004ce  4bca              LDR      r3,|L19.2040|
0004d0  60da              STR      r2,[r3,#0xc]
;;;946    		GCR->PD_H_MFP |= (enable == true) ? PD11_MFP_LCD_S16:0;
0004d2  461a              MOV      r2,r3
0004d4  68d2              LDR      r2,[r2,#0xc]
0004d6  2901              CMP      r1,#1
0004d8  d102              BNE      |L19.1248|
0004da  2307              MOVS     r3,#7
0004dc  031b              LSLS     r3,r3,#12
0004de  e000              B        |L19.1250|
                  |L19.1248|
0004e0  2300              MOVS     r3,#0
                  |L19.1250|
0004e2  431a              ORRS     r2,r2,r3
0004e4  4bc4              LDR      r3,|L19.2040|
0004e6  60da              STR      r2,[r3,#0xc]
;;;947    		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_11) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_11);
0004e8  2901              CMP      r1,#1
0004ea  d105              BNE      |L19.1272|
0004ec  4ac1              LDR      r2,|L19.2036|
0004ee  3280              ADDS     r2,r2,#0x80
0004f0  6852              LDR      r2,[r2,#4]
0004f2  06cb              LSLS     r3,r1,#27
0004f4  431a              ORRS     r2,r2,r3
0004f6  e005              B        |L19.1284|
                  |L19.1272|
0004f8  4abe              LDR      r2,|L19.2036|
0004fa  3280              ADDS     r2,r2,#0x80
0004fc  6852              LDR      r2,[r2,#4]
0004fe  2301              MOVS     r3,#1
000500  06db              LSLS     r3,r3,#27
000502  439a              BICS     r2,r2,r3
                  |L19.1284|
000504  4bbb              LDR      r3,|L19.2036|
000506  3380              ADDS     r3,r3,#0x80
000508  605a              STR      r2,[r3,#4]
00050a  e36f              B        |L19.3052|
                  |L19.1292|
;;;948    	} else if (pinno == 17) {
00050c  2811              CMP      r0,#0x11
00050e  d123              BNE      |L19.1368|
;;;949    		// Seg 17
;;;950    		GCR->PD_H_MFP &= ~PD10_MFP_MASK;
000510  4ab9              LDR      r2,|L19.2040|
000512  68d2              LDR      r2,[r2,#0xc]
000514  2307              MOVS     r3,#7
000516  021b              LSLS     r3,r3,#8
000518  439a              BICS     r2,r2,r3
00051a  4bb7              LDR      r3,|L19.2040|
00051c  60da              STR      r2,[r3,#0xc]
;;;951    		GCR->PD_H_MFP |= (enable == true) ? PD10_MFP_LCD_S17:0;
00051e  461a              MOV      r2,r3
000520  68d2              LDR      r2,[r2,#0xc]
000522  2901              CMP      r1,#1
000524  d102              BNE      |L19.1324|
000526  2307              MOVS     r3,#7
000528  021b              LSLS     r3,r3,#8
00052a  e000              B        |L19.1326|
                  |L19.1324|
00052c  2300              MOVS     r3,#0
                  |L19.1326|
00052e  431a              ORRS     r2,r2,r3
000530  4bb1              LDR      r3,|L19.2040|
000532  60da              STR      r2,[r3,#0xc]
;;;952    		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_10) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_10);
000534  2901              CMP      r1,#1
000536  d105              BNE      |L19.1348|
000538  4aae              LDR      r2,|L19.2036|
00053a  3280              ADDS     r2,r2,#0x80
00053c  6852              LDR      r2,[r2,#4]
00053e  068b              LSLS     r3,r1,#26
000540  431a              ORRS     r2,r2,r3
000542  e005              B        |L19.1360|
                  |L19.1348|
000544  4aab              LDR      r2,|L19.2036|
000546  3280              ADDS     r2,r2,#0x80
000548  6852              LDR      r2,[r2,#4]
00054a  2301              MOVS     r3,#1
00054c  069b              LSLS     r3,r3,#26
00054e  439a              BICS     r2,r2,r3
                  |L19.1360|
000550  4ba8              LDR      r3,|L19.2036|
000552  3380              ADDS     r3,r3,#0x80
000554  605a              STR      r2,[r3,#4]
000556  e349              B        |L19.3052|
                  |L19.1368|
;;;953    	} else if (pinno == 18) {
000558  2812              CMP      r0,#0x12
00055a  d121              BNE      |L19.1440|
;;;954    		// Seg 18
;;;955    		GCR->PD_H_MFP &= ~PD9_MFP_MASK;
00055c  4aa6              LDR      r2,|L19.2040|
00055e  68d2              LDR      r2,[r2,#0xc]
000560  2370              MOVS     r3,#0x70
000562  439a              BICS     r2,r2,r3
000564  4ba4              LDR      r3,|L19.2040|
000566  60da              STR      r2,[r3,#0xc]
;;;956    		GCR->PD_H_MFP |= (enable == true) ? PD9_MFP_LCD_S18:0;
000568  461a              MOV      r2,r3
00056a  68d2              LDR      r2,[r2,#0xc]
00056c  2901              CMP      r1,#1
00056e  d101              BNE      |L19.1396|
000570  2370              MOVS     r3,#0x70
000572  e000              B        |L19.1398|
                  |L19.1396|
000574  2300              MOVS     r3,#0
                  |L19.1398|
000576  431a              ORRS     r2,r2,r3
000578  4b9f              LDR      r3,|L19.2040|
00057a  60da              STR      r2,[r3,#0xc]
;;;957    		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_9) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_9);
00057c  2901              CMP      r1,#1
00057e  d105              BNE      |L19.1420|
000580  4a9c              LDR      r2,|L19.2036|
000582  3280              ADDS     r2,r2,#0x80
000584  6852              LDR      r2,[r2,#4]
000586  064b              LSLS     r3,r1,#25
000588  431a              ORRS     r2,r2,r3
00058a  e005              B        |L19.1432|
                  |L19.1420|
00058c  4a99              LDR      r2,|L19.2036|
00058e  3280              ADDS     r2,r2,#0x80
000590  6852              LDR      r2,[r2,#4]
000592  2301              MOVS     r3,#1
000594  065b              LSLS     r3,r3,#25
000596  439a              BICS     r2,r2,r3
                  |L19.1432|
000598  4b96              LDR      r3,|L19.2036|
00059a  3380              ADDS     r3,r3,#0x80
00059c  605a              STR      r2,[r3,#4]
00059e  e325              B        |L19.3052|
                  |L19.1440|
;;;958    	} else if (pinno == 19) {
0005a0  2813              CMP      r0,#0x13
0005a2  d121              BNE      |L19.1512|
;;;959    		// Seg 19
;;;960    		GCR->PD_H_MFP &= ~PD8_MFP_MASK;
0005a4  4a94              LDR      r2,|L19.2040|
0005a6  68d2              LDR      r2,[r2,#0xc]
0005a8  08d2              LSRS     r2,r2,#3
0005aa  00d2              LSLS     r2,r2,#3
0005ac  4b92              LDR      r3,|L19.2040|
0005ae  60da              STR      r2,[r3,#0xc]
;;;961    		GCR->PD_H_MFP |= (enable == true) ? PD8_MFP_LCD_S19:0;
0005b0  461a              MOV      r2,r3
0005b2  68d2              LDR      r2,[r2,#0xc]
0005b4  2901              CMP      r1,#1
0005b6  d101              BNE      |L19.1468|
0005b8  2307              MOVS     r3,#7
0005ba  e000              B        |L19.1470|
                  |L19.1468|
0005bc  2300              MOVS     r3,#0
                  |L19.1470|
0005be  431a              ORRS     r2,r2,r3
0005c0  4b8d              LDR      r3,|L19.2040|
0005c2  60da              STR      r2,[r3,#0xc]
;;;962    		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_8) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_8);
0005c4  2901              CMP      r1,#1
0005c6  d105              BNE      |L19.1492|
0005c8  4a8a              LDR      r2,|L19.2036|
0005ca  3280              ADDS     r2,r2,#0x80
0005cc  6852              LDR      r2,[r2,#4]
0005ce  060b              LSLS     r3,r1,#24
0005d0  431a              ORRS     r2,r2,r3
0005d2  e005              B        |L19.1504|
                  |L19.1492|
0005d4  4a87              LDR      r2,|L19.2036|
0005d6  3280              ADDS     r2,r2,#0x80
0005d8  6852              LDR      r2,[r2,#4]
0005da  2301              MOVS     r3,#1
0005dc  061b              LSLS     r3,r3,#24
0005de  439a              BICS     r2,r2,r3
                  |L19.1504|
0005e0  4b84              LDR      r3,|L19.2036|
0005e2  3380              ADDS     r3,r3,#0x80
0005e4  605a              STR      r2,[r3,#4]
0005e6  e301              B        |L19.3052|
                  |L19.1512|
;;;963    	} else if (pinno == 20) {
0005e8  2814              CMP      r0,#0x14
0005ea  d122              BNE      |L19.1586|
;;;964    		// Seg 20
;;;965    		GCR->PA_H_MFP &= ~PA8_MFP_MASK;
0005ec  0682              LSLS     r2,r0,#26
0005ee  6b52              LDR      r2,[r2,#0x34]
0005f0  08d2              LSRS     r2,r2,#3
0005f2  00d2              LSLS     r2,r2,#3
0005f4  0683              LSLS     r3,r0,#26
0005f6  635a              STR      r2,[r3,#0x34]
;;;966    		GCR->PA_H_MFP |= (enable == true) ? PA8_MFP_LCD_S20:0;
0005f8  0682              LSLS     r2,r0,#26
0005fa  6b52              LDR      r2,[r2,#0x34]
0005fc  2901              CMP      r1,#1
0005fe  d101              BNE      |L19.1540|
000600  2307              MOVS     r3,#7
000602  e000              B        |L19.1542|
                  |L19.1540|
000604  2300              MOVS     r3,#0
                  |L19.1542|
000606  431a              ORRS     r2,r2,r3
000608  2305              MOVS     r3,#5
00060a  071b              LSLS     r3,r3,#28
00060c  635a              STR      r2,[r3,#0x34]
;;;967    		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_8) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_8);
00060e  2901              CMP      r1,#1
000610  d105              BNE      |L19.1566|
000612  4a78              LDR      r2,|L19.2036|
000614  3a40              SUBS     r2,r2,#0x40
000616  6852              LDR      r2,[r2,#4]
000618  060b              LSLS     r3,r1,#24
00061a  431a              ORRS     r2,r2,r3
00061c  e005              B        |L19.1578|
                  |L19.1566|
00061e  4a75              LDR      r2,|L19.2036|
000620  3a40              SUBS     r2,r2,#0x40
000622  6852              LDR      r2,[r2,#4]
000624  2301              MOVS     r3,#1
000626  061b              LSLS     r3,r3,#24
000628  439a              BICS     r2,r2,r3
                  |L19.1578|
00062a  4b72              LDR      r3,|L19.2036|
00062c  3b40              SUBS     r3,r3,#0x40
00062e  605a              STR      r2,[r3,#4]
000630  e2dc              B        |L19.3052|
                  |L19.1586|
;;;968    	} else if (pinno == 21) {
000632  2815              CMP      r0,#0x15
000634  d122              BNE      |L19.1660|
;;;969    		// Seg 21
;;;970    		GCR->PA_H_MFP &= ~PA9_MFP_MASK;
000636  0702              LSLS     r2,r0,#28
000638  6b52              LDR      r2,[r2,#0x34]
00063a  2370              MOVS     r3,#0x70
00063c  439a              BICS     r2,r2,r3
00063e  0703              LSLS     r3,r0,#28
000640  635a              STR      r2,[r3,#0x34]
;;;971    		GCR->PA_H_MFP |= (enable == true) ? PA9_MFP_LCD_S21:0;
000642  0702              LSLS     r2,r0,#28
000644  6b52              LDR      r2,[r2,#0x34]
000646  2901              CMP      r1,#1
000648  d101              BNE      |L19.1614|
00064a  2370              MOVS     r3,#0x70
00064c  e000              B        |L19.1616|
                  |L19.1614|
00064e  2300              MOVS     r3,#0
                  |L19.1616|
000650  431a              ORRS     r2,r2,r3
000652  2305              MOVS     r3,#5
000654  071b              LSLS     r3,r3,#28
000656  635a              STR      r2,[r3,#0x34]
;;;972    		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_9) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_9);
000658  2901              CMP      r1,#1
00065a  d105              BNE      |L19.1640|
00065c  4a65              LDR      r2,|L19.2036|
00065e  3a40              SUBS     r2,r2,#0x40
000660  6852              LDR      r2,[r2,#4]
000662  064b              LSLS     r3,r1,#25
000664  431a              ORRS     r2,r2,r3
000666  e005              B        |L19.1652|
                  |L19.1640|
000668  4a62              LDR      r2,|L19.2036|
00066a  3a40              SUBS     r2,r2,#0x40
00066c  6852              LDR      r2,[r2,#4]
00066e  2301              MOVS     r3,#1
000670  065b              LSLS     r3,r3,#25
000672  439a              BICS     r2,r2,r3
                  |L19.1652|
000674  4b5f              LDR      r3,|L19.2036|
000676  3b40              SUBS     r3,r3,#0x40
000678  605a              STR      r2,[r3,#4]
00067a  e2b7              B        |L19.3052|
                  |L19.1660|
;;;973    	} else if (pinno == 22) {
00067c  2816              CMP      r0,#0x16
00067e  d126              BNE      |L19.1742|
;;;974    		// Seg 22
;;;975    		GCR->PA_H_MFP &= ~PA10_MFP_MASK;
000680  2205              MOVS     r2,#5
000682  0712              LSLS     r2,r2,#28
000684  6b52              LDR      r2,[r2,#0x34]
000686  2307              MOVS     r3,#7
000688  021b              LSLS     r3,r3,#8
00068a  439a              BICS     r2,r2,r3
00068c  2305              MOVS     r3,#5
00068e  071b              LSLS     r3,r3,#28
000690  635a              STR      r2,[r3,#0x34]
;;;976    		GCR->PA_H_MFP |= (enable == true) ? PA10_MFP_LCD_S22:0;
000692  461a              MOV      r2,r3
000694  6b52              LDR      r2,[r2,#0x34]
000696  2901              CMP      r1,#1
000698  d102              BNE      |L19.1696|
00069a  2307              MOVS     r3,#7
00069c  021b              LSLS     r3,r3,#8
00069e  e000              B        |L19.1698|
                  |L19.1696|
0006a0  2300              MOVS     r3,#0
                  |L19.1698|
0006a2  431a              ORRS     r2,r2,r3
0006a4  2305              MOVS     r3,#5
0006a6  071b              LSLS     r3,r3,#28
0006a8  635a              STR      r2,[r3,#0x34]
;;;977    		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_10) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_10);
0006aa  2901              CMP      r1,#1
0006ac  d105              BNE      |L19.1722|
0006ae  4a51              LDR      r2,|L19.2036|
0006b0  3a40              SUBS     r2,r2,#0x40
0006b2  6852              LDR      r2,[r2,#4]
0006b4  068b              LSLS     r3,r1,#26
0006b6  431a              ORRS     r2,r2,r3
0006b8  e005              B        |L19.1734|
                  |L19.1722|
0006ba  4a4e              LDR      r2,|L19.2036|
0006bc  3a40              SUBS     r2,r2,#0x40
0006be  6852              LDR      r2,[r2,#4]
0006c0  2301              MOVS     r3,#1
0006c2  069b              LSLS     r3,r3,#26
0006c4  439a              BICS     r2,r2,r3
                  |L19.1734|
0006c6  4b4b              LDR      r3,|L19.2036|
0006c8  3b40              SUBS     r3,r3,#0x40
0006ca  605a              STR      r2,[r3,#4]
0006cc  e28e              B        |L19.3052|
                  |L19.1742|
;;;978    	} else if (pinno == 23) {
0006ce  2817              CMP      r0,#0x17
0006d0  d126              BNE      |L19.1824|
;;;979    		// Seg 23
;;;980    		GCR->PA_H_MFP &= ~PA11_MFP_MASK;
0006d2  2205              MOVS     r2,#5
0006d4  0712              LSLS     r2,r2,#28
0006d6  6b52              LDR      r2,[r2,#0x34]
0006d8  2307              MOVS     r3,#7
0006da  031b              LSLS     r3,r3,#12
0006dc  439a              BICS     r2,r2,r3
0006de  2305              MOVS     r3,#5
0006e0  071b              LSLS     r3,r3,#28
0006e2  635a              STR      r2,[r3,#0x34]
;;;981    		GCR->PA_H_MFP |= (enable == true) ? PA11_MFP_LCD_S23:0;
0006e4  461a              MOV      r2,r3
0006e6  6b52              LDR      r2,[r2,#0x34]
0006e8  2901              CMP      r1,#1
0006ea  d102              BNE      |L19.1778|
0006ec  2307              MOVS     r3,#7
0006ee  031b              LSLS     r3,r3,#12
0006f0  e000              B        |L19.1780|
                  |L19.1778|
0006f2  2300              MOVS     r3,#0
                  |L19.1780|
0006f4  431a              ORRS     r2,r2,r3
0006f6  2305              MOVS     r3,#5
0006f8  071b              LSLS     r3,r3,#28
0006fa  635a              STR      r2,[r3,#0x34]
;;;982    		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_11) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_11);
0006fc  2901              CMP      r1,#1
0006fe  d105              BNE      |L19.1804|
000700  4a3c              LDR      r2,|L19.2036|
000702  3a40              SUBS     r2,r2,#0x40
000704  6852              LDR      r2,[r2,#4]
000706  06cb              LSLS     r3,r1,#27
000708  431a              ORRS     r2,r2,r3
00070a  e005              B        |L19.1816|
                  |L19.1804|
00070c  4a39              LDR      r2,|L19.2036|
00070e  3a40              SUBS     r2,r2,#0x40
000710  6852              LDR      r2,[r2,#4]
000712  2301              MOVS     r3,#1
000714  06db              LSLS     r3,r3,#27
000716  439a              BICS     r2,r2,r3
                  |L19.1816|
000718  4b36              LDR      r3,|L19.2036|
00071a  3b40              SUBS     r3,r3,#0x40
00071c  605a              STR      r2,[r3,#4]
00071e  e265              B        |L19.3052|
                  |L19.1824|
;;;983    	} else if (pinno == 24) {
000720  2818              CMP      r0,#0x18
000722  d123              BNE      |L19.1900|
;;;984    		// Seg 24
;;;985    		GCR->PB_H_MFP &= ~PB12_MFP_MASK;
000724  2205              MOVS     r2,#5
000726  0712              LSLS     r2,r2,#28
000728  6bd2              LDR      r2,[r2,#0x3c]
00072a  2307              MOVS     r3,#7
00072c  041b              LSLS     r3,r3,#16
00072e  439a              BICS     r2,r2,r3
000730  2305              MOVS     r3,#5
000732  071b              LSLS     r3,r3,#28
000734  63da              STR      r2,[r3,#0x3c]
;;;986    		GCR->PB_H_MFP |= (enable == true) ? PB12_MFP_LCD_S24:0;
000736  461a              MOV      r2,r3
000738  6bd2              LDR      r2,[r2,#0x3c]
00073a  2901              CMP      r1,#1
00073c  d102              BNE      |L19.1860|
00073e  2307              MOVS     r3,#7
000740  041b              LSLS     r3,r3,#16
000742  e000              B        |L19.1862|
                  |L19.1860|
000744  2300              MOVS     r3,#0
                  |L19.1862|
000746  431a              ORRS     r2,r2,r3
000748  2305              MOVS     r3,#5
00074a  071b              LSLS     r3,r3,#28
00074c  63da              STR      r2,[r3,#0x3c]
;;;987    		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_12) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_12);
00074e  2901              CMP      r1,#1
000750  d104              BNE      |L19.1884|
000752  4a28              LDR      r2,|L19.2036|
000754  6852              LDR      r2,[r2,#4]
000756  070b              LSLS     r3,r1,#28
000758  431a              ORRS     r2,r2,r3
00075a  e004              B        |L19.1894|
                  |L19.1884|
00075c  4a25              LDR      r2,|L19.2036|
00075e  6852              LDR      r2,[r2,#4]
000760  2301              MOVS     r3,#1
000762  071b              LSLS     r3,r3,#28
000764  439a              BICS     r2,r2,r3
                  |L19.1894|
000766  4b23              LDR      r3,|L19.2036|
000768  605a              STR      r2,[r3,#4]
00076a  e23f              B        |L19.3052|
                  |L19.1900|
;;;988    	} else if (pinno == 25) {
00076c  2819              CMP      r0,#0x19
00076e  d123              BNE      |L19.1976|
;;;989    		// Seg 25
;;;990    		GCR->PB_H_MFP &= ~PB13_MFP_MASK;
000770  2205              MOVS     r2,#5
000772  0712              LSLS     r2,r2,#28
000774  6bd2              LDR      r2,[r2,#0x3c]
000776  2307              MOVS     r3,#7
000778  051b              LSLS     r3,r3,#20
00077a  439a              BICS     r2,r2,r3
00077c  2305              MOVS     r3,#5
00077e  071b              LSLS     r3,r3,#28
000780  63da              STR      r2,[r3,#0x3c]
;;;991    		GCR->PB_H_MFP |= (enable == true) ? PB13_MFP_LCD_S25:0;
000782  461a              MOV      r2,r3
000784  6bd2              LDR      r2,[r2,#0x3c]
000786  2901              CMP      r1,#1
000788  d102              BNE      |L19.1936|
00078a  2307              MOVS     r3,#7
00078c  051b              LSLS     r3,r3,#20
00078e  e000              B        |L19.1938|
                  |L19.1936|
000790  2300              MOVS     r3,#0
                  |L19.1938|
000792  431a              ORRS     r2,r2,r3
000794  2305              MOVS     r3,#5
000796  071b              LSLS     r3,r3,#28
000798  63da              STR      r2,[r3,#0x3c]
;;;992    		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_13) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_13);
00079a  2901              CMP      r1,#1
00079c  d104              BNE      |L19.1960|
00079e  4a15              LDR      r2,|L19.2036|
0007a0  6852              LDR      r2,[r2,#4]
0007a2  074b              LSLS     r3,r1,#29
0007a4  431a              ORRS     r2,r2,r3
0007a6  e004              B        |L19.1970|
                  |L19.1960|
0007a8  4a12              LDR      r2,|L19.2036|
0007aa  6852              LDR      r2,[r2,#4]
0007ac  2301              MOVS     r3,#1
0007ae  075b              LSLS     r3,r3,#29
0007b0  439a              BICS     r2,r2,r3
                  |L19.1970|
0007b2  4b10              LDR      r3,|L19.2036|
0007b4  605a              STR      r2,[r3,#4]
0007b6  e219              B        |L19.3052|
                  |L19.1976|
;;;993    	} else if (pinno == 26) {
0007b8  281a              CMP      r0,#0x1a
0007ba  d127              BNE      |L19.2060|
;;;994    		// Seg 26
;;;995    		GCR->PB_H_MFP &= ~PB14_MFP_MASK;
0007bc  2205              MOVS     r2,#5
0007be  0712              LSLS     r2,r2,#28
0007c0  6bd2              LDR      r2,[r2,#0x3c]
0007c2  2307              MOVS     r3,#7
0007c4  061b              LSLS     r3,r3,#24
0007c6  439a              BICS     r2,r2,r3
0007c8  2305              MOVS     r3,#5
0007ca  071b              LSLS     r3,r3,#28
0007cc  63da              STR      r2,[r3,#0x3c]
;;;996    		GCR->PB_H_MFP |= (enable == true) ? PB14_MFP_LCD_S26:0;
0007ce  461a              MOV      r2,r3
0007d0  6bd2              LDR      r2,[r2,#0x3c]
0007d2  2901              CMP      r1,#1
0007d4  d102              BNE      |L19.2012|
0007d6  2307              MOVS     r3,#7
0007d8  061b              LSLS     r3,r3,#24
0007da  e000              B        |L19.2014|
                  |L19.2012|
0007dc  2300              MOVS     r3,#0
                  |L19.2014|
0007de  431a              ORRS     r2,r2,r3
0007e0  2305              MOVS     r3,#5
0007e2  071b              LSLS     r3,r3,#28
0007e4  63da              STR      r2,[r3,#0x3c]
;;;997    		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_14) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_14);
0007e6  2901              CMP      r1,#1
0007e8  d108              BNE      |L19.2044|
0007ea  4a02              LDR      r2,|L19.2036|
0007ec  6852              LDR      r2,[r2,#4]
0007ee  078b              LSLS     r3,r1,#30
0007f0  431a              ORRS     r2,r2,r3
0007f2  e008              B        |L19.2054|
                  |L19.2036|
                          DCD      0x50004040
                  |L19.2040|
                          DCD      0x50000040
                  |L19.2044|
0007fc  4afc              LDR      r2,|L19.3056|
0007fe  6852              LDR      r2,[r2,#4]
000800  2301              MOVS     r3,#1
000802  079b              LSLS     r3,r3,#30
000804  439a              BICS     r2,r2,r3
                  |L19.2054|
000806  4bfa              LDR      r3,|L19.3056|
000808  605a              STR      r2,[r3,#4]
00080a  e1ef              B        |L19.3052|
                  |L19.2060|
;;;998    	} else if (pinno == 27) {
00080c  281b              CMP      r0,#0x1b
00080e  d123              BNE      |L19.2136|
;;;999    		// Seg 27
;;;1000   		GCR->PE_H_MFP &= ~PE13_MFP_MASK;
000810  4af8              LDR      r2,|L19.3060|
000812  6952              LDR      r2,[r2,#0x14]
000814  2307              MOVS     r3,#7
000816  051b              LSLS     r3,r3,#20
000818  439a              BICS     r2,r2,r3
00081a  4bf6              LDR      r3,|L19.3060|
00081c  615a              STR      r2,[r3,#0x14]
;;;1001   		GCR->PE_H_MFP |= (enable == true) ? PE13_MFP_LCD_S27:0;
00081e  461a              MOV      r2,r3
000820  6952              LDR      r2,[r2,#0x14]
000822  2901              CMP      r1,#1
000824  d102              BNE      |L19.2092|
000826  2307              MOVS     r3,#7
000828  051b              LSLS     r3,r3,#20
00082a  e000              B        |L19.2094|
                  |L19.2092|
00082c  2300              MOVS     r3,#0
                  |L19.2094|
00082e  431a              ORRS     r2,r2,r3
000830  4bf0              LDR      r3,|L19.3060|
000832  615a              STR      r2,[r3,#0x14]
;;;1002   		GPIOE->OFFD = (enable == true)? (GPIOE->OFFD | GPIO_OFFD_OFFD_13) : (GPIOE->OFFD &~GPIO_OFFD_OFFD_13);
000834  2901              CMP      r1,#1
000836  d105              BNE      |L19.2116|
000838  4aed              LDR      r2,|L19.3056|
00083a  32c0              ADDS     r2,r2,#0xc0
00083c  6852              LDR      r2,[r2,#4]
00083e  074b              LSLS     r3,r1,#29
000840  431a              ORRS     r2,r2,r3
000842  e005              B        |L19.2128|
                  |L19.2116|
000844  4aea              LDR      r2,|L19.3056|
000846  32c0              ADDS     r2,r2,#0xc0
000848  6852              LDR      r2,[r2,#4]
00084a  2301              MOVS     r3,#1
00084c  075b              LSLS     r3,r3,#29
00084e  439a              BICS     r2,r2,r3
                  |L19.2128|
000850  4be7              LDR      r3,|L19.3056|
000852  33c0              ADDS     r3,r3,#0xc0
000854  605a              STR      r2,[r3,#4]
000856  e1c9              B        |L19.3052|
                  |L19.2136|
;;;1003   	} else if (pinno == 28) {
000858  281c              CMP      r0,#0x1c
00085a  d121              BNE      |L19.2208|
;;;1004   		// Seg 28
;;;1005   		GCR->PE_H_MFP &= ~PE14_MFP_MASK;
00085c  4ae5              LDR      r2,|L19.3060|
00085e  6952              LDR      r2,[r2,#0x14]
000860  0583              LSLS     r3,r0,#22
000862  439a              BICS     r2,r2,r3
000864  4be3              LDR      r3,|L19.3060|
000866  615a              STR      r2,[r3,#0x14]
;;;1006   		GCR->PE_H_MFP |= (enable == true) ? PE14_MFP_LCD_S28:0;
000868  461a              MOV      r2,r3
00086a  6952              LDR      r2,[r2,#0x14]
00086c  2901              CMP      r1,#1
00086e  d101              BNE      |L19.2164|
000870  0583              LSLS     r3,r0,#22
000872  e000              B        |L19.2166|
                  |L19.2164|
000874  2300              MOVS     r3,#0
                  |L19.2166|
000876  431a              ORRS     r2,r2,r3
000878  4bde              LDR      r3,|L19.3060|
00087a  615a              STR      r2,[r3,#0x14]
;;;1007   		GPIOE->OFFD = (enable == true)? (GPIOE->OFFD | GPIO_OFFD_OFFD_14) : (GPIOE->OFFD &~GPIO_OFFD_OFFD_14);
00087c  2901              CMP      r1,#1
00087e  d105              BNE      |L19.2188|
000880  4adb              LDR      r2,|L19.3056|
000882  32c0              ADDS     r2,r2,#0xc0
000884  6852              LDR      r2,[r2,#4]
000886  078b              LSLS     r3,r1,#30
000888  431a              ORRS     r2,r2,r3
00088a  e005              B        |L19.2200|
                  |L19.2188|
00088c  4ad8              LDR      r2,|L19.3056|
00088e  32c0              ADDS     r2,r2,#0xc0
000890  6852              LDR      r2,[r2,#4]
000892  2301              MOVS     r3,#1
000894  079b              LSLS     r3,r3,#30
000896  439a              BICS     r2,r2,r3
                  |L19.2200|
000898  4bd5              LDR      r3,|L19.3056|
00089a  33c0              ADDS     r3,r3,#0xc0
00089c  605a              STR      r2,[r3,#4]
00089e  e1a5              B        |L19.3052|
                  |L19.2208|
;;;1008   	} else if (pinno == 29) {
0008a0  281d              CMP      r0,#0x1d
0008a2  d122              BNE      |L19.2282|
;;;1009   		// Seg 29
;;;1010   		GCR->PE_H_MFP &= ~PE15_MFP_MASK;
0008a4  4ad3              LDR      r2,|L19.3060|
0008a6  6952              LDR      r2,[r2,#0x14]
0008a8  2307              MOVS     r3,#7
0008aa  071b              LSLS     r3,r3,#28
0008ac  439a              BICS     r2,r2,r3
0008ae  4bd1              LDR      r3,|L19.3060|
0008b0  615a              STR      r2,[r3,#0x14]
;;;1011   		GCR->PE_H_MFP |= (enable == true) ? PE15_MFP_LCD_S29:0;
0008b2  461a              MOV      r2,r3
0008b4  6952              LDR      r2,[r2,#0x14]
0008b6  2901              CMP      r1,#1
0008b8  d102              BNE      |L19.2240|
0008ba  2307              MOVS     r3,#7
0008bc  071b              LSLS     r3,r3,#28
0008be  e000              B        |L19.2242|
                  |L19.2240|
0008c0  2300              MOVS     r3,#0
                  |L19.2242|
0008c2  431a              ORRS     r2,r2,r3
0008c4  4bcb              LDR      r3,|L19.3060|
0008c6  615a              STR      r2,[r3,#0x14]
;;;1012   		GPIOE->OFFD = (enable == true)? (GPIOE->OFFD | GPIO_OFFD_OFFD_15) : (GPIOE->OFFD &~GPIO_OFFD_OFFD_15);
0008c8  2901              CMP      r1,#1
0008ca  d105              BNE      |L19.2264|
0008cc  4ac8              LDR      r2,|L19.3056|
0008ce  32c0              ADDS     r2,r2,#0xc0
0008d0  6852              LDR      r2,[r2,#4]
0008d2  07cb              LSLS     r3,r1,#31
0008d4  431a              ORRS     r2,r2,r3
0008d6  e004              B        |L19.2274|
                  |L19.2264|
0008d8  4ac5              LDR      r2,|L19.3056|
0008da  32c0              ADDS     r2,r2,#0xc0
0008dc  6852              LDR      r2,[r2,#4]
0008de  0052              LSLS     r2,r2,#1
0008e0  0852              LSRS     r2,r2,#1
                  |L19.2274|
0008e2  4bc3              LDR      r3,|L19.3056|
0008e4  33c0              ADDS     r3,r3,#0xc0
0008e6  605a              STR      r2,[r3,#4]
0008e8  e180              B        |L19.3052|
                  |L19.2282|
;;;1013   	} else if (pinno == 30) {
0008ea  281e              CMP      r0,#0x1e
0008ec  d121              BNE      |L19.2354|
;;;1014   		// Seg 30
;;;1015   		GCR->PB_H_MFP &= ~PB8_MFP_MASK;
0008ee  2205              MOVS     r2,#5
0008f0  0712              LSLS     r2,r2,#28
0008f2  6bd2              LDR      r2,[r2,#0x3c]
0008f4  08d2              LSRS     r2,r2,#3
0008f6  00d2              LSLS     r2,r2,#3
0008f8  2305              MOVS     r3,#5
0008fa  071b              LSLS     r3,r3,#28
0008fc  63da              STR      r2,[r3,#0x3c]
;;;1016   		GCR->PB_H_MFP |= (enable == true) ? PB8_MFP_LCD_S30:0;
0008fe  461a              MOV      r2,r3
000900  6bd2              LDR      r2,[r2,#0x3c]
000902  2901              CMP      r1,#1
000904  d101              BNE      |L19.2314|
000906  2307              MOVS     r3,#7
000908  e000              B        |L19.2316|
                  |L19.2314|
00090a  2300              MOVS     r3,#0
                  |L19.2316|
00090c  431a              ORRS     r2,r2,r3
00090e  2305              MOVS     r3,#5
000910  071b              LSLS     r3,r3,#28
000912  63da              STR      r2,[r3,#0x3c]
;;;1017   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_8) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_8);
000914  2901              CMP      r1,#1
000916  d104              BNE      |L19.2338|
000918  4ab5              LDR      r2,|L19.3056|
00091a  6852              LDR      r2,[r2,#4]
00091c  060b              LSLS     r3,r1,#24
00091e  431a              ORRS     r2,r2,r3
000920  e004              B        |L19.2348|
                  |L19.2338|
000922  4ab3              LDR      r2,|L19.3056|
000924  6852              LDR      r2,[r2,#4]
000926  2301              MOVS     r3,#1
000928  061b              LSLS     r3,r3,#24
00092a  439a              BICS     r2,r2,r3
                  |L19.2348|
00092c  4bb0              LDR      r3,|L19.3056|
00092e  605a              STR      r2,[r3,#4]
000930  e15c              B        |L19.3052|
                  |L19.2354|
;;;1018   	} else if (pinno == 31) {
000932  281f              CMP      r0,#0x1f
000934  d122              BNE      |L19.2428|
;;;1019   		// Seg 31
;;;1020   		GCR->PB_H_MFP &= ~PB15_MFP_MASK;
000936  2205              MOVS     r2,#5
000938  0712              LSLS     r2,r2,#28
00093a  6bd2              LDR      r2,[r2,#0x3c]
00093c  2307              MOVS     r3,#7
00093e  071b              LSLS     r3,r3,#28
000940  439a              BICS     r2,r2,r3
000942  2305              MOVS     r3,#5
000944  071b              LSLS     r3,r3,#28
000946  63da              STR      r2,[r3,#0x3c]
;;;1021   		GCR->PB_H_MFP |= (enable == true) ? PB15_MFP_LCD_S31:0;
000948  461a              MOV      r2,r3
00094a  6bd2              LDR      r2,[r2,#0x3c]
00094c  2901              CMP      r1,#1
00094e  d102              BNE      |L19.2390|
000950  2307              MOVS     r3,#7
000952  071b              LSLS     r3,r3,#28
000954  e000              B        |L19.2392|
                  |L19.2390|
000956  2300              MOVS     r3,#0
                  |L19.2392|
000958  431a              ORRS     r2,r2,r3
00095a  2305              MOVS     r3,#5
00095c  071b              LSLS     r3,r3,#28
00095e  63da              STR      r2,[r3,#0x3c]
;;;1022   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_15) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_15);
000960  2901              CMP      r1,#1
000962  d104              BNE      |L19.2414|
000964  4aa2              LDR      r2,|L19.3056|
000966  6852              LDR      r2,[r2,#4]
000968  07cb              LSLS     r3,r1,#31
00096a  431a              ORRS     r2,r2,r3
00096c  e003              B        |L19.2422|
                  |L19.2414|
00096e  4aa0              LDR      r2,|L19.3056|
000970  6852              LDR      r2,[r2,#4]
000972  0052              LSLS     r2,r2,#1
000974  0852              LSRS     r2,r2,#1
                  |L19.2422|
000976  4b9e              LDR      r3,|L19.3056|
000978  605a              STR      r2,[r3,#4]
00097a  e137              B        |L19.3052|
                  |L19.2428|
;;;1023   	} else if (pinno == 32) {
00097c  2820              CMP      r0,#0x20
00097e  d123              BNE      |L19.2504|
;;;1024   		// Seg 32
;;;1025   		GCR->PC_H_MFP &= ~PC14_MFP_MASK;
000980  4a9c              LDR      r2,|L19.3060|
000982  6852              LDR      r2,[r2,#4]
000984  2307              MOVS     r3,#7
000986  061b              LSLS     r3,r3,#24
000988  439a              BICS     r2,r2,r3
00098a  4b9a              LDR      r3,|L19.3060|
00098c  605a              STR      r2,[r3,#4]
;;;1026   		GCR->PC_H_MFP |= (enable == true) ? PC14_MFP_LCD_S32:0;
00098e  461a              MOV      r2,r3
000990  6852              LDR      r2,[r2,#4]
000992  2901              CMP      r1,#1
000994  d102              BNE      |L19.2460|
000996  2307              MOVS     r3,#7
000998  061b              LSLS     r3,r3,#24
00099a  e000              B        |L19.2462|
                  |L19.2460|
00099c  2300              MOVS     r3,#0
                  |L19.2462|
00099e  431a              ORRS     r2,r2,r3
0009a0  4b94              LDR      r3,|L19.3060|
0009a2  605a              STR      r2,[r3,#4]
;;;1027   		GPIOC->OFFD = (enable == true)? (GPIOC->OFFD | GPIO_OFFD_OFFD_14) : (GPIOC->OFFD &~GPIO_OFFD_OFFD_14);
0009a4  2901              CMP      r1,#1
0009a6  d105              BNE      |L19.2484|
0009a8  4a91              LDR      r2,|L19.3056|
0009aa  3240              ADDS     r2,r2,#0x40
0009ac  6852              LDR      r2,[r2,#4]
0009ae  078b              LSLS     r3,r1,#30
0009b0  431a              ORRS     r2,r2,r3
0009b2  e005              B        |L19.2496|
                  |L19.2484|
0009b4  4a8e              LDR      r2,|L19.3056|
0009b6  3240              ADDS     r2,r2,#0x40
0009b8  6852              LDR      r2,[r2,#4]
0009ba  2301              MOVS     r3,#1
0009bc  079b              LSLS     r3,r3,#30
0009be  439a              BICS     r2,r2,r3
                  |L19.2496|
0009c0  4b8b              LDR      r3,|L19.3056|
0009c2  3340              ADDS     r3,r3,#0x40
0009c4  605a              STR      r2,[r3,#4]
0009c6  e111              B        |L19.3052|
                  |L19.2504|
;;;1028   	} else if (pinno == 33) {
0009c8  2821              CMP      r0,#0x21
0009ca  d122              BNE      |L19.2578|
;;;1029   		// Seg 33
;;;1030   		GCR->PC_H_MFP &= ~PC15_MFP_MASK;
0009cc  4a89              LDR      r2,|L19.3060|
0009ce  6852              LDR      r2,[r2,#4]
0009d0  2307              MOVS     r3,#7
0009d2  071b              LSLS     r3,r3,#28
0009d4  439a              BICS     r2,r2,r3
0009d6  4b87              LDR      r3,|L19.3060|
0009d8  605a              STR      r2,[r3,#4]
;;;1031   		GCR->PC_H_MFP |= (enable == true) ? PC15_MFP_LCD_S33:0;
0009da  461a              MOV      r2,r3
0009dc  6852              LDR      r2,[r2,#4]
0009de  2901              CMP      r1,#1
0009e0  d102              BNE      |L19.2536|
0009e2  2307              MOVS     r3,#7
0009e4  071b              LSLS     r3,r3,#28
0009e6  e000              B        |L19.2538|
                  |L19.2536|
0009e8  2300              MOVS     r3,#0
                  |L19.2538|
0009ea  431a              ORRS     r2,r2,r3
0009ec  4b81              LDR      r3,|L19.3060|
0009ee  605a              STR      r2,[r3,#4]
;;;1032   		GPIOC->OFFD = (enable == true)? (GPIOC->OFFD | GPIO_OFFD_OFFD_15) : (GPIOC->OFFD &~GPIO_OFFD_OFFD_15);
0009f0  2901              CMP      r1,#1
0009f2  d105              BNE      |L19.2560|
0009f4  4a7e              LDR      r2,|L19.3056|
0009f6  3240              ADDS     r2,r2,#0x40
0009f8  6852              LDR      r2,[r2,#4]
0009fa  07cb              LSLS     r3,r1,#31
0009fc  431a              ORRS     r2,r2,r3
0009fe  e004              B        |L19.2570|
                  |L19.2560|
000a00  4a7b              LDR      r2,|L19.3056|
000a02  3240              ADDS     r2,r2,#0x40
000a04  6852              LDR      r2,[r2,#4]
000a06  0052              LSLS     r2,r2,#1
000a08  0852              LSRS     r2,r2,#1
                  |L19.2570|
000a0a  4b79              LDR      r3,|L19.3056|
000a0c  3340              ADDS     r3,r3,#0x40
000a0e  605a              STR      r2,[r3,#4]
000a10  e0ec              B        |L19.3052|
                  |L19.2578|
;;;1033   	} else if (pinno == 34) {
000a12  2822              CMP      r0,#0x22
000a14  d123              BNE      |L19.2654|
;;;1034   		// Seg 34
;;;1035   		GCR->PD_L_MFP &= ~PD5_MFP_MASK;
000a16  4a77              LDR      r2,|L19.3060|
000a18  6892              LDR      r2,[r2,#8]
000a1a  2307              MOVS     r3,#7
000a1c  051b              LSLS     r3,r3,#20
000a1e  439a              BICS     r2,r2,r3
000a20  4b74              LDR      r3,|L19.3060|
000a22  609a              STR      r2,[r3,#8]
;;;1036   		GCR->PD_L_MFP |= (enable == true) ? PD5_MFP_LCD_S34:0;
000a24  461a              MOV      r2,r3
000a26  6892              LDR      r2,[r2,#8]
000a28  2901              CMP      r1,#1
000a2a  d102              BNE      |L19.2610|
000a2c  2307              MOVS     r3,#7
000a2e  051b              LSLS     r3,r3,#20
000a30  e000              B        |L19.2612|
                  |L19.2610|
000a32  2300              MOVS     r3,#0
                  |L19.2612|
000a34  431a              ORRS     r2,r2,r3
000a36  4b6f              LDR      r3,|L19.3060|
000a38  609a              STR      r2,[r3,#8]
;;;1037   		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_5) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_5);
000a3a  2901              CMP      r1,#1
000a3c  d105              BNE      |L19.2634|
000a3e  4a6c              LDR      r2,|L19.3056|
000a40  3280              ADDS     r2,r2,#0x80
000a42  6852              LDR      r2,[r2,#4]
000a44  054b              LSLS     r3,r1,#21
000a46  431a              ORRS     r2,r2,r3
000a48  e005              B        |L19.2646|
                  |L19.2634|
000a4a  4a69              LDR      r2,|L19.3056|
000a4c  3280              ADDS     r2,r2,#0x80
000a4e  6852              LDR      r2,[r2,#4]
000a50  2301              MOVS     r3,#1
000a52  055b              LSLS     r3,r3,#21
000a54  439a              BICS     r2,r2,r3
                  |L19.2646|
000a56  4b66              LDR      r3,|L19.3056|
000a58  3380              ADDS     r3,r3,#0x80
000a5a  605a              STR      r2,[r3,#4]
000a5c  e0c6              B        |L19.3052|
                  |L19.2654|
;;;1038   	} else if (pinno == 35) {
000a5e  2823              CMP      r0,#0x23
000a60  d123              BNE      |L19.2730|
;;;1039   		// Seg 35
;;;1040   		GCR->PD_L_MFP &= ~PD4_MFP_MASK;
000a62  4a64              LDR      r2,|L19.3060|
000a64  6892              LDR      r2,[r2,#8]
000a66  2307              MOVS     r3,#7
000a68  041b              LSLS     r3,r3,#16
000a6a  439a              BICS     r2,r2,r3
000a6c  4b61              LDR      r3,|L19.3060|
000a6e  609a              STR      r2,[r3,#8]
;;;1041   		GCR->PD_L_MFP |= (enable == true) ? PD4_MFP_LCD_S35:0;
000a70  461a              MOV      r2,r3
000a72  6892              LDR      r2,[r2,#8]
000a74  2901              CMP      r1,#1
000a76  d102              BNE      |L19.2686|
000a78  2307              MOVS     r3,#7
000a7a  041b              LSLS     r3,r3,#16
000a7c  e000              B        |L19.2688|
                  |L19.2686|
000a7e  2300              MOVS     r3,#0
                  |L19.2688|
000a80  431a              ORRS     r2,r2,r3
000a82  4b5c              LDR      r3,|L19.3060|
000a84  609a              STR      r2,[r3,#8]
;;;1042   		GPIOD->OFFD = (enable == true)? (GPIOD->OFFD | GPIO_OFFD_OFFD_4) : (GPIOD->OFFD &~GPIO_OFFD_OFFD_4);
000a86  2901              CMP      r1,#1
000a88  d105              BNE      |L19.2710|
000a8a  4a59              LDR      r2,|L19.3056|
000a8c  3280              ADDS     r2,r2,#0x80
000a8e  6852              LDR      r2,[r2,#4]
000a90  050b              LSLS     r3,r1,#20
000a92  431a              ORRS     r2,r2,r3
000a94  e005              B        |L19.2722|
                  |L19.2710|
000a96  4a56              LDR      r2,|L19.3056|
000a98  3280              ADDS     r2,r2,#0x80
000a9a  6852              LDR      r2,[r2,#4]
000a9c  2301              MOVS     r3,#1
000a9e  051b              LSLS     r3,r3,#20
000aa0  439a              BICS     r2,r2,r3
                  |L19.2722|
000aa2  4b53              LDR      r3,|L19.3056|
000aa4  3380              ADDS     r3,r3,#0x80
000aa6  605a              STR      r2,[r3,#4]
000aa8  e0a0              B        |L19.3052|
                  |L19.2730|
;;;1043   	} else if (pinno == 36) {
000aaa  2824              CMP      r0,#0x24
000aac  d126              BNE      |L19.2812|
;;;1044   		// Seg 36
;;;1045   		GCR->PA_L_MFP &= ~PA7_MFP_MASK;
000aae  2205              MOVS     r2,#5
000ab0  0712              LSLS     r2,r2,#28
000ab2  6b12              LDR      r2,[r2,#0x30]
000ab4  2307              MOVS     r3,#7
000ab6  071b              LSLS     r3,r3,#28
000ab8  439a              BICS     r2,r2,r3
000aba  2305              MOVS     r3,#5
000abc  071b              LSLS     r3,r3,#28
000abe  631a              STR      r2,[r3,#0x30]
;;;1046   		GCR->PA_L_MFP |= (enable == true) ? PA7_MFP_LCD_S36:0;
000ac0  461a              MOV      r2,r3
000ac2  6b12              LDR      r2,[r2,#0x30]
000ac4  2901              CMP      r1,#1
000ac6  d102              BNE      |L19.2766|
000ac8  2307              MOVS     r3,#7
000aca  071b              LSLS     r3,r3,#28
000acc  e000              B        |L19.2768|
                  |L19.2766|
000ace  2300              MOVS     r3,#0
                  |L19.2768|
000ad0  431a              ORRS     r2,r2,r3
000ad2  2305              MOVS     r3,#5
000ad4  071b              LSLS     r3,r3,#28
000ad6  631a              STR      r2,[r3,#0x30]
;;;1047   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_7) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_7);
000ad8  2901              CMP      r1,#1
000ada  d105              BNE      |L19.2792|
000adc  4a44              LDR      r2,|L19.3056|
000ade  3a40              SUBS     r2,r2,#0x40
000ae0  6852              LDR      r2,[r2,#4]
000ae2  05cb              LSLS     r3,r1,#23
000ae4  431a              ORRS     r2,r2,r3
000ae6  e005              B        |L19.2804|
                  |L19.2792|
000ae8  4a41              LDR      r2,|L19.3056|
000aea  3a40              SUBS     r2,r2,#0x40
000aec  6852              LDR      r2,[r2,#4]
000aee  2301              MOVS     r3,#1
000af0  05db              LSLS     r3,r3,#23
000af2  439a              BICS     r2,r2,r3
                  |L19.2804|
000af4  4b3e              LDR      r3,|L19.3056|
000af6  3b40              SUBS     r3,r3,#0x40
000af8  605a              STR      r2,[r3,#4]
000afa  e077              B        |L19.3052|
                  |L19.2812|
;;;1048   	} else if (pinno == 37) {
000afc  2825              CMP      r0,#0x25
000afe  d124              BNE      |L19.2890|
;;;1049   		// Seg 37
;;;1050   		GCR->PA_L_MFP &= ~PA6_MFP_MASK;
000b00  0702              LSLS     r2,r0,#28
000b02  6b12              LDR      r2,[r2,#0x30]
000b04  2307              MOVS     r3,#7
000b06  061b              LSLS     r3,r3,#24
000b08  439a              BICS     r2,r2,r3
000b0a  0703              LSLS     r3,r0,#28
000b0c  631a              STR      r2,[r3,#0x30]
;;;1051   		GCR->PA_L_MFP |= (enable == true) ? PA6_MFP_LCD_S37:0;
000b0e  0702              LSLS     r2,r0,#28
000b10  6b12              LDR      r2,[r2,#0x30]
000b12  2901              CMP      r1,#1
000b14  d102              BNE      |L19.2844|
000b16  2307              MOVS     r3,#7
000b18  061b              LSLS     r3,r3,#24
000b1a  e000              B        |L19.2846|
                  |L19.2844|
000b1c  2300              MOVS     r3,#0
                  |L19.2846|
000b1e  431a              ORRS     r2,r2,r3
000b20  2305              MOVS     r3,#5
000b22  071b              LSLS     r3,r3,#28
000b24  631a              STR      r2,[r3,#0x30]
;;;1052   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_6) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_6);
000b26  2901              CMP      r1,#1
000b28  d105              BNE      |L19.2870|
000b2a  4a31              LDR      r2,|L19.3056|
000b2c  3a40              SUBS     r2,r2,#0x40
000b2e  6852              LDR      r2,[r2,#4]
000b30  058b              LSLS     r3,r1,#22
000b32  431a              ORRS     r2,r2,r3
000b34  e005              B        |L19.2882|
                  |L19.2870|
000b36  4a2e              LDR      r2,|L19.3056|
000b38  3a40              SUBS     r2,r2,#0x40
000b3a  6852              LDR      r2,[r2,#4]
000b3c  2301              MOVS     r3,#1
000b3e  059b              LSLS     r3,r3,#22
000b40  439a              BICS     r2,r2,r3
                  |L19.2882|
000b42  4b2b              LDR      r3,|L19.3056|
000b44  3b40              SUBS     r3,r3,#0x40
000b46  605a              STR      r2,[r3,#4]
000b48  e050              B        |L19.3052|
                  |L19.2890|
;;;1053   	} else if (pinno == 38) {
000b4a  2826              CMP      r0,#0x26
000b4c  d126              BNE      |L19.2972|
;;;1054   		// Seg 38
;;;1055   		GCR->PA_L_MFP &= ~PA5_MFP_MASK;
000b4e  2205              MOVS     r2,#5
000b50  0712              LSLS     r2,r2,#28
000b52  6b12              LDR      r2,[r2,#0x30]
000b54  2307              MOVS     r3,#7
000b56  051b              LSLS     r3,r3,#20
000b58  439a              BICS     r2,r2,r3
000b5a  2305              MOVS     r3,#5
000b5c  071b              LSLS     r3,r3,#28
000b5e  631a              STR      r2,[r3,#0x30]
;;;1056   		GCR->PA_L_MFP |= (enable == true) ? PA5_MFP_LCD_S38:0;
000b60  461a              MOV      r2,r3
000b62  6b12              LDR      r2,[r2,#0x30]
000b64  2901              CMP      r1,#1
000b66  d102              BNE      |L19.2926|
000b68  2307              MOVS     r3,#7
000b6a  051b              LSLS     r3,r3,#20
000b6c  e000              B        |L19.2928|
                  |L19.2926|
000b6e  2300              MOVS     r3,#0
                  |L19.2928|
000b70  431a              ORRS     r2,r2,r3
000b72  2305              MOVS     r3,#5
000b74  071b              LSLS     r3,r3,#28
000b76  631a              STR      r2,[r3,#0x30]
;;;1057   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_5) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_5);
000b78  2901              CMP      r1,#1
000b7a  d105              BNE      |L19.2952|
000b7c  4a1c              LDR      r2,|L19.3056|
000b7e  3a40              SUBS     r2,r2,#0x40
000b80  6852              LDR      r2,[r2,#4]
000b82  054b              LSLS     r3,r1,#21
000b84  431a              ORRS     r2,r2,r3
000b86  e005              B        |L19.2964|
                  |L19.2952|
000b88  4a19              LDR      r2,|L19.3056|
000b8a  3a40              SUBS     r2,r2,#0x40
000b8c  6852              LDR      r2,[r2,#4]
000b8e  2301              MOVS     r3,#1
000b90  055b              LSLS     r3,r3,#21
000b92  439a              BICS     r2,r2,r3
                  |L19.2964|
000b94  4b16              LDR      r3,|L19.3056|
000b96  3b40              SUBS     r3,r3,#0x40
000b98  605a              STR      r2,[r3,#4]
000b9a  e027              B        |L19.3052|
                  |L19.2972|
;;;1058   	} else if (pinno == 39) {
000b9c  2827              CMP      r0,#0x27
000b9e  d125              BNE      |L19.3052|
;;;1059   		// Seg 39
;;;1060   		GCR->PA_L_MFP &= ~PA4_MFP_MASK;
000ba0  2205              MOVS     r2,#5
000ba2  0712              LSLS     r2,r2,#28
000ba4  6b12              LDR      r2,[r2,#0x30]
000ba6  2307              MOVS     r3,#7
000ba8  041b              LSLS     r3,r3,#16
000baa  439a              BICS     r2,r2,r3
000bac  2305              MOVS     r3,#5
000bae  071b              LSLS     r3,r3,#28
000bb0  631a              STR      r2,[r3,#0x30]
;;;1061   		GCR->PA_L_MFP |= (enable == true) ? PA4_MFP_LCD_S39:0;
000bb2  461a              MOV      r2,r3
000bb4  6b12              LDR      r2,[r2,#0x30]
000bb6  2901              CMP      r1,#1
000bb8  d102              BNE      |L19.3008|
000bba  2307              MOVS     r3,#7
000bbc  041b              LSLS     r3,r3,#16
000bbe  e000              B        |L19.3010|
                  |L19.3008|
000bc0  2300              MOVS     r3,#0
                  |L19.3010|
000bc2  431a              ORRS     r2,r2,r3
000bc4  2305              MOVS     r3,#5
000bc6  071b              LSLS     r3,r3,#28
000bc8  631a              STR      r2,[r3,#0x30]
;;;1062   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_4) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_4);
000bca  2901              CMP      r1,#1
000bcc  d105              BNE      |L19.3034|
000bce  4a08              LDR      r2,|L19.3056|
000bd0  3a40              SUBS     r2,r2,#0x40
000bd2  6852              LDR      r2,[r2,#4]
000bd4  050b              LSLS     r3,r1,#20
000bd6  431a              ORRS     r2,r2,r3
000bd8  e005              B        |L19.3046|
                  |L19.3034|
000bda  4a05              LDR      r2,|L19.3056|
000bdc  3a40              SUBS     r2,r2,#0x40
000bde  6852              LDR      r2,[r2,#4]
000be0  2301              MOVS     r3,#1
000be2  051b              LSLS     r3,r3,#20
000be4  439a              BICS     r2,r2,r3
                  |L19.3046|
000be6  4b02              LDR      r3,|L19.3056|
000be8  3b40              SUBS     r3,r3,#0x40
000bea  605a              STR      r2,[r3,#4]
                  |L19.3052|
;;;1063   	}
;;;1064   #endif
;;;1065   
;;;1066   #ifdef LCD_LQFP64_PIN
;;;1067   	uint32_t bitset;
;;;1068   	if(enable == true) bitset = 7;
;;;1069   	else bitset = 0;
;;;1070   
;;;1071   	if (pinno == 0) {
;;;1072   		// Seg 0
;;;1073   		GCR->PB_L_MFP &= ~PB1_MFP_MASK;
;;;1074   		GCR->PB_L_MFP |= (enable == true) ? PB1_MFP_LCD_S0:0;
;;;1075   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_1) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_1);
;;;1076   	} else if (pinno == 1) {
;;;1077   		// Seg 1
;;;1078   		GCR->PB_L_MFP &= ~PB0_MFP_MASK;
;;;1079   		GCR->PB_L_MFP |= (enable == true) ? PB0_MFP_LCD_S1:0;
;;;1080   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_0) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_0);
;;;1081   	} else if (pinno == 2) {
;;;1082   		// Seg 2
;;;1083   		GCR->PB_L_MFP &= ~PB7_MFP_MASK;
;;;1084   		GCR->PB_L_MFP |= (enable == true) ? PB7_MFP_LCD_S2:0;
;;;1085   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_7) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_7);
;;;1086   	} else if (pinno == 3) {
;;;1087   		// Seg 3
;;;1088   		GCR->PB_L_MFP &= ~PB6_MFP_MASK;
;;;1089   		GCR->PB_L_MFP |= (enable == true) ? PB6_MFP_LCD_S3:0;
;;;1090   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_6) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_6);
;;;1091   	} else if (pinno == 4) {
;;;1092   		// Seg 4
;;;1093   		GCR->PB_L_MFP &= ~PB5_MFP_MASK;
;;;1094   		GCR->PB_L_MFP |= (enable == true) ? PB5_MFP_LCD_S4:0;
;;;1095   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_5) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_5);
;;;1096   	} else if (pinno == 5) {
;;;1097   		// Seg 5
;;;1098   		GCR->PB_L_MFP &= ~PB4_MFP_MASK;
;;;1099   		GCR->PB_L_MFP |= (enable == true) ? PB4_MFP_LCD_S5:0;
;;;1100   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_4) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_4);
;;;1101   	} else if (pinno == 6) {
;;;1102   		// Seg 6
;;;1103   		GCR->PA_H_MFP &= ~PA8_MFP_MASK;
;;;1104   		GCR->PA_H_MFP |= (enable == true) ? PA8_MFP_LCD_S6:0;
;;;1105   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_8) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_8);
;;;1106   	} else if (pinno == 7) {
;;;1107   		// Seg 7
;;;1108   		GCR->PA_H_MFP &= ~PA9_MFP_MASK;
;;;1109   		GCR->PA_H_MFP |= (enable == true) ? PA9_MFP_LCD_S7:0;
;;;1110   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_9) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_9);
;;;1111   	} else if (pinno == 8) {
;;;1112   		// Seg 8
;;;1113   		GCR->PA_H_MFP &= ~PA10_MFP_MASK;
;;;1114   		GCR->PA_H_MFP |= (enable == true) ? PA10_MFP_LCD_S8:0;
;;;1115   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_10) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_10);
;;;1116   	} else if (pinno == 9) {
;;;1117   		// Seg 9
;;;1118   		GCR->PA_H_MFP &= ~PA11_MFP_MASK;
;;;1119   		GCR->PA_H_MFP |= (enable == true) ? PA11_MFP_LCD_S9:0;
;;;1120   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_11) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_11);
;;;1121   	} else if (pinno == 10) {
;;;1122   		// Seg 10
;;;1123   		GCR->PB_H_MFP &= ~PB12_MFP_MASK;
;;;1124   		GCR->PB_H_MFP |= (enable == true) ? PB12_MFP_LCD_S10:0;
;;;1125   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_12) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_12);
;;;1126   	} else if (pinno == 11) {
;;;1127   		// Seg 11
;;;1128   		GCR->PB_H_MFP &= ~PB13_MFP_MASK;
;;;1129   		GCR->PB_H_MFP |= (enable == true) ? PB13_MFP_LCD_S11:0;
;;;1130   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_13) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_13);
;;;1131   	} else if (pinno == 12) {
;;;1132   		// Seg 12
;;;1133   		GCR->PB_H_MFP &= ~PB14_MFP_MASK;
;;;1134   		GCR->PB_H_MFP |= (enable == true) ? PB14_MFP_LCD_S12:0;
;;;1135   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_14) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_14);
;;;1136   	} else if (pinno == 13) {
;;;1137   		// Seg 13
;;;1138   		GCR->PB_H_MFP &= ~PB8_MFP_MASK;
;;;1139   		GCR->PB_H_MFP |= (enable == true) ? PB8_MFP_LCD_S13:0;
;;;1140   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_8) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_8);
;;;1141   	} else if (pinno == 14) {
;;;1142   		// Seg 14
;;;1143   		GCR->PB_H_MFP &= ~PB15_MFP_MASK;
;;;1144   		GCR->PB_H_MFP |= (enable == true) ? PB15_MFP_LCD_S14:0;
;;;1145   		GPIOB->OFFD = (enable == true)? (GPIOB->OFFD | GPIO_OFFD_OFFD_15) : (GPIOB->OFFD &~GPIO_OFFD_OFFD_15);
;;;1146   	} else if (pinno == 15) {
;;;1147   		// Seg 15
;;;1148   		GCR->PC_H_MFP &= ~PC14_MFP_MASK;
;;;1149   		GCR->PC_H_MFP |= (enable == true) ? PC14_MFP_LCD_S15:0;
;;;1150   		GPIOC->OFFD = (enable == true)? (GPIOC->OFFD | GPIO_OFFD_OFFD_14) : (GPIOC->OFFD &~GPIO_OFFD_OFFD_14);
;;;1151   	} else if (pinno == 16) {
;;;1152   		// Seg 16
;;;1153   		GCR->PC_H_MFP &= ~PC15_MFP_MASK;
;;;1154   		GCR->PC_H_MFP |= (enable == true) ? PC15_MFP_LCD_S16:0;
;;;1155   		GPIOC->OFFD = (enable == true)? (GPIOC->OFFD | GPIO_OFFD_OFFD_15) : (GPIOC->OFFD &~GPIO_OFFD_OFFD_15);
;;;1156   	} else if (pinno == 17) {
;;;1157   		// Seg 17
;;;1158   		GCR->PC_L_MFP &= ~PC7_MFP_MASK;
;;;1159   		GCR->PC_L_MFP |= (enable == true) ? PC7_MFP_LCD_S17:0;
;;;1160   		GPIOC->OFFD = (enable == true)? (GPIOC->OFFD | GPIO_OFFD_OFFD_7) : (GPIOC->OFFD &~GPIO_OFFD_OFFD_7);
;;;1161   	} else if (pinno == 18) {
;;;1162   		// Seg 18
;;;1163   		GCR->PA_L_MFP &= ~PA7_MFP_MASK;
;;;1164   		GCR->PA_L_MFP |= (enable == true) ? PA7_MFP_LCD_S18:0;
;;;1165   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_7) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_7);
;;;1166   	} else if (pinno == 19) {
;;;1167   		// Seg 19
;;;1168   		GCR->PA_L_MFP &= ~PA6_MFP_MASK;
;;;1169   		GCR->PA_L_MFP |= (enable == true) ? PA6_MFP_LCD_S19:0;
;;;1170   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_6) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_6);
;;;1171   	} else if (pinno == 20) {
;;;1172   		// Seg 20
;;;1173   		GCR->PA_L_MFP &= ~PA5_MFP_MASK;
;;;1174   		GCR->PA_L_MFP |= (enable == true) ? PA5_MFP_LCD_S20:0;
;;;1175   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_5) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_5);
;;;1176   	} else if (pinno == 21) {
;;;1177   		// Seg 21
;;;1178   		GCR->PA_L_MFP &= ~PA4_MFP_MASK;
;;;1179   		GCR->PA_L_MFP |= (enable == true) ? PA4_MFP_LCD_S21:0;
;;;1180   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_4) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_4);
;;;1181   	} else if (pinno == 22) {
;;;1182   		// Seg 22
;;;1183   		GCR->PA_L_MFP &= ~PA3_MFP_MASK;
;;;1184   		GCR->PA_L_MFP |= (enable == true) ? PA3_MFP_LCD_S22:0;
;;;1185   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_3) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_3);
;;;1186   	} else if (pinno == 23) {
;;;1187   		// Seg 23
;;;1188   		GCR->PA_L_MFP &= ~PA2_MFP_MASK;
;;;1189   		GCR->PA_L_MFP |= (enable == true) ? PA2_MFP_LCD_S23:0;
;;;1190   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_2) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_2);
;;;1191   	} else if (pinno == 24) {
;;;1192   		// Seg 24
;;;1193   		GCR->PA_H_MFP &= ~PA12_MFP_MASK;
;;;1194   		GCR->PA_H_MFP |= (enable == true) ? PA12_MFP_LCD_S24:0;
;;;1195   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_12) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_12);
;;;1196   	} else if (pinno == 25) {
;;;1197   		// Seg 25
;;;1198   		GCR->PA_H_MFP &= ~PA13_MFP_MASK;
;;;1199   		GCR->PA_H_MFP |= (enable == true) ? PA13_MFP_LCD_S25:0;
;;;1200   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_13) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_13);
;;;1201   	} else if (pinno == 26) {
;;;1202   		// Seg 26
;;;1203   		GCR->PA_H_MFP &= ~PA14_MFP_MASK;
;;;1204   		GCR->PA_H_MFP |= (enable == true) ? PA14_MFP_LCD_S26:0;
;;;1205   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_14) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_14);
;;;1206   	} else if (pinno == 27) {
;;;1207   		// Seg 27
;;;1208   		GCR->PA_H_MFP &= ~PA15_MFP_MASK;
;;;1209   		GCR->PA_H_MFP |= (enable == true) ? PA15_MFP_LCD_S27:0;
;;;1210   		GPIOA->OFFD = (enable == true)? (GPIOA->OFFD | GPIO_OFFD_OFFD_15) : (GPIOA->OFFD &~GPIO_OFFD_OFFD_15);
;;;1211   	} else if (pinno == 28) {
;;;1212   		// Seg 28
;;;1213   		GCR->PC_H_MFP &= ~PC8_MFP_MASK;
;;;1214   		GCR->PC_H_MFP |= (enable == true) ? PC8_MFP_LCD_S28:0;
;;;1215   		GPIOC->OFFD = (enable == true)? (GPIOC->OFFD | GPIO_OFFD_OFFD_8) : (GPIOC->OFFD &~GPIO_OFFD_OFFD_8);
;;;1216   	} else if (pinno == 29) {
;;;1217   		// Seg 29
;;;1218   		GCR->PC_H_MFP &= ~PC9_MFP_MASK;
;;;1219   		GCR->PC_H_MFP |= (enable == true) ? PC9_MFP_LCD_S29:0;
;;;1220   		GPIOC->OFFD = (enable == true)? (GPIOC->OFFD | GPIO_OFFD_OFFD_9) : (GPIOC->OFFD &~GPIO_OFFD_OFFD_9);
;;;1221   	} else if (pinno == 30) {
;;;1222   		// Seg 30
;;;1223   		GCR->PC_H_MFP &= ~PC10_MFP_MASK;
;;;1224   		GCR->PC_H_MFP |= (enable == true) ? PC10_MFP_LCD_S30:0;
;;;1225   		GPIOC->OFFD = (enable == true)? (GPIOC->OFFD | GPIO_OFFD_OFFD_10) : (GPIOC->OFFD &~GPIO_OFFD_OFFD_10);
;;;1226   	} else if (pinno == 31) {
;;;1227   		// Seg 31
;;;1228   		GCR->PC_H_MFP &= ~PC11_MFP_MASK;
;;;1229   		GCR->PC_H_MFP |= (enable == true) ? PC11_MFP_LCD_S31:0;
;;;1230   		GPIOC->OFFD = (enable == true)? (GPIOC->OFFD | GPIO_OFFD_OFFD_11) : (GPIOC->OFFD &~GPIO_OFFD_OFFD_11);
;;;1231   	}
;;;1232   
;;;1233   #endif
;;;1234   
;;;1235   }
000bec  bd00              POP      {pc}
000bee  0000              DCW      0x0000
                  |L19.3056|
                          DCD      0x50004040
                  |L19.3060|
                          DCD      0x50000040
                          ENDP


                          AREA ||i.LCD_Symbol||, CODE, READONLY, ALIGN=2

                  LCD_Symbol PROC
;;;606     */
;;;607    void LCD_Symbol(E_LCDSYMBOL s, int on)
000000  b5f0              PUSH     {r4-r7,lr}
;;;608    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;609    	int com = 0;
000006  2600              MOVS     r6,#0
;;;610    	int bit = 0;
000008  2700              MOVS     r7,#0
;;;611    
;;;612    	com = S_LCDSYMBOL[s].com;
00000a  00e0              LSLS     r0,r4,#3
00000c  4908              LDR      r1,|L20.48|
00000e  580e              LDR      r6,[r1,r0]
;;;613    	bit = S_LCDSYMBOL[s].seg;
000010  00e0              LSLS     r0,r4,#3
000012  1840              ADDS     r0,r0,r1
000014  6847              LDR      r7,[r0,#4]
;;;614    	
;;;615      	if (on)
000016  2d00              CMP      r5,#0
000018  d004              BEQ      |L20.36|
;;;616      	{
;;;617        	LCD_EnableSegment(com, bit);
00001a  4639              MOV      r1,r7
00001c  4630              MOV      r0,r6
00001e  f7fffffe          BL       LCD_EnableSegment
000022  e003              B        |L20.44|
                  |L20.36|
;;;618      	}
;;;619      	else
;;;620      	{		
;;;621    	    LCD_DisableSegment(com, bit);
000024  4639              MOV      r1,r7
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       LCD_DisableSegment
                  |L20.44|
;;;622      	}
;;;623    }
00002c  bdf0              POP      {r4-r7,pc}
;;;624    
                          ENDP

00002e  0000              DCW      0x0000
                  |L20.48|
                          DCD      S_LCDSYMBOL

                          AREA ||i.LCD_UpdateChargePumpFreq||, CODE, READONLY, ALIGN=2

                  LCD_UpdateChargePumpFreq PROC
;;;640     */
;;;641    void LCD_UpdateChargePumpFreq(void)
000000  b530              PUSH     {r4,r5,lr}
;;;642    {
000002  b089              SUB      sp,sp,#0x24
;;;643    	uint32_t clkdiv;
;;;644    	uint32_t cpump_freq_div[] = {1, 2, 4, 8, 16, 32, 64, 128};
000004  2220              MOVS     r2,#0x20
000006  4913              LDR      r1,|L21.84|
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memcpy4
;;;645    
;;;646    	if((CLK->CLKSEL1 & CLK_CLKSEL1_LCD_MASK) == 0)
00000e  4812              LDR      r0,|L21.88|
000010  6940              LDR      r0,[r0,#0x14]
000012  2101              MOVS     r1,#1
000014  0489              LSLS     r1,r1,#18
000016  4208              TST      r0,r1
000018  d103              BNE      |L21.34|
;;;647    		g_LCDClkSrc = 32 * 1024;
00001a  10c8              ASRS     r0,r1,#3
00001c  490f              LDR      r1,|L21.92|
00001e  6008              STR      r0,[r1,#0]  ; g_LCDClkSrc
000020  e003              B        |L21.42|
                  |L21.34|
;;;648    	else
;;;649    		g_LCDClkSrc = 10 * 1024;
000022  2005              MOVS     r0,#5
000024  02c0              LSLS     r0,r0,#11
000026  490d              LDR      r1,|L21.92|
000028  6008              STR      r0,[r1,#0]  ; g_LCDClkSrc
                  |L21.42|
;;;650    	
;;;651    	//clkdiv = LCD->DISPCTL_BITS.CPUMP_FREQ;
;;;652    	clkdiv = (LCD->DISPCTL & LCD_DISPCTL_CPUMP_FREQ) >> 11;
00002a  480d              LDR      r0,|L21.96|
00002c  6840              LDR      r0,[r0,#4]
00002e  2107              MOVS     r1,#7
000030  02c9              LSLS     r1,r1,#11
000032  4008              ANDS     r0,r0,r1
000034  0ac4              LSRS     r4,r0,#11
;;;653    
;;;654    	g_ChargePumpFreq = g_LCDClkSrc / cpump_freq_div[clkdiv];
000036  00a0              LSLS     r0,r4,#2
000038  aa01              ADD      r2,sp,#4
00003a  5811              LDR      r1,[r2,r0]
00003c  4807              LDR      r0,|L21.92|
00003e  6800              LDR      r0,[r0,#0]  ; g_LCDClkSrc
000040  f7fffffe          BL       __aeabi_uidivmod
000044  4605              MOV      r5,r0
000046  f7fffffe          BL       __aeabi_ui2d
00004a  4a06              LDR      r2,|L21.100|
00004c  c203              STM      r2!,{r0,r1}
;;;655    	
;;;656    	LCDDEBUG("Charge Pump Frequency = %f Hz \n", g_ChargePumpFreq);
;;;657    }
00004e  b009              ADD      sp,sp,#0x24
000050  bd30              POP      {r4,r5,pc}
;;;658    
                          ENDP

000052  0000              DCW      0x0000
                  |L21.84|
                          DCD      ||.constdata||+0x3e0
                  |L21.88|
                          DCD      0x50000200
                  |L21.92|
                          DCD      g_LCDClkSrc
                  |L21.96|
                          DCD      0x400b0000
                  |L21.100|
                          DCD      g_ChargePumpFreq

                          AREA ||i.LCD_UpdateLCDFrameFreq||, CODE, READONLY, ALIGN=2

                  LCD_UpdateLCDFrameFreq PROC
;;;811     */
;;;812    void LCD_UpdateLCDFrameFreq(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;813    {
000002  b091              SUB      sp,sp,#0x44
;;;814    	uint32_t clkdiv, muldiv;
;;;815    	uint32_t lcd_freq_div[] = {32, 64, 96, 128, 192, 256, 384, 512};
000004  2220              MOVS     r2,#0x20
000006  4922              LDR      r1,|L22.144|
000008  a808              ADD      r0,sp,#0x20
00000a  f7fffffe          BL       __aeabi_memcpy4
;;;816    	uint32_t multiplex_freq_div[] = {2, 4, 6, 8, 10, 12};
00000e  2218              MOVS     r2,#0x18
000010  491f              LDR      r1,|L22.144|
000012  3120              ADDS     r1,r1,#0x20
000014  a802              ADD      r0,sp,#8
000016  f7fffffe          BL       __aeabi_memcpy4
;;;817    
;;;818    	if((CLK->CLKSEL1 & CLK_CLKSEL1_LCD_MASK) == 0)
00001a  481e              LDR      r0,|L22.148|
00001c  6940              LDR      r0,[r0,#0x14]
00001e  2101              MOVS     r1,#1
000020  0489              LSLS     r1,r1,#18
000022  4208              TST      r0,r1
000024  d103              BNE      |L22.46|
;;;819    		g_LCDClkSrc = 32 * 1024;
000026  10c8              ASRS     r0,r1,#3
000028  491b              LDR      r1,|L22.152|
00002a  6008              STR      r0,[r1,#0]  ; g_LCDClkSrc
00002c  e003              B        |L22.54|
                  |L22.46|
;;;820    	else
;;;821    		g_LCDClkSrc = 10 * 1024;
00002e  2005              MOVS     r0,#5
000030  02c0              LSLS     r0,r0,#11
000032  4919              LDR      r1,|L22.152|
000034  6008              STR      r0,[r1,#0]  ; g_LCDClkSrc
                  |L22.54|
;;;822    
;;;823    	clkdiv = (LCD->CTL & LCD_CTL_FREQ) >> LCD_CTL_FREQ_BIT_ADDR;
000036  4819              LDR      r0,|L22.156|
000038  6800              LDR      r0,[r0,#0]
00003a  2170              MOVS     r1,#0x70
00003c  4008              ANDS     r0,r0,r1
00003e  0904              LSRS     r4,r0,#4
;;;824    	muldiv = (LCD->CTL & LCD_CTL_MUX) >> LCD_CTL_MUX_BIT_ADDR;
000040  4816              LDR      r0,|L22.156|
000042  6800              LDR      r0,[r0,#0]
000044  210e              MOVS     r1,#0xe
000046  4008              ANDS     r0,r0,r1
000048  0845              LSRS     r5,r0,#1
;;;825    
;;;826    	g_LCDFreq = (double)g_LCDClkSrc / lcd_freq_div[clkdiv];
00004a  00a1              LSLS     r1,r4,#2
00004c  aa08              ADD      r2,sp,#0x20
00004e  5850              LDR      r0,[r2,r1]
000050  f7fffffe          BL       __aeabi_ui2d
000054  4606              MOV      r6,r0
000056  460f              MOV      r7,r1
000058  480f              LDR      r0,|L22.152|
00005a  6800              LDR      r0,[r0,#0]  ; g_LCDClkSrc
00005c  f7fffffe          BL       __aeabi_ui2d
000060  4632              MOV      r2,r6
000062  463b              MOV      r3,r7
000064  9101              STR      r1,[sp,#4]
000066  9000              STR      r0,[sp,#0]
000068  f7fffffe          BL       __aeabi_ddiv
00006c  4a0c              LDR      r2,|L22.160|
00006e  c203              STM      r2!,{r0,r1}
;;;827    	LCDDEBUG("\n\ng_LCDFreq = %f Hz	\n", g_LCDFreq);
;;;828        g_LCDFrameRate = (double)g_LCDFreq / multiplex_freq_div[muldiv];
000070  00a9              LSLS     r1,r5,#2
000072  aa02              ADD      r2,sp,#8
000074  5850              LDR      r0,[r2,r1]
000076  f7fffffe          BL       __aeabi_ui2d
00007a  4606              MOV      r6,r0
00007c  4602              MOV      r2,r0
00007e  460b              MOV      r3,r1
000080  4907              LDR      r1,|L22.160|
000082  c903              LDM      r1,{r0,r1}
000084  f7fffffe          BL       __aeabi_ddiv
000088  4a06              LDR      r2,|L22.164|
00008a  c203              STM      r2!,{r0,r1}
;;;829        LCDDEBUG("g_LCDFrameRate = %f Hz \n", g_LCDFrameRate);
;;;830        
;;;831    }
00008c  b011              ADD      sp,sp,#0x44
00008e  bdf0              POP      {r4-r7,pc}
;;;832    
                          ENDP

                  |L22.144|
                          DCD      ||.constdata||+0x400
                  |L22.148|
                          DCD      0x50000200
                  |L22.152|
                          DCD      g_LCDClkSrc
                  |L22.156|
                          DCD      0x400b0000
                  |L22.160|
                          DCD      g_LCDFreq
                  |L22.164|
                          DCD      g_LCDFrameRate

                          AREA ||i.LCD_Write||, CODE, READONLY, ALIGN=2

                  LCD_Write PROC
;;;478     */
;;;479    void LCD_Write(char *string)
000000  b5f0              PUSH     {r4-r7,lr}
;;;480    {
000002  b085              SUB      sp,sp,#0x14
000004  4606              MOV      r6,r0
;;;481    	int      data, length, index;
;;;482    	uint16_t bitfield;
;;;483    	//uint32_t value;
;;;484    	uint32_t com, bit;
;;;485    	int      i;
;;;486    
;;;487    	length = strlen(string);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       strlen
00000c  9003              STR      r0,[sp,#0xc]
;;;488    	index  = 0;
00000e  2400              MOVS     r4,#0
;;;489    
;;;490    
;;;491    	/* Turn all segments off */
;;;492    	LCD_AlphaNumberOff();
000010  f7fffffe          BL       LCD_AlphaNumberOff
;;;493    
;;;494    	/* fill out all characters on display */
;;;495    	for (index = 0; index < LCD_ALPHABET_NUM; index++)
000014  bf00              NOP      
000016  e029              B        |L23.108|
                  |L23.24|
;;;496    	{
;;;497        	if (index < length)
000018  9803              LDR      r0,[sp,#0xc]
00001a  4284              CMP      r4,r0
00001c  da01              BGE      |L23.34|
;;;498        	{
;;;499          		data = (int) *string;
00001e  7837              LDRB     r7,[r6,#0]
000020  e000              B        |L23.36|
                  |L23.34|
;;;500        	}
;;;501        	else           /* padding with space */
;;;502        	{
;;;503          		data = 0x20; /* SPACE */
000022  2720              MOVS     r7,#0x20
                  |L23.36|
;;;504        	}
;;;505        	/* defined letters currently starts at "SPACE" - 0x20; */
;;;506        	data     = data - 0x20;
000024  3f20              SUBS     r7,r7,#0x20
;;;507        	bitfield = Nuvo_alphabet[data];
000026  0078              LSLS     r0,r7,#1
000028  4912              LDR      r1,|L23.116|
00002a  5a08              LDRH     r0,[r1,r0]
00002c  9002              STR      r0,[sp,#8]
;;;508    
;;;509    
;;;510        	for (i = 0; i < LCD_ALPHABET_SEGNUM; i++)
00002e  2500              MOVS     r5,#0
000030  e018              B        |L23.100|
                  |L23.50|
;;;511        	{
;;;512          		bit   = NANO1XXDISPLAY.Text[index].bit[i];
000032  2070              MOVS     r0,#0x70
000034  4360              MULS     r0,r4,r0
000036  4910              LDR      r1,|L23.120|
000038  1840              ADDS     r0,r0,r1
00003a  3038              ADDS     r0,r0,#0x38
00003c  00a9              LSLS     r1,r5,#2
00003e  5840              LDR      r0,[r0,r1]
000040  9000              STR      r0,[sp,#0]
;;;513          		com   = NANO1XXDISPLAY.Text[index].com[i];
000042  2070              MOVS     r0,#0x70
000044  4360              MULS     r0,r4,r0
000046  490c              LDR      r1,|L23.120|
000048  1840              ADDS     r0,r0,r1
00004a  00a9              LSLS     r1,r5,#2
00004c  5840              LDR      r0,[r0,r1]
00004e  9001              STR      r0,[sp,#4]
;;;514          		//value = (1 << bit);
;;;515    
;;;516          		if (bitfield & (1 << i))
000050  2001              MOVS     r0,#1
000052  40a8              LSLS     r0,r0,r5
000054  9902              LDR      r1,[sp,#8]
000056  4208              TST      r0,r1
000058  d003              BEQ      |L23.98|
;;;517          		{
;;;518            		/* Turn on segment */
;;;519            		LCD_EnableSegment(com, bit);
00005a  9900              LDR      r1,[sp,#0]
00005c  9801              LDR      r0,[sp,#4]
00005e  f7fffffe          BL       LCD_EnableSegment
                  |L23.98|
000062  1c6d              ADDS     r5,r5,#1              ;510
                  |L23.100|
000064  2d0e              CMP      r5,#0xe               ;510
000066  dbe4              BLT      |L23.50|
;;;520          		}
;;;521        	}
;;;522        	string++;
000068  1c76              ADDS     r6,r6,#1
00006a  1c64              ADDS     r4,r4,#1              ;495
                  |L23.108|
00006c  2c04              CMP      r4,#4                 ;495
00006e  dbd3              BLT      |L23.24|
;;;523    	}
;;;524    
;;;525    }
000070  b005              ADD      sp,sp,#0x14
000072  bdf0              POP      {r4-r7,pc}
;;;526    
                          ENDP

                  |L23.116|
                          DCD      Nuvo_alphabet
                  |L23.120|
                          DCD      NANO1XXDISPLAY

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  NANO1XXDISPLAY
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000001
                          DCD      0x00000002
                          DCD      0x00000002
                          DCD      0x00000003
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000001
                          DCD      0x0000000a
                          DCD      0x0000000a
                          DCD      0x0000000a
                          DCD      0x0000000a
                          DCD      0x00000008
                          DCD      0x00000008
                          DCD      0x00000009
                          DCD      0x00000009
                          DCD      0x0000000b
                          DCD      0x0000000b
                          DCD      0x0000000b
                          DCD      0x0000000b
                          DCD      0x00000009
                          DCD      0x00000009
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000001
                          DCD      0x00000002
                          DCD      0x00000002
                          DCD      0x00000003
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000001
                          DCD      0x00000010
                          DCD      0x00000010
                          DCD      0x00000010
                          DCD      0x00000010
                          DCD      0x0000000e
                          DCD      0x0000000e
                          DCD      0x0000000f
                          DCD      0x0000000f
                          DCD      0x00000011
                          DCD      0x00000011
                          DCD      0x00000011
                          DCD      0x00000011
                          DCD      0x0000000f
                          DCD      0x0000000f
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000001
                          DCD      0x00000002
                          DCD      0x00000002
                          DCD      0x00000003
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000001
                          DCD      0x00000016
                          DCD      0x00000016
                          DCD      0x00000016
                          DCD      0x00000016
                          DCD      0x00000012
                          DCD      0x00000012
                          DCD      0x00000013
                          DCD      0x00000013
                          DCD      0x00000017
                          DCD      0x00000017
                          DCD      0x00000017
                          DCD      0x00000017
                          DCD      0x00000013
                          DCD      0x00000013
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000001
                          DCD      0x00000002
                          DCD      0x00000002
                          DCD      0x00000003
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000001
                          DCD      0x00000020
                          DCD      0x00000020
                          DCD      0x00000020
                          DCD      0x00000020
                          DCD      0x00000018
                          DCD      0x00000018
                          DCD      0x00000019
                          DCD      0x00000019
                          DCD      0x00000021
                          DCD      0x00000021
                          DCD      0x00000021
                          DCD      0x00000021
                          DCD      0x00000019
                          DCD      0x00000019
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000002
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000002
                          DCD      0x00000002
                          DCD      0x00000003
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000002
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000002
                          DCD      0x00000003
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000001
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000000
                  Nuvo_alphabet
000240  00001100          DCW      0x0000,0x1100
000244  02800000          DCW      0x0280,0x0000
000248  00000000          DCW      0x0000,0x0000
00024c  00000000          DCW      0x0000,0x0000
000250  0039000f          DCW      0x0039,0x000f
000254  3fc01540          DCW      0x3fc0,0x1540
000258  00000440          DCW      0x0000,0x0440
00025c  80002200          DCW      0x8000,0x2200
000260  003f0006          DCW      0x003f,0x0006
000264  045b044f          DCW      0x045b,0x044f
000268  0466046d          DCW      0x0466,0x046d
00026c  047d0007          DCW      0x047d,0x0007
000270  047f046f          DCW      0x047f,0x046f
000274  00000000          DCW      0x0000,0x0000
000278  0a000000          DCW      0x0a00,0x0000
00027c  20800000          DCW      0x2080,0x0000
000280  ffff0477          DCW      0xffff,0x0477
000284  0a790039          DCW      0x0a79,0x0039
000288  20b00079          DCW      0x20b0,0x0079
00028c  0071047d          DCW      0x0071,0x047d
000290  04760006          DCW      0x0476,0x0006
000294  000e0a70          DCW      0x000e,0x0a70
000298  003802b6          DCW      0x0038,0x02b6
00029c  08b6003f          DCW      0x08b6,0x003f
0002a0  0473203f          DCW      0x0473,0x203f
0002a4  0c73046d          DCW      0x0c73,0x046d
0002a8  1101003e          DCW      0x1101,0x003e
0002ac  22302836          DCW      0x2230,0x2836
0002b0  2a80046e          DCW      0x2a80,0x046e
0002b4  22090039          DCW      0x2209,0x0039
0002b8  0880000f          DCW      0x0880,0x000f
0002bc  00010008          DCW      0x0001,0x0008
0002c0  00001058          DCW      0x0000,0x1058
0002c4  047c0058          DCW      0x047c,0x0058
0002c8  045e2058          DCW      0x045e,0x2058
0002cc  04710c0c          DCW      0x0471,0x0c0c
0002d0  04740004          DCW      0x0474,0x0004
0002d4  000e0c70          DCW      0x000e,0x0c70
0002d8  00381454          DCW      0x0038,0x1454
0002dc  0454045c          DCW      0x0454,0x045c
0002e0  04730467          DCW      0x0473,0x0467
0002e4  04500c08          DCW      0x0450,0x0c08
0002e8  0078001c          DCW      0x0078,0x001c
0002ec  20102814          DCW      0x2010,0x2814
0002f0  2a80080c          DCW      0x2a80,0x080c
0002f4  20480000          DCW      0x2048,0x0000
                  Nuvo_Numbers
0002f8  003f0006          DCW      0x003f,0x0006
0002fc  00db00cf          DCW      0x00db,0x00cf
000300  00e600ed          DCW      0x00e6,0x00ed
000304  00fd0007          DCW      0x00fd,0x0007
000308  00ff00ef          DCW      0x00ff,0x00ef
00030c  00c0              DCW      0x00c0
00030e  0000              DCB      0x00,0x00
                  S_LCDSYMBOL
                          DCD      0x00000000
                          DCD      0x00000008
                          DCD      0x00000000
                          DCD      0x0000000e
                          DCD      0x00000000
                          DCD      0x00000012
                          DCD      0x00000000
                          DCD      0x00000018
                          DCD      0x00000003
                          DCD      0x00000001
                          DCD      0x00000003
                          DCD      0x00000008
                          DCD      0x00000003
                          DCD      0x0000000e
                          DCD      0x00000003
                          DCD      0x00000012
                          DCD      0x00000003
                          DCD      0x00000003
                          DCD      0x00000003
                          DCD      0x00000024
                          DCD      0x00000002
                          DCD      0x00000024
                          DCD      0x00000001
                          DCD      0x00000024
                          DCD      0x00000000
                          DCD      0x00000024
                          DCD      0x00000000
                          DCD      0x00000025
                          DCD      0x00000001
                          DCD      0x00000025
                          DCD      0x00000002
                          DCD      0x00000025
                          DCD      0x00000003
                          DCD      0x00000025
                          DCD      0x00000003
                          DCD      0x00000026
                          DCD      0x00000002
                          DCD      0x00000026
                          DCD      0x00000001
                          DCD      0x00000026
                          DCD      0x00000000
                          DCD      0x00000026
                          DCD      0x00000000
                          DCD      0x0000001b
                          DCD      0x00000003
                          DCD      0x0000001b
                          DCD      0x00000002
                          DCD      0x0000001b
                          DCD      0x00000001
                          DCD      0x0000001b
                          DCD      0x00000003
                          DCD      0x00000018
                          DCD      0x00000001
                          DCD      0x00000002
                          DCD      0x00000004
                          DCD      0x00000008
                          DCD      0x00000010
                          DCD      0x00000020
                          DCD      0x00000040
                          DCD      0x00000080
                          DCD      0x00000020
                          DCD      0x00000040
                          DCD      0x00000060
                          DCD      0x00000080
                          DCD      0x000000c0
                          DCD      0x00000100
                          DCD      0x00000180
                          DCD      0x00000200
                          DCD      0x00000002
                          DCD      0x00000004
                          DCD      0x00000006
                          DCD      0x00000008
                          DCD      0x0000000a
                          DCD      0x0000000c

                          AREA ||.data||, DATA, ALIGN=3

                  g_LCDClkSrc
                          DCD      0x00008000
                          DCD      0x00000000
                  g_LCDFreq
                          %        8
                  g_LCDFrameRate
                          %        8
                  g_ChargePumpFreq
                          %        8
                  g_LCDFrameCountFreq
                          %        8
                  g_LCDFrameCountINTFreq
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Libraries\\NANO1xx_Drivers\\Source\\nano1xx_lcd.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_nano1xx_lcd_c_c1e0ab83____REV16|
#line 118 "..\\..\\..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_nano1xx_lcd_c_c1e0ab83____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_nano1xx_lcd_c_c1e0ab83____REVSH|
#line 132
|__asm___13_nano1xx_lcd_c_c1e0ab83____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
