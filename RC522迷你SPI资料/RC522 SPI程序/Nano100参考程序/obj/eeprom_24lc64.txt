; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -o.\obj\eeprom_24lc64.o --depend=.\obj\eeprom_24lc64.d --feedback=.\obj\START_KIT.fed --cpu=Cortex-M0 --apcs=interwork -O0 -I.\Libraries -I.\Include -I.\Users -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\Nuvoton -D__MICROLIB -D__LCDDISPLAY_BTL001_LB_H --omf_browse=.\obj\eeprom_24lc64.crf Users\EEPROM_24LC64.c]
                          THUMB

                          AREA ||i.GPIO_ClrBit||, CODE, READONLY, ALIGN=1

                  GPIO_ClrBit PROC
;;;102      */
;;;103    static __INLINE void GPIO_ClrBit(GPIO_TypeDef *port, uint32_t bit)
000000  6882              LDR      r2,[r0,#8]
;;;104    {
;;;105    	port->DOUT &= ~(1 << bit);
000002  2301              MOVS     r3,#1
000004  408b              LSLS     r3,r3,r1
000006  439a              BICS     r2,r2,r3
000008  6082              STR      r2,[r0,#8]
;;;106    }
00000a  4770              BX       lr
;;;107    
                          ENDP


                          AREA ||i.I2CInit||, CODE, READONLY, ALIGN=2

                  I2CInit PROC
;;;17     
;;;18     void I2CInit(void)
000000  b510              PUSH     {r4,lr}
;;;19     {
;;;20      	/* Set multi function pin for I2C0 */
;;;21         GCR->PA_H_MFP = GCR->PA_H_MFP & ~(PA8_MFP_MASK|PA9_MFP_MASK) | 
000002  2005              MOVS     r0,#5
000004  0700              LSLS     r0,r0,#28
000006  6b40              LDR      r0,[r0,#0x34]
000008  2177              MOVS     r1,#0x77
00000a  4388              BICS     r0,r0,r1
00000c  1c40              ADDS     r0,r0,#1
00000e  2110              MOVS     r1,#0x10
000010  4308              ORRS     r0,r0,r1
000012  2105              MOVS     r1,#5
000014  0709              LSLS     r1,r1,#28
000016  6348              STR      r0,[r1,#0x34]
;;;22     					PA8_MFP_I2C0_SDA | PA9_MFP_I2C0_SCL;
;;;23     	CLS_E2_WP();
000018  2104              MOVS     r1,#4
00001a  4804              LDR      r0,|L2.44|
00001c  f7fffffe          BL       GPIO_ClrBit
;;;24     	CLS_E2_PWR();
000020  2105              MOVS     r1,#5
000022  4802              LDR      r0,|L2.44|
000024  f7fffffe          BL       GPIO_ClrBit
;;;25     }
000028  bd10              POP      {r4,pc}
;;;26     
                          ENDP

00002a  0000              DCW      0x0000
                  |L2.44|
                          DCD      0x50004040

                          AREA ||i.I2C_ClearIntFlag||, CODE, READONLY, ALIGN=1

                  I2C_ClearIntFlag PROC
;;;45       */
;;;46     static __INLINE void I2C_ClearIntFlag(I2C_TypeDef *I2cPort)
000000  6841              LDR      r1,[r0,#4]
;;;47     {
;;;48     	I2cPort->INTSTS |= I2C_INTSTS_INTSTS;
000002  2201              MOVS     r2,#1
000004  4311              ORRS     r1,r1,r2
000006  6041              STR      r1,[r0,#4]
;;;49     }
000008  4770              BX       lr
;;;50     
                          ENDP


                          AREA ||i.I2C_GetIntFlag||, CODE, READONLY, ALIGN=1

                  I2C_GetIntFlag PROC
;;;76       */
;;;77     static __INLINE uint8_t I2C_GetIntFlag(I2C_TypeDef *I2cPort)
000000  4601              MOV      r1,r0
;;;78     {
;;;79     	return (I2cPort->INTSTS & I2C_INTSTS_INTSTS);
000002  6848              LDR      r0,[r1,#4]
000004  07c0              LSLS     r0,r0,#31
000006  0fc0              LSRS     r0,r0,#31
;;;80     }
000008  4770              BX       lr
;;;81     
                          ENDP


                          AREA ||i.I2C_Trig||, CODE, READONLY, ALIGN=1

                  I2C_Trig PROC
;;;35       */
;;;36     static __INLINE void I2C_Trig(I2C_TypeDef *I2cPort)
000000  6801              LDR      r1,[r0,#0]
;;;37     {
;;;38     	I2cPort->CON |= I2C_CON_I2C_STS;
000002  2210              MOVS     r2,#0x10
000004  4311              ORRS     r1,r1,r2
000006  6001              STR      r1,[r0,#0]
;;;39     }
000008  4770              BX       lr
;;;40     
                          ENDP


                          AREA ||i.Read_24LC64||, CODE, READONLY, ALIGN=2

                  Read_24LC64 PROC
;;;130    
;;;131    uint8_t Read_24LC64(uint32_t address)
000000  b570              PUSH     {r4-r6,lr}
;;;132    {
000002  4604              MOV      r4,r0
;;;133    	uint8_t TEMP;
;;;134    
;;;135    	SystemCoreClock = SYS_GetHCLKFreq(); 
000004  f7fffffe          BL       SYS_GetHCLKFreq
000008  494d              LDR      r1,|L6.320|
00000a  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;136    	
;;;137    	I2C_Init(I2C0);
00000c  484d              LDR      r0,|L6.324|
00000e  f7fffffe          BL       I2C_Init
;;;138    
;;;139    	I2C_Open(I2C0, 100000);
000012  494d              LDR      r1,|L6.328|
000014  484b              LDR      r0,|L6.324|
000016  f7fffffe          BL       I2C_Open
;;;140    	
;;;141    	//send i2c start
;;;142        I2C_Ctrl(I2C0, 1, 0, 0);	 	//set start
00001a  2300              MOVS     r3,#0
00001c  461a              MOV      r2,r3
00001e  2101              MOVS     r1,#1
000020  4848              LDR      r0,|L6.324|
000022  f7fffffe          BL       I2C_Ctrl
;;;143    	I2C_Trig(I2C0);
000026  4847              LDR      r0,|L6.324|
000028  f7fffffe          BL       I2C_Trig
;;;144    	while(I2C_GetIntFlag(I2C0) == 0);
00002c  bf00              NOP      
                  |L6.46|
00002e  4845              LDR      r0,|L6.324|
000030  f7fffffe          BL       I2C_GetIntFlag
000034  2800              CMP      r0,#0
000036  d0fa              BEQ      |L6.46|
;;;145    	I2C_ClearIntFlag(I2C0);
000038  4842              LDR      r0,|L6.324|
00003a  f7fffffe          BL       I2C_ClearIntFlag
;;;146    	 
;;;147       	//send writer command
;;;148    	I2C0->DATA = 0XA0;
00003e  20a0              MOVS     r0,#0xa0
000040  4940              LDR      r1,|L6.324|
000042  6148              STR      r0,[r1,#0x14]
;;;149        I2C_Trig(I2C0);
000044  4608              MOV      r0,r1
000046  f7fffffe          BL       I2C_Trig
;;;150        while(I2C_GetIntFlag(I2C0) == 0);
00004a  bf00              NOP      
                  |L6.76|
00004c  483d              LDR      r0,|L6.324|
00004e  f7fffffe          BL       I2C_GetIntFlag
000052  2800              CMP      r0,#0
000054  d0fa              BEQ      |L6.76|
;;;151    	I2C_ClearIntFlag(I2C0);
000056  483b              LDR      r0,|L6.324|
000058  f7fffffe          BL       I2C_ClearIntFlag
;;;152    	
;;;153    	//send address high
;;;154        I2C0->DATA = (address>>8)&0xFF;	
00005c  0420              LSLS     r0,r4,#16
00005e  0e00              LSRS     r0,r0,#24
000060  4938              LDR      r1,|L6.324|
000062  6148              STR      r0,[r1,#0x14]
;;;155    	I2C_Ctrl(I2C0, 0, 0, 1);    
000064  2301              MOVS     r3,#1
000066  2200              MOVS     r2,#0
000068  4611              MOV      r1,r2
00006a  4836              LDR      r0,|L6.324|
00006c  f7fffffe          BL       I2C_Ctrl
;;;156    	I2C_Trig(I2C0);
000070  4834              LDR      r0,|L6.324|
000072  f7fffffe          BL       I2C_Trig
;;;157    	while(I2C_GetIntFlag(I2C0) == 0);
000076  bf00              NOP      
                  |L6.120|
000078  4832              LDR      r0,|L6.324|
00007a  f7fffffe          BL       I2C_GetIntFlag
00007e  2800              CMP      r0,#0
000080  d0fa              BEQ      |L6.120|
;;;158        I2C_ClearIntFlag(I2C0);
000082  4830              LDR      r0,|L6.324|
000084  f7fffffe          BL       I2C_ClearIntFlag
;;;159        
;;;160    	//send address low
;;;161    	I2C0->DATA = address&0xFF;	
000088  b2e0              UXTB     r0,r4
00008a  492e              LDR      r1,|L6.324|
00008c  6148              STR      r0,[r1,#0x14]
;;;162    	I2C_Ctrl(I2C0, 0, 0, 1);    
00008e  2301              MOVS     r3,#1
000090  2200              MOVS     r2,#0
000092  4611              MOV      r1,r2
000094  482b              LDR      r0,|L6.324|
000096  f7fffffe          BL       I2C_Ctrl
;;;163    	I2C_Trig(I2C0);
00009a  482a              LDR      r0,|L6.324|
00009c  f7fffffe          BL       I2C_Trig
;;;164    	while(I2C_GetIntFlag(I2C0) == 0);
0000a0  bf00              NOP      
                  |L6.162|
0000a2  4828              LDR      r0,|L6.324|
0000a4  f7fffffe          BL       I2C_GetIntFlag
0000a8  2800              CMP      r0,#0
0000aa  d0fa              BEQ      |L6.162|
;;;165    	I2C_ClearIntFlag(I2C0);
0000ac  4825              LDR      r0,|L6.324|
0000ae  f7fffffe          BL       I2C_ClearIntFlag
;;;166    	
;;;167    	//send start flag
;;;168    	I2C_Ctrl(I2C0, 1, 0, 0);    
0000b2  2300              MOVS     r3,#0
0000b4  461a              MOV      r2,r3
0000b6  2101              MOVS     r1,#1
0000b8  4822              LDR      r0,|L6.324|
0000ba  f7fffffe          BL       I2C_Ctrl
;;;169    	I2C_Trig(I2C0);
0000be  4821              LDR      r0,|L6.324|
0000c0  f7fffffe          BL       I2C_Trig
;;;170    	while(I2C_GetIntFlag(I2C0) == 0);
0000c4  bf00              NOP      
                  |L6.198|
0000c6  481f              LDR      r0,|L6.324|
0000c8  f7fffffe          BL       I2C_GetIntFlag
0000cc  2800              CMP      r0,#0
0000ce  d0fa              BEQ      |L6.198|
;;;171    	I2C_ClearIntFlag(I2C0);
0000d0  481c              LDR      r0,|L6.324|
0000d2  f7fffffe          BL       I2C_ClearIntFlag
;;;172    	
;;;173    	//send read command
;;;174    	I2C0->DATA = 0xA1;
0000d6  20a1              MOVS     r0,#0xa1
0000d8  491a              LDR      r1,|L6.324|
0000da  6148              STR      r0,[r1,#0x14]
;;;175    	I2C_Ctrl(I2C0, 0, 0, 1);    
0000dc  2301              MOVS     r3,#1
0000de  2200              MOVS     r2,#0
0000e0  4611              MOV      r1,r2
0000e2  4818              LDR      r0,|L6.324|
0000e4  f7fffffe          BL       I2C_Ctrl
;;;176    	I2C_Trig(I2C0);
0000e8  4816              LDR      r0,|L6.324|
0000ea  f7fffffe          BL       I2C_Trig
;;;177        while(I2C_GetIntFlag(I2C0) == 0);
0000ee  bf00              NOP      
                  |L6.240|
0000f0  4814              LDR      r0,|L6.324|
0000f2  f7fffffe          BL       I2C_GetIntFlag
0000f6  2800              CMP      r0,#0
0000f8  d0fa              BEQ      |L6.240|
;;;178    	I2C_ClearIntFlag(I2C0);
0000fa  4812              LDR      r0,|L6.324|
0000fc  f7fffffe          BL       I2C_ClearIntFlag
;;;179    
;;;180    	//resive data
;;;181    	I2C0->DATA = 0xFF;	
000100  20ff              MOVS     r0,#0xff
000102  4910              LDR      r1,|L6.324|
000104  6148              STR      r0,[r1,#0x14]
;;;182    	I2C_Trig(I2C0);
000106  4608              MOV      r0,r1
000108  f7fffffe          BL       I2C_Trig
;;;183    	while(I2C_GetIntFlag(I2C0) == 0);
00010c  bf00              NOP      
                  |L6.270|
00010e  480d              LDR      r0,|L6.324|
000110  f7fffffe          BL       I2C_GetIntFlag
000114  2800              CMP      r0,#0
000116  d0fa              BEQ      |L6.270|
;;;184    	TEMP= I2C0->DATA;
000118  480a              LDR      r0,|L6.324|
00011a  6940              LDR      r0,[r0,#0x14]
00011c  b2c5              UXTB     r5,r0
;;;185    	
;;;186    	//send i2c stop
;;;187     	I2C_Ctrl(I2C0, 0, 1, 0);    
00011e  2300              MOVS     r3,#0
000120  2201              MOVS     r2,#1
000122  4619              MOV      r1,r3
000124  4807              LDR      r0,|L6.324|
000126  f7fffffe          BL       I2C_Ctrl
;;;188     	I2C_Trig(I2C0);
00012a  4806              LDR      r0,|L6.324|
00012c  f7fffffe          BL       I2C_Trig
;;;189     	 
;;;190     	SYS_Delay(100); 	 	
000130  2064              MOVS     r0,#0x64
000132  f7fffffe          BL       SYS_Delay
;;;191    	I2C_Close(I2C0);
000136  4803              LDR      r0,|L6.324|
000138  f7fffffe          BL       I2C_Close
;;;192    
;;;193    	return TEMP; 
00013c  4628              MOV      r0,r5
;;;194    }
00013e  bd70              POP      {r4-r6,pc}
;;;195    
                          ENDP

                  |L6.320|
                          DCD      SystemCoreClock
                  |L6.324|
                          DCD      0x40020000
                  |L6.328|
                          DCD      0x000186a0

                          AREA ||i.Read_24LC64_Array||, CODE, READONLY, ALIGN=2

                  Read_24LC64_Array PROC
;;;195    
;;;196    void Read_24LC64_Array(uint32_t address,uint8_t *data, uint8_t num)
000000  b5f8              PUSH     {r3-r7,lr}
;;;197    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4617              MOV      r7,r2
;;;198    	uint8_t i;
;;;199    
;;;200    	SystemCoreClock = SYS_GetHCLKFreq(); 
000008  f7fffffe          BL       SYS_GetHCLKFreq
00000c  4955              LDR      r1,|L7.356|
00000e  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;201    	
;;;202    	I2C_Init(I2C0);
000010  4855              LDR      r0,|L7.360|
000012  f7fffffe          BL       I2C_Init
;;;203    
;;;204    	I2C_Open(I2C0, 100000);
000016  4955              LDR      r1,|L7.364|
000018  4853              LDR      r0,|L7.360|
00001a  f7fffffe          BL       I2C_Open
;;;205    	
;;;206    	//send i2c start
;;;207        I2C_Ctrl(I2C0, 1, 0, 0);	 	//set start
00001e  2300              MOVS     r3,#0
000020  461a              MOV      r2,r3
000022  2101              MOVS     r1,#1
000024  4850              LDR      r0,|L7.360|
000026  f7fffffe          BL       I2C_Ctrl
;;;208    	I2C_Trig(I2C0);
00002a  484f              LDR      r0,|L7.360|
00002c  f7fffffe          BL       I2C_Trig
;;;209    	while(I2C_GetIntFlag(I2C0) == 0);
000030  bf00              NOP      
                  |L7.50|
000032  484d              LDR      r0,|L7.360|
000034  f7fffffe          BL       I2C_GetIntFlag
000038  2800              CMP      r0,#0
00003a  d0fa              BEQ      |L7.50|
;;;210    	I2C_ClearIntFlag(I2C0);
00003c  484a              LDR      r0,|L7.360|
00003e  f7fffffe          BL       I2C_ClearIntFlag
;;;211    	 
;;;212       	//send writer command
;;;213    	I2C0->DATA = 0XA0;
000042  20a0              MOVS     r0,#0xa0
000044  4948              LDR      r1,|L7.360|
000046  6148              STR      r0,[r1,#0x14]
;;;214        I2C_Trig(I2C0);
000048  4608              MOV      r0,r1
00004a  f7fffffe          BL       I2C_Trig
;;;215        while(I2C_GetIntFlag(I2C0) == 0);
00004e  bf00              NOP      
                  |L7.80|
000050  4845              LDR      r0,|L7.360|
000052  f7fffffe          BL       I2C_GetIntFlag
000056  2800              CMP      r0,#0
000058  d0fa              BEQ      |L7.80|
;;;216    	I2C_ClearIntFlag(I2C0);
00005a  4843              LDR      r0,|L7.360|
00005c  f7fffffe          BL       I2C_ClearIntFlag
;;;217    	
;;;218    	//send address high
;;;219        I2C0->DATA = (address>>8)&0xFF;	
000060  0428              LSLS     r0,r5,#16
000062  0e00              LSRS     r0,r0,#24
000064  4940              LDR      r1,|L7.360|
000066  6148              STR      r0,[r1,#0x14]
;;;220    	I2C_Ctrl(I2C0, 0, 0, 1);    
000068  2301              MOVS     r3,#1
00006a  2200              MOVS     r2,#0
00006c  4611              MOV      r1,r2
00006e  483e              LDR      r0,|L7.360|
000070  f7fffffe          BL       I2C_Ctrl
;;;221    	I2C_Trig(I2C0);
000074  483c              LDR      r0,|L7.360|
000076  f7fffffe          BL       I2C_Trig
;;;222    	while(I2C_GetIntFlag(I2C0) == 0);
00007a  bf00              NOP      
                  |L7.124|
00007c  483a              LDR      r0,|L7.360|
00007e  f7fffffe          BL       I2C_GetIntFlag
000082  2800              CMP      r0,#0
000084  d0fa              BEQ      |L7.124|
;;;223        I2C_ClearIntFlag(I2C0);
000086  4838              LDR      r0,|L7.360|
000088  f7fffffe          BL       I2C_ClearIntFlag
;;;224        
;;;225    	//send address low
;;;226    	I2C0->DATA = address&0xFF;	
00008c  b2e8              UXTB     r0,r5
00008e  4936              LDR      r1,|L7.360|
000090  6148              STR      r0,[r1,#0x14]
;;;227    	I2C_Ctrl(I2C0, 0, 0, 1);    
000092  2301              MOVS     r3,#1
000094  2200              MOVS     r2,#0
000096  4611              MOV      r1,r2
000098  4833              LDR      r0,|L7.360|
00009a  f7fffffe          BL       I2C_Ctrl
;;;228    	I2C_Trig(I2C0);
00009e  4832              LDR      r0,|L7.360|
0000a0  f7fffffe          BL       I2C_Trig
;;;229    	while(I2C_GetIntFlag(I2C0) == 0);
0000a4  bf00              NOP      
                  |L7.166|
0000a6  4830              LDR      r0,|L7.360|
0000a8  f7fffffe          BL       I2C_GetIntFlag
0000ac  2800              CMP      r0,#0
0000ae  d0fa              BEQ      |L7.166|
;;;230    	I2C_ClearIntFlag(I2C0);
0000b0  482d              LDR      r0,|L7.360|
0000b2  f7fffffe          BL       I2C_ClearIntFlag
;;;231    	
;;;232    	//send start flag
;;;233    	I2C_Ctrl(I2C0, 1, 0, 0);    
0000b6  2300              MOVS     r3,#0
0000b8  461a              MOV      r2,r3
0000ba  2101              MOVS     r1,#1
0000bc  482a              LDR      r0,|L7.360|
0000be  f7fffffe          BL       I2C_Ctrl
;;;234    	I2C_Trig(I2C0);
0000c2  4829              LDR      r0,|L7.360|
0000c4  f7fffffe          BL       I2C_Trig
;;;235    	while(I2C_GetIntFlag(I2C0) == 0);
0000c8  bf00              NOP      
                  |L7.202|
0000ca  4827              LDR      r0,|L7.360|
0000cc  f7fffffe          BL       I2C_GetIntFlag
0000d0  2800              CMP      r0,#0
0000d2  d0fa              BEQ      |L7.202|
;;;236    	I2C_ClearIntFlag(I2C0);
0000d4  4824              LDR      r0,|L7.360|
0000d6  f7fffffe          BL       I2C_ClearIntFlag
;;;237    	
;;;238    	//send read command
;;;239    	I2C0->DATA = 0xA1;
0000da  20a1              MOVS     r0,#0xa1
0000dc  4922              LDR      r1,|L7.360|
0000de  6148              STR      r0,[r1,#0x14]
;;;240    	I2C_Ctrl(I2C0, 0, 0, 1);    
0000e0  2301              MOVS     r3,#1
0000e2  2200              MOVS     r2,#0
0000e4  4611              MOV      r1,r2
0000e6  4820              LDR      r0,|L7.360|
0000e8  f7fffffe          BL       I2C_Ctrl
;;;241    	I2C_Trig(I2C0);
0000ec  481e              LDR      r0,|L7.360|
0000ee  f7fffffe          BL       I2C_Trig
;;;242        while(I2C_GetIntFlag(I2C0) == 0);
0000f2  bf00              NOP      
                  |L7.244|
0000f4  481c              LDR      r0,|L7.360|
0000f6  f7fffffe          BL       I2C_GetIntFlag
0000fa  2800              CMP      r0,#0
0000fc  d0fa              BEQ      |L7.244|
;;;243    	I2C_ClearIntFlag(I2C0);
0000fe  481a              LDR      r0,|L7.360|
000100  f7fffffe          BL       I2C_ClearIntFlag
;;;244    
;;;245    	//resive data
;;;246    	for(i=0;i<num;i++)
000104  2400              MOVS     r4,#0
000106  e019              B        |L7.316|
                  |L7.264|
;;;247    	{
;;;248    		I2C0->DATA = 0xFF;	
000108  20ff              MOVS     r0,#0xff
00010a  4917              LDR      r1,|L7.360|
00010c  6148              STR      r0,[r1,#0x14]
;;;249    		I2C_Ctrl(I2C0, 0, 0, 1);
00010e  2301              MOVS     r3,#1
000110  2200              MOVS     r2,#0
000112  4611              MOV      r1,r2
000114  4814              LDR      r0,|L7.360|
000116  f7fffffe          BL       I2C_Ctrl
;;;250    		I2C_Trig(I2C0);
00011a  4813              LDR      r0,|L7.360|
00011c  f7fffffe          BL       I2C_Trig
;;;251    		while(I2C_GetIntFlag(I2C0) == 0);
000120  bf00              NOP      
                  |L7.290|
000122  4811              LDR      r0,|L7.360|
000124  f7fffffe          BL       I2C_GetIntFlag
000128  2800              CMP      r0,#0
00012a  d0fa              BEQ      |L7.290|
;;;252    	   	I2C_ClearIntFlag(I2C0);
00012c  480e              LDR      r0,|L7.360|
00012e  f7fffffe          BL       I2C_ClearIntFlag
;;;253    		data[i] = I2C0->DATA;
000132  480d              LDR      r0,|L7.360|
000134  6940              LDR      r0,[r0,#0x14]
000136  5530              STRB     r0,[r6,r4]
000138  1c60              ADDS     r0,r4,#1              ;246
00013a  b2c4              UXTB     r4,r0                 ;246
                  |L7.316|
00013c  42bc              CMP      r4,r7                 ;246
00013e  dbe3              BLT      |L7.264|
;;;254    	}
;;;255    	
;;;256    	//send i2c stop
;;;257     	I2C_Ctrl(I2C0, 0, 1, 0);    
000140  2300              MOVS     r3,#0
000142  2201              MOVS     r2,#1
000144  4619              MOV      r1,r3
000146  4808              LDR      r0,|L7.360|
000148  f7fffffe          BL       I2C_Ctrl
;;;258     	I2C_Trig(I2C0);
00014c  4806              LDR      r0,|L7.360|
00014e  f7fffffe          BL       I2C_Trig
;;;259     	 
;;;260     	SYS_Delay(500); 	 	
000152  20ff              MOVS     r0,#0xff
000154  30f5              ADDS     r0,r0,#0xf5
000156  f7fffffe          BL       SYS_Delay
;;;261    	I2C_Close(I2C0);
00015a  4803              LDR      r0,|L7.360|
00015c  f7fffffe          BL       I2C_Close
;;;262    }
000160  bdf8              POP      {r3-r7,pc}
;;;263    
                          ENDP

000162  0000              DCW      0x0000
                  |L7.356|
                          DCD      SystemCoreClock
                  |L7.360|
                          DCD      0x40020000
                  |L7.364|
                          DCD      0x000186a0

                          AREA ||i.Write_24LC64||, CODE, READONLY, ALIGN=2

                  Write_24LC64 PROC
;;;26     
;;;27     void Write_24LC64(uint32_t address,uint8_t data )
000000  b570              PUSH     {r4-r6,lr}
;;;28     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;29     	//uint32_t i;
;;;30     	SystemCoreClock = SYS_GetHCLKFreq(); 
000006  f7fffffe          BL       SYS_GetHCLKFreq
00000a  493c              LDR      r1,|L8.252|
00000c  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;31       
;;;32     	I2C_Init(I2C0);
00000e  483c              LDR      r0,|L8.256|
000010  f7fffffe          BL       I2C_Init
;;;33     
;;;34     	I2C_Open(I2C0, 100000);
000014  493b              LDR      r1,|L8.260|
000016  483a              LDR      r0,|L8.256|
000018  f7fffffe          BL       I2C_Open
;;;35     	
;;;36        	//send i2c start
;;;37     	I2C_Ctrl(I2C0, 1, 0, 0);	//set start
00001c  2300              MOVS     r3,#0
00001e  461a              MOV      r2,r3
000020  2101              MOVS     r1,#1
000022  4837              LDR      r0,|L8.256|
000024  f7fffffe          BL       I2C_Ctrl
;;;38     	I2C_Trig(I2C0);
000028  4835              LDR      r0,|L8.256|
00002a  f7fffffe          BL       I2C_Trig
;;;39     	while(I2C_GetIntFlag(I2C0) == 0);
00002e  bf00              NOP      
                  |L8.48|
000030  4833              LDR      r0,|L8.256|
000032  f7fffffe          BL       I2C_GetIntFlag
000036  2800              CMP      r0,#0
000038  d0fa              BEQ      |L8.48|
;;;40     	I2C_ClearIntFlag(I2C0);
00003a  4831              LDR      r0,|L8.256|
00003c  f7fffffe          BL       I2C_ClearIntFlag
;;;41     	
;;;42     	//send writer command
;;;43     	I2C0->DATA = 0xA0;					//send writer command
000040  20a0              MOVS     r0,#0xa0
000042  492f              LDR      r1,|L8.256|
000044  6148              STR      r0,[r1,#0x14]
;;;44         I2C_Trig(I2C0);
000046  4608              MOV      r0,r1
000048  f7fffffe          BL       I2C_Trig
;;;45         while(I2C_GetIntFlag(I2C0) == 0);
00004c  bf00              NOP      
                  |L8.78|
00004e  482c              LDR      r0,|L8.256|
000050  f7fffffe          BL       I2C_GetIntFlag
000054  2800              CMP      r0,#0
000056  d0fa              BEQ      |L8.78|
;;;46     	I2C_ClearIntFlag(I2C0);
000058  4829              LDR      r0,|L8.256|
00005a  f7fffffe          BL       I2C_ClearIntFlag
;;;47     	
;;;48     	//send address high
;;;49     	I2C0->DATA = (address>>8)&0xFF;	
00005e  0420              LSLS     r0,r4,#16
000060  0e00              LSRS     r0,r0,#24
000062  4927              LDR      r1,|L8.256|
000064  6148              STR      r0,[r1,#0x14]
;;;50     	I2C_Ctrl(I2C0, 0, 0, 1); 
000066  2301              MOVS     r3,#1
000068  2200              MOVS     r2,#0
00006a  4611              MOV      r1,r2
00006c  4824              LDR      r0,|L8.256|
00006e  f7fffffe          BL       I2C_Ctrl
;;;51     	I2C_Trig(I2C0);
000072  4823              LDR      r0,|L8.256|
000074  f7fffffe          BL       I2C_Trig
;;;52     	while(I2C_GetIntFlag(I2C0) == 0);
000078  bf00              NOP      
                  |L8.122|
00007a  4821              LDR      r0,|L8.256|
00007c  f7fffffe          BL       I2C_GetIntFlag
000080  2800              CMP      r0,#0
000082  d0fa              BEQ      |L8.122|
;;;53     	I2C_ClearIntFlag(I2C0);
000084  481e              LDR      r0,|L8.256|
000086  f7fffffe          BL       I2C_ClearIntFlag
;;;54     	
;;;55     	//send address low
;;;56     	I2C0->DATA = address&0xFF;	
00008a  b2e0              UXTB     r0,r4
00008c  491c              LDR      r1,|L8.256|
00008e  6148              STR      r0,[r1,#0x14]
;;;57     	I2C_Ctrl(I2C0, 0, 0, 1); 
000090  2301              MOVS     r3,#1
000092  2200              MOVS     r2,#0
000094  4611              MOV      r1,r2
000096  481a              LDR      r0,|L8.256|
000098  f7fffffe          BL       I2C_Ctrl
;;;58     	I2C_Trig(I2C0);
00009c  4818              LDR      r0,|L8.256|
00009e  f7fffffe          BL       I2C_Trig
;;;59     	while(I2C_GetIntFlag(I2C0) == 0);
0000a2  bf00              NOP      
                  |L8.164|
0000a4  4816              LDR      r0,|L8.256|
0000a6  f7fffffe          BL       I2C_GetIntFlag
0000aa  2800              CMP      r0,#0
0000ac  d0fa              BEQ      |L8.164|
;;;60     	I2C_ClearIntFlag(I2C0);
0000ae  4814              LDR      r0,|L8.256|
0000b0  f7fffffe          BL       I2C_ClearIntFlag
;;;61     		
;;;62     	//send data
;;;63     	I2C0->DATA = data;					//write data to 
0000b4  4812              LDR      r0,|L8.256|
0000b6  6145              STR      r5,[r0,#0x14]
;;;64     	I2C_Ctrl(I2C0, 0, 0, 1);
0000b8  2301              MOVS     r3,#1
0000ba  2200              MOVS     r2,#0
0000bc  4611              MOV      r1,r2
0000be  f7fffffe          BL       I2C_Ctrl
;;;65     	I2C_Trig(I2C0);
0000c2  480f              LDR      r0,|L8.256|
0000c4  f7fffffe          BL       I2C_Trig
;;;66     	while(I2C_GetIntFlag(I2C0) == 0);
0000c8  bf00              NOP      
                  |L8.202|
0000ca  480d              LDR      r0,|L8.256|
0000cc  f7fffffe          BL       I2C_GetIntFlag
0000d0  2800              CMP      r0,#0
0000d2  d0fa              BEQ      |L8.202|
;;;67        	I2C_ClearIntFlag(I2C0);
0000d4  480a              LDR      r0,|L8.256|
0000d6  f7fffffe          BL       I2C_ClearIntFlag
;;;68        	
;;;69        	//send i2c stop
;;;70     	I2C_Ctrl(I2C0, 0, 1, 0); //send stop	
0000da  2300              MOVS     r3,#0
0000dc  2201              MOVS     r2,#1
0000de  4619              MOV      r1,r3
0000e0  4807              LDR      r0,|L8.256|
0000e2  f7fffffe          BL       I2C_Ctrl
;;;71     	I2C_Trig(I2C0);
0000e6  4806              LDR      r0,|L8.256|
0000e8  f7fffffe          BL       I2C_Trig
;;;72     		
;;;73     	SYS_Delay(100);
0000ec  2064              MOVS     r0,#0x64
0000ee  f7fffffe          BL       SYS_Delay
;;;74     	I2C_Close(I2C0);	
0000f2  4803              LDR      r0,|L8.256|
0000f4  f7fffffe          BL       I2C_Close
;;;75     }
0000f8  bd70              POP      {r4-r6,pc}
;;;76     
                          ENDP

0000fa  0000              DCW      0x0000
                  |L8.252|
                          DCD      SystemCoreClock
                  |L8.256|
                          DCD      0x40020000
                  |L8.260|
                          DCD      0x000186a0

                          AREA ||i.Write_24LC64_Array||, CODE, READONLY, ALIGN=2

                  Write_24LC64_Array PROC
;;;76     
;;;77     void Write_24LC64_Array(uint32_t address,uint8_t *data, uint8_t num)
000000  b5f8              PUSH     {r3-r7,lr}
;;;78     {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4617              MOV      r7,r2
;;;79     	uint32_t i;
;;;80     
;;;81     	SystemCoreClock = SYS_GetHCLKFreq(); 
000008  f7fffffe          BL       SYS_GetHCLKFreq
00000c  493f              LDR      r1,|L9.268|
00000e  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;82       
;;;83     	I2C_Init(I2C0);
000010  483f              LDR      r0,|L9.272|
000012  f7fffffe          BL       I2C_Init
;;;84     
;;;85     	I2C_Open(I2C0, 100000);
000016  493f              LDR      r1,|L9.276|
000018  483d              LDR      r0,|L9.272|
00001a  f7fffffe          BL       I2C_Open
;;;86     	
;;;87        	//send i2c start
;;;88     	I2C_Ctrl(I2C0, 1, 0, 0);	//set start
00001e  2300              MOVS     r3,#0
000020  461a              MOV      r2,r3
000022  2101              MOVS     r1,#1
000024  483a              LDR      r0,|L9.272|
000026  f7fffffe          BL       I2C_Ctrl
;;;89     	I2C_Trig(I2C0);
00002a  4839              LDR      r0,|L9.272|
00002c  f7fffffe          BL       I2C_Trig
;;;90     	while(I2C_GetIntFlag(I2C0) == 0);
000030  bf00              NOP      
                  |L9.50|
000032  4837              LDR      r0,|L9.272|
000034  f7fffffe          BL       I2C_GetIntFlag
000038  2800              CMP      r0,#0
00003a  d0fa              BEQ      |L9.50|
;;;91     	I2C_ClearIntFlag(I2C0);
00003c  4834              LDR      r0,|L9.272|
00003e  f7fffffe          BL       I2C_ClearIntFlag
;;;92     	
;;;93     	//send writer command
;;;94     	I2C0->DATA = 0xA0;					//send writer command
000042  20a0              MOVS     r0,#0xa0
000044  4932              LDR      r1,|L9.272|
000046  6148              STR      r0,[r1,#0x14]
;;;95         I2C_Trig(I2C0);
000048  4608              MOV      r0,r1
00004a  f7fffffe          BL       I2C_Trig
;;;96         while(I2C_GetIntFlag(I2C0) == 0);
00004e  bf00              NOP      
                  |L9.80|
000050  482f              LDR      r0,|L9.272|
000052  f7fffffe          BL       I2C_GetIntFlag
000056  2800              CMP      r0,#0
000058  d0fa              BEQ      |L9.80|
;;;97     	I2C_ClearIntFlag(I2C0);
00005a  482d              LDR      r0,|L9.272|
00005c  f7fffffe          BL       I2C_ClearIntFlag
;;;98     	
;;;99     	//send address high
;;;100    	I2C0->DATA = (address>>8)&0xFF;	
000060  0428              LSLS     r0,r5,#16
000062  0e00              LSRS     r0,r0,#24
000064  492a              LDR      r1,|L9.272|
000066  6148              STR      r0,[r1,#0x14]
;;;101    	I2C_Ctrl(I2C0, 0, 0, 1); 
000068  2301              MOVS     r3,#1
00006a  2200              MOVS     r2,#0
00006c  4611              MOV      r1,r2
00006e  4828              LDR      r0,|L9.272|
000070  f7fffffe          BL       I2C_Ctrl
;;;102    	I2C_Trig(I2C0);
000074  4826              LDR      r0,|L9.272|
000076  f7fffffe          BL       I2C_Trig
;;;103    	while(I2C_GetIntFlag(I2C0) == 0);
00007a  bf00              NOP      
                  |L9.124|
00007c  4824              LDR      r0,|L9.272|
00007e  f7fffffe          BL       I2C_GetIntFlag
000082  2800              CMP      r0,#0
000084  d0fa              BEQ      |L9.124|
;;;104    	I2C_ClearIntFlag(I2C0);
000086  4822              LDR      r0,|L9.272|
000088  f7fffffe          BL       I2C_ClearIntFlag
;;;105    	
;;;106    	//send address low
;;;107    	I2C0->DATA = address&0xFF;	
00008c  b2e8              UXTB     r0,r5
00008e  4920              LDR      r1,|L9.272|
000090  6148              STR      r0,[r1,#0x14]
;;;108    	I2C_Ctrl(I2C0, 0, 0, 1); 
000092  2301              MOVS     r3,#1
000094  2200              MOVS     r2,#0
000096  4611              MOV      r1,r2
000098  481d              LDR      r0,|L9.272|
00009a  f7fffffe          BL       I2C_Ctrl
;;;109    	I2C_Trig(I2C0);
00009e  481c              LDR      r0,|L9.272|
0000a0  f7fffffe          BL       I2C_Trig
;;;110    	while(I2C_GetIntFlag(I2C0) == 0);
0000a4  bf00              NOP      
                  |L9.166|
0000a6  481a              LDR      r0,|L9.272|
0000a8  f7fffffe          BL       I2C_GetIntFlag
0000ac  2800              CMP      r0,#0
0000ae  d0fa              BEQ      |L9.166|
;;;111    	I2C_ClearIntFlag(I2C0);
0000b0  4817              LDR      r0,|L9.272|
0000b2  f7fffffe          BL       I2C_ClearIntFlag
;;;112    		
;;;113    	//send data
;;;114    	for(i=0;i<num;i++)
0000b6  2400              MOVS     r4,#0
0000b8  e015              B        |L9.230|
                  |L9.186|
;;;115    	{
;;;116    		I2C0->DATA = data[i];					//write data to 
0000ba  5d30              LDRB     r0,[r6,r4]
0000bc  4914              LDR      r1,|L9.272|
0000be  6148              STR      r0,[r1,#0x14]
;;;117    		I2C_Ctrl(I2C0, 0, 0, 1);
0000c0  2301              MOVS     r3,#1
0000c2  2200              MOVS     r2,#0
0000c4  4611              MOV      r1,r2
0000c6  4812              LDR      r0,|L9.272|
0000c8  f7fffffe          BL       I2C_Ctrl
;;;118    		I2C_Trig(I2C0);
0000cc  4810              LDR      r0,|L9.272|
0000ce  f7fffffe          BL       I2C_Trig
;;;119    		while(I2C_GetIntFlag(I2C0) == 0);
0000d2  bf00              NOP      
                  |L9.212|
0000d4  480e              LDR      r0,|L9.272|
0000d6  f7fffffe          BL       I2C_GetIntFlag
0000da  2800              CMP      r0,#0
0000dc  d0fa              BEQ      |L9.212|
;;;120    	   	I2C_ClearIntFlag(I2C0);
0000de  480c              LDR      r0,|L9.272|
0000e0  f7fffffe          BL       I2C_ClearIntFlag
0000e4  1c64              ADDS     r4,r4,#1              ;114
                  |L9.230|
0000e6  42bc              CMP      r4,r7                 ;114
0000e8  d3e7              BCC      |L9.186|
;;;121    	}
;;;122       	
;;;123       	//send i2c stop
;;;124    	I2C_Ctrl(I2C0, 0, 1, 0); //send stop	
0000ea  2300              MOVS     r3,#0
0000ec  2201              MOVS     r2,#1
0000ee  4619              MOV      r1,r3
0000f0  4807              LDR      r0,|L9.272|
0000f2  f7fffffe          BL       I2C_Ctrl
;;;125    	I2C_Trig(I2C0);
0000f6  4806              LDR      r0,|L9.272|
0000f8  f7fffffe          BL       I2C_Trig
;;;126    		
;;;127    	SYS_Delay(1000);
0000fc  207d              MOVS     r0,#0x7d
0000fe  00c0              LSLS     r0,r0,#3
000100  f7fffffe          BL       SYS_Delay
;;;128    	I2C_Close(I2C0);	
000104  4802              LDR      r0,|L9.272|
000106  f7fffffe          BL       I2C_Close
;;;129    }
00010a  bdf8              POP      {r3-r7,pc}
;;;130    
                          ENDP

                  |L9.268|
                          DCD      SystemCoreClock
                  |L9.272|
                          DCD      0x40020000
                  |L9.276|
                          DCD      0x000186a0
