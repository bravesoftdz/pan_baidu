; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -o.\obj\nano1xx_isr.o --depend=.\obj\nano1xx_isr.d --feedback=.\obj\START_KIT.fed --cpu=Cortex-M0 --apcs=interwork -O0 -I.\Libraries -I.\Include -I.\Users -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\Nuvoton -D__MICROLIB -D__LCDDISPLAY_BTL001_LB_H --omf_browse=.\obj\nano1xx_isr.crf Libraries\nano1xx_isr.c]
                          THUMB

                          AREA ||i.ADC_IRQHandler||, CODE, READONLY, ALIGN=2

                  ADC_IRQHandler PROC
;;;23       */
;;;24     void ADC_IRQHandler(void)
000000  4906              LDR      r1,|L1.28|
;;;25     {
;;;26     
;;;27             uint32_t reg = ADC->SR;
000002  6988              LDR      r0,[r1,#0x18]
;;;28     
;;;29             if(reg & 1)
000004  07c1              LSLS     r1,r0,#31
000006  0fc9              LSRS     r1,r1,#31
000008  d002              BEQ      |L1.16|
;;;30                     gu8AdcIntFlag = 1;
00000a  2101              MOVS     r1,#1
00000c  4a04              LDR      r2,|L1.32|
00000e  7011              STRB     r1,[r2,#0]
                  |L1.16|
;;;31     
;;;32             ADC->SR = reg & 0x7;
000010  0741              LSLS     r1,r0,#29
000012  0f49              LSRS     r1,r1,#29
000014  4a01              LDR      r2,|L1.28|
000016  6191              STR      r1,[r2,#0x18]
;;;33             return;
;;;34     
;;;35     }
000018  4770              BX       lr
;;;36     
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0x400e0040
                  |L1.32|
                          DCD      gu8AdcIntFlag

                          AREA ||i.EINT0_IRQHandler||, CODE, READONLY, ALIGN=2

                  EINT0_IRQHandler PROC
;;;45       */
;;;46     void EINT0_IRQHandler(void)
000000  2001              MOVS     r0,#1
;;;47     {
;;;48     	/* EINT0 (GPB14) Clear the interrupt */
;;;49     	GPIOB->ISR = 1 << 9;
000002  0240              LSLS     r0,r0,#9
000004  4910              LDR      r1,|L2.72|
000006  6208              STR      r0,[r1,#0x20]
;;;50         KeyFlag = 1;
000008  2001              MOVS     r0,#1
00000a  4910              LDR      r1,|L2.76|
00000c  7008              STRB     r0,[r1,#0]
;;;51     	Sleep = 0;
00000e  2000              MOVS     r0,#0
000010  490f              LDR      r1,|L2.80|
000012  6008              STR      r0,[r1,#0]  ; Sleep
;;;52     	DispFlag = 1;
000014  2001              MOVS     r0,#1
000016  490f              LDR      r1,|L2.84|
000018  7008              STRB     r0,[r1,#0]
;;;53     	InitFlag = 1;
00001a  490f              LDR      r1,|L2.88|
00001c  7008              STRB     r0,[r1,#0]
;;;54     	VolDetFlag = 1;
00001e  490f              LDR      r1,|L2.92|
000020  7008              STRB     r0,[r1,#0]
;;;55     	if(SystemStatus == 1)
000022  480f              LDR      r0,|L2.96|
000024  7800              LDRB     r0,[r0,#0]  ; SystemStatus
000026  2801              CMP      r0,#1
000028  d103              BNE      |L2.50|
;;;56     	{		
;;;57     		DispType = DISP_INIT;
00002a  2016              MOVS     r0,#0x16
00002c  490d              LDR      r1,|L2.100|
00002e  7008              STRB     r0,[r1,#0]
000030  e002              B        |L2.56|
                  |L2.50|
;;;58     	}
;;;59     	else
;;;60     	{
;;;61     		DispType = DISP_VOLUME;
000032  2013              MOVS     r0,#0x13
000034  490b              LDR      r1,|L2.100|
000036  7008              STRB     r0,[r1,#0]
                  |L2.56|
;;;62     	}
;;;63     	if(MachineInfo.RestVolume >= UNIT)
000038  480b              LDR      r0,|L2.104|
00003a  68c0              LDR      r0,[r0,#0xc]  ; MachineInfo
00003c  2864              CMP      r0,#0x64
00003e  d302              BCC      |L2.70|
;;;64     	{
;;;65     		Value = OPEN;
000040  2001              MOVS     r0,#1
000042  490a              LDR      r1,|L2.108|
000044  7008              STRB     r0,[r1,#0]
                  |L2.70|
;;;66     	}
;;;67     }
000046  4770              BX       lr
;;;68     
                          ENDP

                  |L2.72|
                          DCD      0x50004040
                  |L2.76|
                          DCD      KeyFlag
                  |L2.80|
                          DCD      Sleep
                  |L2.84|
                          DCD      DispFlag
                  |L2.88|
                          DCD      InitFlag
                  |L2.92|
                          DCD      VolDetFlag
                  |L2.96|
                          DCD      SystemStatus
                  |L2.100|
                          DCD      DispType
                  |L2.104|
                          DCD      MachineInfo
                  |L2.108|
                          DCD      Value

                          AREA ||i.EINT1_IRQHandler||, CODE, READONLY, ALIGN=2

                  EINT1_IRQHandler PROC
;;;76       */
;;;77     void EINT1_IRQHandler(void)
000000  2001              MOVS     r0,#1
;;;78     {
;;;79     	/* EINT1 (GPB15) Clear the interrupt */
;;;80     	GPIOB->ISR = 1 << 15;
000002  03c0              LSLS     r0,r0,#15
000004  4917              LDR      r1,|L3.100|
000006  6208              STR      r0,[r1,#0x20]
;;;81     
;;;82     	DecFlag = 1;
000008  2001              MOVS     r0,#1
00000a  4917              LDR      r1,|L3.104|
00000c  7008              STRB     r0,[r1,#0]
;;;83         if(MachineInfo.RestVolume >= UNIT)
00000e  4817              LDR      r0,|L3.108|
000010  68c0              LDR      r0,[r0,#0xc]  ; MachineInfo
000012  2864              CMP      r0,#0x64
000014  d31b              BCC      |L3.78|
;;;84     	{
;;;85     	    MachineInfo.RestVolume -= UNIT;
000016  4815              LDR      r0,|L3.108|
000018  68c0              LDR      r0,[r0,#0xc]  ; MachineInfo
00001a  3864              SUBS     r0,r0,#0x64
00001c  4913              LDR      r1,|L3.108|
00001e  60c8              STR      r0,[r1,#0xc]  ; MachineInfo
;;;86     		DecFlag = 0;
000020  2000              MOVS     r0,#0
000022  4911              LDR      r1,|L3.104|
000024  7008              STRB     r0,[r1,#0]
;;;87     		SaveFlag = REST_VOLUME;
000026  2020              MOVS     r0,#0x20
000028  4911              LDR      r1,|L3.112|
00002a  7008              STRB     r0,[r1,#0]
;;;88     		if((MachineInfo.RestVolume < WARNING_VOL) && (WarningFlag == 0))
00002c  480f              LDR      r0,|L3.108|
00002e  68c0              LDR      r0,[r0,#0xc]  ; MachineInfo
000030  217d              MOVS     r1,#0x7d
000032  00c9              LSLS     r1,r1,#3
000034  4288              CMP      r0,r1
000036  d20d              BCS      |L3.84|
000038  480e              LDR      r0,|L3.116|
00003a  7800              LDRB     r0,[r0,#0]  ; WarningFlag
00003c  2800              CMP      r0,#0
00003e  d109              BNE      |L3.84|
;;;89     		{
;;;90     			WarningFlag = 1;
000040  2001              MOVS     r0,#1
000042  490c              LDR      r1,|L3.116|
000044  7008              STRB     r0,[r1,#0]
;;;91     			Value = CLOSE;
000046  2002              MOVS     r0,#2
000048  490b              LDR      r1,|L3.120|
00004a  7008              STRB     r0,[r1,#0]
00004c  e002              B        |L3.84|
                  |L3.78|
;;;92     		}
;;;93     	}
;;;94     	else
;;;95     	{
;;;96     		Value = CLOSE;
00004e  2002              MOVS     r0,#2
000050  4909              LDR      r1,|L3.120|
000052  7008              STRB     r0,[r1,#0]
                  |L3.84|
;;;97     	}
;;;98     	InitFlag = 2;
000054  2002              MOVS     r0,#2
000056  4909              LDR      r1,|L3.124|
000058  7008              STRB     r0,[r1,#0]
;;;99     	VolDetFlag = 1;
00005a  2001              MOVS     r0,#1
00005c  4908              LDR      r1,|L3.128|
00005e  7008              STRB     r0,[r1,#0]
;;;100    }
000060  4770              BX       lr
;;;101    /**   
                          ENDP

000062  0000              DCW      0x0000
                  |L3.100|
                          DCD      0x50004040
                  |L3.104|
                          DCD      DecFlag
                  |L3.108|
                          DCD      MachineInfo
                  |L3.112|
                          DCD      SaveFlag
                  |L3.116|
                          DCD      WarningFlag
                  |L3.120|
                          DCD      Value
                  |L3.124|
                          DCD      InitFlag
                  |L3.128|
                          DCD      VolDetFlag

                          AREA ||i.PDWU_IRQHandler||, CODE, READONLY, ALIGN=2

                  PDWU_IRQHandler PROC
;;;135      */
;;;136    void PDWU_IRQHandler()
000000  b510              PUSH     {r4,lr}
;;;137    {
;;;138    	CLK->WK_INTSTS = 1; /* clear interrupt status */
000002  2001              MOVS     r0,#1
000004  4902              LDR      r1,|L4.16|
000006  6308              STR      r0,[r1,#0x30]
;;;139        Leave_PowerDown();
000008  f7fffffe          BL       Leave_PowerDown
;;;140    }
00000c  bd10              POP      {r4,pc}
;;;141    
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      0x50000200

                          AREA ||i.TMR0_IRQHandler||, CODE, READONLY, ALIGN=2

                  TMR0_IRQHandler PROC
;;;108    
;;;109    void TMR0_IRQHandler(void)
000000  2000              MOVS     r0,#0
;;;110    {
;;;111    	uint8_t i=0;
;;;112    
;;;113    	TIMER0->ISR = TIMER_ISR_TMRIS;
000002  2101              MOVS     r1,#1
000004  4a19              LDR      r2,|L5.108|
000006  6111              STR      r1,[r2,#0x10]
;;;114    	count++;
000008  4919              LDR      r1,|L5.112|
00000a  7809              LDRB     r1,[r1,#0]  ; count
00000c  1c49              ADDS     r1,r1,#1
00000e  4a18              LDR      r2,|L5.112|
000010  7011              STRB     r1,[r2,#0]
;;;115    	if(count==5)
000012  4611              MOV      r1,r2
000014  7809              LDRB     r1,[r1,#0]  ; count
000016  2905              CMP      r1,#5
000018  d127              BNE      |L5.106|
;;;116    	{
;;;117    		GPIO_ClrBit(GPIOC, loop);
00001a  4a16              LDR      r2,|L5.116|
00001c  7811              LDRB     r1,[r2,#0]  ; loop
00001e  4a16              LDR      r2,|L5.120|
000020  6892              LDR      r2,[r2,#8]
000022  2301              MOVS     r3,#1
000024  408b              LSLS     r3,r3,r1
000026  439a              BICS     r2,r2,r3
000028  4b13              LDR      r3,|L5.120|
00002a  609a              STR      r2,[r3,#8]
00002c  bf00              NOP      
;;;118    		loop++;
00002e  4911              LDR      r1,|L5.116|
000030  7809              LDRB     r1,[r1,#0]  ; loop
000032  1c49              ADDS     r1,r1,#1
000034  4a0f              LDR      r2,|L5.116|
000036  7011              STRB     r1,[r2,#0]
;;;119    		count=0;
000038  2100              MOVS     r1,#0
00003a  4a0d              LDR      r2,|L5.112|
00003c  7011              STRB     r1,[r2,#0]
;;;120    		if(loop == 17)
00003e  490d              LDR      r1,|L5.116|
000040  7809              LDRB     r1,[r1,#0]  ; loop
000042  2911              CMP      r1,#0x11
000044  d111              BNE      |L5.106|
;;;121    		{
;;;122    			for(i=12;i<16;i++)
000046  200c              MOVS     r0,#0xc
000048  e00a              B        |L5.96|
                  |L5.74|
;;;123    			{
;;;124    				GPIO_SetBit(GPIOC, i);
00004a  bf00              NOP      
00004c  490a              LDR      r1,|L5.120|
00004e  6889              LDR      r1,[r1,#8]
000050  2201              MOVS     r2,#1
000052  4082              LSLS     r2,r2,r0
000054  4311              ORRS     r1,r1,r2
000056  4a08              LDR      r2,|L5.120|
000058  6091              STR      r1,[r2,#8]
00005a  bf00              NOP      
00005c  1c41              ADDS     r1,r0,#1              ;122
00005e  b2c8              UXTB     r0,r1                 ;122
                  |L5.96|
000060  2810              CMP      r0,#0x10              ;122
000062  dbf2              BLT      |L5.74|
;;;125    			}
;;;126    			loop=12;
000064  210c              MOVS     r1,#0xc
000066  4a03              LDR      r2,|L5.116|
000068  7011              STRB     r1,[r2,#0]
                  |L5.106|
;;;127    	   }
;;;128    	}
;;;129    }
00006a  4770              BX       lr
;;;130    
                          ENDP

                  |L5.108|
                          DCD      0x40010000
                  |L5.112|
                          DCD      count
                  |L5.116|
                          DCD      loop
                  |L5.120|
                          DCD      0x50004080

                          AREA ||.data||, DATA, ALIGN=0

                  count
000000  00                DCB      0x00
                  loop
000001  0c                DCB      0x0c
